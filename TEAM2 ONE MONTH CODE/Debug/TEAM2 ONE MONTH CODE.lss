
TEAM2 ONE MONTH CODE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000035d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00802000  000035d0  00003664  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000036  0080201c  0080201c  00003680  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00003680  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000036dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000004d0  00000000  00000000  00003720  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000eb64  00000000  00000000  00003bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000293d  00000000  00000000  00012754  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000b257  00000000  00000000  00015091  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000f14  00000000  00000000  000202e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0002b104  00000000  00000000  000211fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004907  00000000  00000000  0004c300  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003b0  00000000  00000000  00050c08  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000be02  00000000  00000000  00050fb8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a7 c1       	rjmp	.+846    	; 0x350 <__ctors_end>
       2:	00 00       	nop
       4:	cb c1       	rjmp	.+918    	; 0x39c <__bad_interrupt>
       6:	00 00       	nop
       8:	c9 c1       	rjmp	.+914    	; 0x39c <__bad_interrupt>
       a:	00 00       	nop
       c:	c7 c1       	rjmp	.+910    	; 0x39c <__bad_interrupt>
       e:	00 00       	nop
      10:	c5 c1       	rjmp	.+906    	; 0x39c <__bad_interrupt>
      12:	00 00       	nop
      14:	c3 c1       	rjmp	.+902    	; 0x39c <__bad_interrupt>
      16:	00 00       	nop
      18:	c1 c1       	rjmp	.+898    	; 0x39c <__bad_interrupt>
      1a:	00 00       	nop
      1c:	bf c1       	rjmp	.+894    	; 0x39c <__bad_interrupt>
      1e:	00 00       	nop
      20:	bd c1       	rjmp	.+890    	; 0x39c <__bad_interrupt>
      22:	00 00       	nop
      24:	bb c1       	rjmp	.+886    	; 0x39c <__bad_interrupt>
      26:	00 00       	nop
      28:	ba c1       	rjmp	.+884    	; 0x39e <__vector_10>
      2a:	00 00       	nop
      2c:	db c1       	rjmp	.+950    	; 0x3e4 <__vector_11>
      2e:	00 00       	nop
      30:	b5 c1       	rjmp	.+874    	; 0x39c <__bad_interrupt>
      32:	00 00       	nop
      34:	b3 c1       	rjmp	.+870    	; 0x39c <__bad_interrupt>
      36:	00 00       	nop
      38:	b1 c1       	rjmp	.+866    	; 0x39c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	af c1       	rjmp	.+862    	; 0x39c <__bad_interrupt>
      3e:	00 00       	nop
      40:	ad c1       	rjmp	.+858    	; 0x39c <__bad_interrupt>
      42:	00 00       	nop
      44:	ab c1       	rjmp	.+854    	; 0x39c <__bad_interrupt>
      46:	00 00       	nop
      48:	a9 c1       	rjmp	.+850    	; 0x39c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	a7 c1       	rjmp	.+846    	; 0x39c <__bad_interrupt>
      4e:	00 00       	nop
      50:	a5 c1       	rjmp	.+842    	; 0x39c <__bad_interrupt>
      52:	00 00       	nop
      54:	a3 c1       	rjmp	.+838    	; 0x39c <__bad_interrupt>
      56:	00 00       	nop
      58:	a1 c1       	rjmp	.+834    	; 0x39c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	9f c1       	rjmp	.+830    	; 0x39c <__bad_interrupt>
      5e:	00 00       	nop
      60:	9d c1       	rjmp	.+826    	; 0x39c <__bad_interrupt>
      62:	00 00       	nop
      64:	9b c1       	rjmp	.+822    	; 0x39c <__bad_interrupt>
      66:	00 00       	nop
      68:	99 c1       	rjmp	.+818    	; 0x39c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	97 c1       	rjmp	.+814    	; 0x39c <__bad_interrupt>
      6e:	00 00       	nop
      70:	95 c1       	rjmp	.+810    	; 0x39c <__bad_interrupt>
      72:	00 00       	nop
      74:	93 c1       	rjmp	.+806    	; 0x39c <__bad_interrupt>
      76:	00 00       	nop
      78:	91 c1       	rjmp	.+802    	; 0x39c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	8f c1       	rjmp	.+798    	; 0x39c <__bad_interrupt>
      7e:	00 00       	nop
      80:	8d c1       	rjmp	.+794    	; 0x39c <__bad_interrupt>
      82:	00 00       	nop
      84:	8b c1       	rjmp	.+790    	; 0x39c <__bad_interrupt>
      86:	00 00       	nop
      88:	89 c1       	rjmp	.+786    	; 0x39c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	87 c1       	rjmp	.+782    	; 0x39c <__bad_interrupt>
      8e:	00 00       	nop
      90:	85 c1       	rjmp	.+778    	; 0x39c <__bad_interrupt>
      92:	00 00       	nop
      94:	83 c1       	rjmp	.+774    	; 0x39c <__bad_interrupt>
      96:	00 00       	nop
      98:	81 c1       	rjmp	.+770    	; 0x39c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	45 c5       	rjmp	.+2698   	; 0xb28 <__vector_39>
      9e:	00 00       	nop
      a0:	80 c5       	rjmp	.+2816   	; 0xba2 <__vector_40>
      a2:	00 00       	nop
      a4:	bb c5       	rjmp	.+2934   	; 0xc1c <__vector_41>
      a6:	00 00       	nop
      a8:	f6 c5       	rjmp	.+3052   	; 0xc96 <__vector_42>
      aa:	00 00       	nop
      ac:	77 c1       	rjmp	.+750    	; 0x39c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	75 c1       	rjmp	.+746    	; 0x39c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	73 c1       	rjmp	.+742    	; 0x39c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	71 c1       	rjmp	.+738    	; 0x39c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	6f c1       	rjmp	.+734    	; 0x39c <__bad_interrupt>
      be:	00 00       	nop
      c0:	6d c1       	rjmp	.+730    	; 0x39c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	6b c1       	rjmp	.+726    	; 0x39c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	69 c1       	rjmp	.+722    	; 0x39c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	67 c1       	rjmp	.+718    	; 0x39c <__bad_interrupt>
      ce:	00 00       	nop
      d0:	65 c1       	rjmp	.+714    	; 0x39c <__bad_interrupt>
      d2:	00 00       	nop
      d4:	63 c1       	rjmp	.+710    	; 0x39c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	61 c1       	rjmp	.+706    	; 0x39c <__bad_interrupt>
      da:	00 00       	nop
      dc:	5f c1       	rjmp	.+702    	; 0x39c <__bad_interrupt>
      de:	00 00       	nop
      e0:	5d c1       	rjmp	.+698    	; 0x39c <__bad_interrupt>
      e2:	00 00       	nop
      e4:	5b c1       	rjmp	.+694    	; 0x39c <__bad_interrupt>
      e6:	00 00       	nop
      e8:	59 c1       	rjmp	.+690    	; 0x39c <__bad_interrupt>
      ea:	00 00       	nop
      ec:	57 c1       	rjmp	.+686    	; 0x39c <__bad_interrupt>
      ee:	00 00       	nop
      f0:	55 c1       	rjmp	.+682    	; 0x39c <__bad_interrupt>
      f2:	00 00       	nop
      f4:	53 c1       	rjmp	.+678    	; 0x39c <__bad_interrupt>
      f6:	00 00       	nop
      f8:	51 c1       	rjmp	.+674    	; 0x39c <__bad_interrupt>
      fa:	00 00       	nop
      fc:	4f c1       	rjmp	.+670    	; 0x39c <__bad_interrupt>
      fe:	00 00       	nop
     100:	4d c1       	rjmp	.+666    	; 0x39c <__bad_interrupt>
     102:	00 00       	nop
     104:	4b c1       	rjmp	.+662    	; 0x39c <__bad_interrupt>
     106:	00 00       	nop
     108:	49 c1       	rjmp	.+658    	; 0x39c <__bad_interrupt>
     10a:	00 00       	nop
     10c:	47 c1       	rjmp	.+654    	; 0x39c <__bad_interrupt>
     10e:	00 00       	nop
     110:	45 c1       	rjmp	.+650    	; 0x39c <__bad_interrupt>
     112:	00 00       	nop
     114:	43 c1       	rjmp	.+646    	; 0x39c <__bad_interrupt>
     116:	00 00       	nop
     118:	41 c1       	rjmp	.+642    	; 0x39c <__bad_interrupt>
     11a:	00 00       	nop
     11c:	11 c4       	rjmp	.+2082   	; 0x940 <__vector_71>
     11e:	00 00       	nop
     120:	4c c4       	rjmp	.+2200   	; 0x9ba <__vector_72>
     122:	00 00       	nop
     124:	87 c4       	rjmp	.+2318   	; 0xa34 <__vector_73>
     126:	00 00       	nop
     128:	c2 c4       	rjmp	.+2436   	; 0xaae <__vector_74>
     12a:	00 00       	nop
     12c:	37 c1       	rjmp	.+622    	; 0x39c <__bad_interrupt>
     12e:	00 00       	nop
     130:	35 c1       	rjmp	.+618    	; 0x39c <__bad_interrupt>
     132:	00 00       	nop
     134:	33 c1       	rjmp	.+614    	; 0x39c <__bad_interrupt>
     136:	00 00       	nop
     138:	31 c1       	rjmp	.+610    	; 0x39c <__bad_interrupt>
     13a:	00 00       	nop
     13c:	2f c1       	rjmp	.+606    	; 0x39c <__bad_interrupt>
     13e:	00 00       	nop
     140:	2d c1       	rjmp	.+602    	; 0x39c <__bad_interrupt>
     142:	00 00       	nop
     144:	2b c1       	rjmp	.+598    	; 0x39c <__bad_interrupt>
     146:	00 00       	nop
     148:	29 c1       	rjmp	.+594    	; 0x39c <__bad_interrupt>
     14a:	00 00       	nop
     14c:	27 c1       	rjmp	.+590    	; 0x39c <__bad_interrupt>
     14e:	00 00       	nop
     150:	25 c1       	rjmp	.+586    	; 0x39c <__bad_interrupt>
     152:	00 00       	nop
     154:	23 c1       	rjmp	.+582    	; 0x39c <__bad_interrupt>
     156:	00 00       	nop
     158:	21 c1       	rjmp	.+578    	; 0x39c <__bad_interrupt>
     15a:	00 00       	nop
     15c:	1f c1       	rjmp	.+574    	; 0x39c <__bad_interrupt>
     15e:	00 00       	nop
     160:	1d c1       	rjmp	.+570    	; 0x39c <__bad_interrupt>
     162:	00 00       	nop
     164:	1b c1       	rjmp	.+566    	; 0x39c <__bad_interrupt>
     166:	00 00       	nop
     168:	19 c1       	rjmp	.+562    	; 0x39c <__bad_interrupt>
     16a:	00 00       	nop
     16c:	17 c1       	rjmp	.+558    	; 0x39c <__bad_interrupt>
     16e:	00 00       	nop
     170:	15 c1       	rjmp	.+554    	; 0x39c <__bad_interrupt>
     172:	00 00       	nop
     174:	13 c1       	rjmp	.+550    	; 0x39c <__bad_interrupt>
     176:	00 00       	nop
     178:	11 c1       	rjmp	.+546    	; 0x39c <__bad_interrupt>
     17a:	00 00       	nop
     17c:	0f c1       	rjmp	.+542    	; 0x39c <__bad_interrupt>
     17e:	00 00       	nop
     180:	0d c1       	rjmp	.+538    	; 0x39c <__bad_interrupt>
     182:	00 00       	nop
     184:	0b c1       	rjmp	.+534    	; 0x39c <__bad_interrupt>
     186:	00 00       	nop
     188:	09 c1       	rjmp	.+530    	; 0x39c <__bad_interrupt>
     18a:	00 00       	nop
     18c:	07 c1       	rjmp	.+526    	; 0x39c <__bad_interrupt>
     18e:	00 00       	nop
     190:	05 c1       	rjmp	.+522    	; 0x39c <__bad_interrupt>
     192:	00 00       	nop
     194:	03 c1       	rjmp	.+518    	; 0x39c <__bad_interrupt>
     196:	00 00       	nop
     198:	01 c1       	rjmp	.+514    	; 0x39c <__bad_interrupt>
     19a:	00 00       	nop
     19c:	ff c0       	rjmp	.+510    	; 0x39c <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	fd c0       	rjmp	.+506    	; 0x39c <__bad_interrupt>
     1a2:	00 00       	nop
     1a4:	fb c0       	rjmp	.+502    	; 0x39c <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	f9 c0       	rjmp	.+498    	; 0x39c <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	f7 c0       	rjmp	.+494    	; 0x39c <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	f5 c0       	rjmp	.+490    	; 0x39c <__bad_interrupt>
     1b2:	00 00       	nop
     1b4:	f3 c0       	rjmp	.+486    	; 0x39c <__bad_interrupt>
     1b6:	00 00       	nop
     1b8:	f1 c0       	rjmp	.+482    	; 0x39c <__bad_interrupt>
     1ba:	00 00       	nop
     1bc:	ef c0       	rjmp	.+478    	; 0x39c <__bad_interrupt>
     1be:	00 00       	nop
     1c0:	ed c0       	rjmp	.+474    	; 0x39c <__bad_interrupt>
     1c2:	00 00       	nop
     1c4:	eb c0       	rjmp	.+470    	; 0x39c <__bad_interrupt>
     1c6:	00 00       	nop
     1c8:	e9 c0       	rjmp	.+466    	; 0x39c <__bad_interrupt>
     1ca:	00 00       	nop
     1cc:	e7 c0       	rjmp	.+462    	; 0x39c <__bad_interrupt>
     1ce:	00 00       	nop
     1d0:	e5 c0       	rjmp	.+458    	; 0x39c <__bad_interrupt>
     1d2:	00 00       	nop
     1d4:	e3 c0       	rjmp	.+454    	; 0x39c <__bad_interrupt>
     1d6:	00 00       	nop
     1d8:	e1 c0       	rjmp	.+450    	; 0x39c <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	df c0       	rjmp	.+446    	; 0x39c <__bad_interrupt>
     1de:	00 00       	nop
     1e0:	dd c0       	rjmp	.+442    	; 0x39c <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	db c0       	rjmp	.+438    	; 0x39c <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	d9 c0       	rjmp	.+434    	; 0x39c <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	d7 c0       	rjmp	.+430    	; 0x39c <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	d5 c0       	rjmp	.+426    	; 0x39c <__bad_interrupt>
     1f2:	00 00       	nop
     1f4:	08 00       	.word	0x0008	; ????
     1f6:	00 00       	nop
     1f8:	be 92       	st	-X, r11
     1fa:	24 49       	sbci	r18, 0x94	; 148
     1fc:	12 3e       	cpi	r17, 0xE2	; 226
     1fe:	ab aa       	std	Y+51, r10	; 0x33
     200:	aa 2a       	or	r10, r26
     202:	be cd       	rjmp	.-1156   	; 0xfffffd80 <__eeprom_end+0xff7efd80>
     204:	cc cc       	rjmp	.-1640   	; 0xfffffb9e <__eeprom_end+0xff7efb9e>
     206:	4c 3e       	cpi	r20, 0xEC	; 236
     208:	00 00       	nop
     20a:	00 80       	ld	r0, Z
     20c:	be ab       	std	Y+54, r27	; 0x36
     20e:	aa aa       	std	Y+50, r10	; 0x32
     210:	aa 3e       	cpi	r26, 0xEA	; 234
     212:	00 00       	nop
     214:	00 00       	nop
     216:	bf 00       	.word	0x00bf	; ????
     218:	00 00       	nop
     21a:	80 3f       	cpi	r24, 0xF0	; 240
     21c:	00 00       	nop
     21e:	00 00       	nop
     220:	00 08       	sbc	r0, r0
     222:	41 78       	andi	r20, 0x81	; 129
     224:	d3 bb       	out	0x13, r29	; 19
     226:	43 87       	std	Z+11, r20	; 0x0b
     228:	d1 13       	cpse	r29, r17
     22a:	3d 19       	sub	r19, r13
     22c:	0e 3c       	cpi	r16, 0xCE	; 206
     22e:	c3 bd       	out	0x23, r28	; 35
     230:	42 82       	std	Z+2, r4	; 0x02
     232:	ad 2b       	or	r26, r29
     234:	3e 68       	ori	r19, 0x8E	; 142
     236:	ec 82       	std	Y+4, r14	; 0x04
     238:	76 be       	out	0x36, r7	; 54
     23a:	d9 8f       	std	Y+25, r29	; 0x19
     23c:	e1 a9       	ldd	r30, Z+49	; 0x31
     23e:	3e 4c       	sbci	r19, 0xCE	; 206
     240:	80 ef       	ldi	r24, 0xF0	; 240
     242:	ff be       	out	0x3f, r15	; 63
     244:	01 c4       	rjmp	.+2050   	; 0xa48 <__vector_73+0x14>
     246:	ff 7f       	andi	r31, 0xFF	; 255
     248:	3f 00       	.word	0x003f	; ????
     24a:	00 00       	nop
	...

0000024e <__trampolines_end>:
     24e:	6e 61       	ori	r22, 0x1E	; 30
     250:	6e 00       	.word	0x006e	; ????

00000252 <__c.2240>:
     252:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     262:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     272:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     282:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     292:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     2a2:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     2b2:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     2c2:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     2d2:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     2e2:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     2f2:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     302:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     312:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     322:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     332:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     342:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000350 <__ctors_end>:
     350:	11 24       	eor	r1, r1
     352:	1f be       	out	0x3f, r1	; 63
     354:	cf ef       	ldi	r28, 0xFF	; 255
     356:	cd bf       	out	0x3d, r28	; 61
     358:	df e3       	ldi	r29, 0x3F	; 63
     35a:	de bf       	out	0x3e, r29	; 62
     35c:	00 e0       	ldi	r16, 0x00	; 0
     35e:	0c bf       	out	0x3c, r16	; 60
     360:	18 be       	out	0x38, r1	; 56
     362:	19 be       	out	0x39, r1	; 57
     364:	1a be       	out	0x3a, r1	; 58
     366:	1b be       	out	0x3b, r1	; 59

00000368 <__do_copy_data>:
     368:	10 e2       	ldi	r17, 0x20	; 32
     36a:	a0 e0       	ldi	r26, 0x00	; 0
     36c:	b0 e2       	ldi	r27, 0x20	; 32
     36e:	e0 ed       	ldi	r30, 0xD0	; 208
     370:	f5 e3       	ldi	r31, 0x35	; 53
     372:	00 e0       	ldi	r16, 0x00	; 0
     374:	0b bf       	out	0x3b, r16	; 59
     376:	02 c0       	rjmp	.+4      	; 0x37c <__do_copy_data+0x14>
     378:	07 90       	elpm	r0, Z+
     37a:	0d 92       	st	X+, r0
     37c:	ac 31       	cpi	r26, 0x1C	; 28
     37e:	b1 07       	cpc	r27, r17
     380:	d9 f7       	brne	.-10     	; 0x378 <__do_copy_data+0x10>
     382:	1b be       	out	0x3b, r1	; 59

00000384 <__do_clear_bss>:
     384:	20 e2       	ldi	r18, 0x20	; 32
     386:	ac e1       	ldi	r26, 0x1C	; 28
     388:	b0 e2       	ldi	r27, 0x20	; 32
     38a:	01 c0       	rjmp	.+2      	; 0x38e <.do_clear_bss_start>

0000038c <.do_clear_bss_loop>:
     38c:	1d 92       	st	X+, r1

0000038e <.do_clear_bss_start>:
     38e:	a2 35       	cpi	r26, 0x52	; 82
     390:	b2 07       	cpc	r27, r18
     392:	e1 f7       	brne	.-8      	; 0x38c <.do_clear_bss_loop>
     394:	0e 94 42 10 	call	0x2084	; 0x2084 <main>
     398:	0c 94 e6 1a 	jmp	0x35cc	; 0x35cc <_exit>

0000039c <__bad_interrupt>:
     39c:	31 ce       	rjmp	.-926    	; 0x0 <__vectors>

0000039e <__vector_10>:
     39e:	1f 92       	push	r1
     3a0:	0f 92       	push	r0
     3a2:	0f b6       	in	r0, 0x3f	; 63
     3a4:	0f 92       	push	r0
     3a6:	11 24       	eor	r1, r1
     3a8:	08 b6       	in	r0, 0x38	; 56
     3aa:	0f 92       	push	r0
     3ac:	18 be       	out	0x38, r1	; 56
     3ae:	0b b6       	in	r0, 0x3b	; 59
     3b0:	0f 92       	push	r0
     3b2:	1b be       	out	0x3b, r1	; 59
     3b4:	8f 93       	push	r24
     3b6:	9f 93       	push	r25
     3b8:	ef 93       	push	r30
     3ba:	ff 93       	push	r31
     3bc:	ec e1       	ldi	r30, 0x1C	; 28
     3be:	f0 e2       	ldi	r31, 0x20	; 32
     3c0:	80 81       	ld	r24, Z
     3c2:	91 81       	ldd	r25, Z+1	; 0x01
     3c4:	01 96       	adiw	r24, 0x01	; 1
     3c6:	80 83       	st	Z, r24
     3c8:	91 83       	std	Z+1, r25	; 0x01
     3ca:	ff 91       	pop	r31
     3cc:	ef 91       	pop	r30
     3ce:	9f 91       	pop	r25
     3d0:	8f 91       	pop	r24
     3d2:	0f 90       	pop	r0
     3d4:	0b be       	out	0x3b, r0	; 59
     3d6:	0f 90       	pop	r0
     3d8:	08 be       	out	0x38, r0	; 56
     3da:	0f 90       	pop	r0
     3dc:	0f be       	out	0x3f, r0	; 63
     3de:	0f 90       	pop	r0
     3e0:	1f 90       	pop	r1
     3e2:	18 95       	reti

000003e4 <__vector_11>:
     3e4:	1f 92       	push	r1
     3e6:	0f 92       	push	r0
     3e8:	0f b6       	in	r0, 0x3f	; 63
     3ea:	0f 92       	push	r0
     3ec:	11 24       	eor	r1, r1
     3ee:	08 b6       	in	r0, 0x38	; 56
     3f0:	0f 92       	push	r0
     3f2:	18 be       	out	0x38, r1	; 56
     3f4:	09 b6       	in	r0, 0x39	; 57
     3f6:	0f 92       	push	r0
     3f8:	19 be       	out	0x39, r1	; 57
     3fa:	0b b6       	in	r0, 0x3b	; 59
     3fc:	0f 92       	push	r0
     3fe:	1b be       	out	0x3b, r1	; 59
     400:	cf 92       	push	r12
     402:	df 92       	push	r13
     404:	ef 92       	push	r14
     406:	ff 92       	push	r15
     408:	0f 93       	push	r16
     40a:	1f 93       	push	r17
     40c:	2f 93       	push	r18
     40e:	3f 93       	push	r19
     410:	4f 93       	push	r20
     412:	5f 93       	push	r21
     414:	6f 93       	push	r22
     416:	7f 93       	push	r23
     418:	8f 93       	push	r24
     41a:	9f 93       	push	r25
     41c:	af 93       	push	r26
     41e:	bf 93       	push	r27
     420:	ef 93       	push	r30
     422:	ff 93       	push	r31
     424:	ec e1       	ldi	r30, 0x1C	; 28
     426:	f0 e2       	ldi	r31, 0x20	; 32
     428:	80 81       	ld	r24, Z
     42a:	91 81       	ldd	r25, Z+1	; 0x01
     42c:	22 81       	ldd	r18, Z+2	; 0x02
     42e:	33 81       	ldd	r19, Z+3	; 0x03
     430:	82 17       	cp	r24, r18
     432:	93 07       	cpc	r25, r19
     434:	f0 f1       	brcs	.+124    	; 0x4b2 <__FUSE_REGION_LENGTH__+0xb2>
     436:	21 e0       	ldi	r18, 0x01	; 1
     438:	20 93 02 04 	sts	0x0402, r18	; 0x800402 <__TEXT_REGION_LENGTH__+0x700402>
     43c:	e0 91 22 20 	lds	r30, 0x2022	; 0x802022 <__data_end+0x6>
     440:	f0 91 23 20 	lds	r31, 0x2023	; 0x802023 <__data_end+0x7>
     444:	30 97       	sbiw	r30, 0x00	; 0
     446:	a9 f1       	breq	.+106    	; 0x4b2 <__FUSE_REGION_LENGTH__+0xb2>
     448:	60 91 08 04 	lds	r22, 0x0408	; 0x800408 <__TEXT_REGION_LENGTH__+0x700408>
     44c:	70 91 09 04 	lds	r23, 0x0409	; 0x800409 <__TEXT_REGION_LENGTH__+0x700409>
     450:	a0 e0       	ldi	r26, 0x00	; 0
     452:	b0 e0       	ldi	r27, 0x00	; 0
     454:	dc 01       	movw	r26, r24
     456:	99 27       	eor	r25, r25
     458:	88 27       	eor	r24, r24
     45a:	ab 01       	movw	r20, r22
     45c:	60 e0       	ldi	r22, 0x00	; 0
     45e:	70 e0       	ldi	r23, 0x00	; 0
     460:	8c 01       	movw	r16, r24
     462:	9d 01       	movw	r18, r26
     464:	04 2b       	or	r16, r20
     466:	15 2b       	or	r17, r21
     468:	26 2b       	or	r18, r22
     46a:	37 2b       	or	r19, r23
     46c:	c9 01       	movw	r24, r18
     46e:	b8 01       	movw	r22, r16
     470:	ac e1       	ldi	r26, 0x1C	; 28
     472:	b0 e2       	ldi	r27, 0x20	; 32
     474:	12 96       	adiw	r26, 0x02	; 2
     476:	0d 91       	ld	r16, X+
     478:	1c 91       	ld	r17, X
     47a:	13 97       	sbiw	r26, 0x03	; 3
     47c:	20 e0       	ldi	r18, 0x00	; 0
     47e:	30 e0       	ldi	r19, 0x00	; 0
     480:	98 01       	movw	r18, r16
     482:	11 27       	eor	r17, r17
     484:	00 27       	eor	r16, r16
     486:	14 96       	adiw	r26, 0x04	; 4
     488:	cd 90       	ld	r12, X+
     48a:	dc 90       	ld	r13, X
     48c:	15 97       	sbiw	r26, 0x05	; 5
     48e:	e1 2c       	mov	r14, r1
     490:	f1 2c       	mov	r15, r1
     492:	0c 29       	or	r16, r12
     494:	1d 29       	or	r17, r13
     496:	2e 29       	or	r18, r14
     498:	3f 29       	or	r19, r15
     49a:	06 17       	cp	r16, r22
     49c:	17 07       	cpc	r17, r23
     49e:	28 07       	cpc	r18, r24
     4a0:	39 07       	cpc	r19, r25
     4a2:	30 f0       	brcs	.+12     	; 0x4b0 <__FUSE_REGION_LENGTH__+0xb0>
     4a4:	c9 01       	movw	r24, r18
     4a6:	b8 01       	movw	r22, r16
     4a8:	6f 5f       	subi	r22, 0xFF	; 255
     4aa:	7f 4f       	sbci	r23, 0xFF	; 255
     4ac:	8f 4f       	sbci	r24, 0xFF	; 255
     4ae:	9f 4f       	sbci	r25, 0xFF	; 255
     4b0:	19 95       	eicall
     4b2:	ff 91       	pop	r31
     4b4:	ef 91       	pop	r30
     4b6:	bf 91       	pop	r27
     4b8:	af 91       	pop	r26
     4ba:	9f 91       	pop	r25
     4bc:	8f 91       	pop	r24
     4be:	7f 91       	pop	r23
     4c0:	6f 91       	pop	r22
     4c2:	5f 91       	pop	r21
     4c4:	4f 91       	pop	r20
     4c6:	3f 91       	pop	r19
     4c8:	2f 91       	pop	r18
     4ca:	1f 91       	pop	r17
     4cc:	0f 91       	pop	r16
     4ce:	ff 90       	pop	r15
     4d0:	ef 90       	pop	r14
     4d2:	df 90       	pop	r13
     4d4:	cf 90       	pop	r12
     4d6:	0f 90       	pop	r0
     4d8:	0b be       	out	0x3b, r0	; 59
     4da:	0f 90       	pop	r0
     4dc:	09 be       	out	0x39, r0	; 57
     4de:	0f 90       	pop	r0
     4e0:	08 be       	out	0x38, r0	; 56
     4e2:	0f 90       	pop	r0
     4e4:	0f be       	out	0x3f, r0	; 63
     4e6:	0f 90       	pop	r0
     4e8:	1f 90       	pop	r1
     4ea:	18 95       	reti

000004ec <getAltitude>:
 /* Global Variable Declarations */

 /*******************************************************************************************/
								 /* getAltitude method */
/* Method that uses temperature and pressure w/ Hypsometric Equation. */
 float getAltitude(void){
     4ec:	8f 92       	push	r8
     4ee:	9f 92       	push	r9
     4f0:	af 92       	push	r10
     4f2:	bf 92       	push	r11
     4f4:	cf 92       	push	r12
     4f6:	df 92       	push	r13
     4f8:	ef 92       	push	r14
     4fa:	ff 92       	push	r15

	float temperature = getTemperature();
     4fc:	0e 94 e8 0b 	call	0x17d0	; 0x17d0 <getTemperature>
     500:	4b 01       	movw	r8, r22
     502:	5c 01       	movw	r10, r24
	float pressure = (float)getPressure();
     504:	b0 d7       	rcall	.+3936   	; 0x1466 <getPressure>
     506:	0e 94 a9 11 	call	0x2352	; 0x2352 <__floatsisf>
     50a:	9b 01       	movw	r18, r22
     50c:	ac 01       	movw	r20, r24
	float R = 287;
	float g = 9.80665;
	float pconst = 101325;

	return ((R * temperature)/g)*log(pconst/pressure);
     50e:	60 e8       	ldi	r22, 0x80	; 128
     510:	76 ee       	ldi	r23, 0xE6	; 230
     512:	85 ec       	ldi	r24, 0xC5	; 197
     514:	97 e4       	ldi	r25, 0x47	; 71
     516:	0e 94 13 11 	call	0x2226	; 0x2226 <__divsf3>
     51a:	0e 94 5e 12 	call	0x24bc	; 0x24bc <log>
     51e:	6b 01       	movw	r12, r22
     520:	7c 01       	movw	r14, r24
     522:	20 e0       	ldi	r18, 0x00	; 0
     524:	30 e8       	ldi	r19, 0x80	; 128
     526:	4f e8       	ldi	r20, 0x8F	; 143
     528:	53 e4       	ldi	r21, 0x43	; 67
     52a:	c5 01       	movw	r24, r10
     52c:	b4 01       	movw	r22, r8
     52e:	0e 94 9e 12 	call	0x253c	; 0x253c <__mulsf3>
     532:	2a e0       	ldi	r18, 0x0A	; 10
     534:	38 ee       	ldi	r19, 0xE8	; 232
     536:	4c e1       	ldi	r20, 0x1C	; 28
     538:	51 e4       	ldi	r21, 0x41	; 65
     53a:	0e 94 13 11 	call	0x2226	; 0x2226 <__divsf3>
     53e:	a7 01       	movw	r20, r14
     540:	96 01       	movw	r18, r12
     542:	0e 94 9e 12 	call	0x253c	; 0x253c <__mulsf3>
     546:	ff 90       	pop	r15
     548:	ef 90       	pop	r14
     54a:	df 90       	pop	r13
     54c:	cf 90       	pop	r12
     54e:	bf 90       	pop	r11
     550:	af 90       	pop	r10
     552:	9f 90       	pop	r9
     554:	8f 90       	pop	r8
     556:	08 95       	ret

00000558 <getVelocity>:
 /* Global Variable Declarations */

/*******************************************************************************************/
								/* Velocity Calculation methods */
/* Find velocity using change in altitude and time, utilizing numerical differentiation and exponential smooth to reduce noise.*/
 float getVelocity(void){
     558:	2f 92       	push	r2
     55a:	3f 92       	push	r3
     55c:	4f 92       	push	r4
     55e:	5f 92       	push	r5
     560:	6f 92       	push	r6
     562:	7f 92       	push	r7
     564:	8f 92       	push	r8
     566:	9f 92       	push	r9
     568:	af 92       	push	r10
     56a:	bf 92       	push	r11
     56c:	cf 92       	push	r12
     56e:	df 92       	push	r13
     570:	ef 92       	push	r14
     572:	ff 92       	push	r15
     574:	0f 93       	push	r16
     576:	1f 93       	push	r17
     578:	cf 93       	push	r28
     57a:	df 93       	push	r29
     57c:	cd b7       	in	r28, 0x3d	; 61
     57e:	de b7       	in	r29, 0x3e	; 62
     580:	c4 59       	subi	r28, 0x94	; 148
     582:	d1 40       	sbci	r29, 0x01	; 1
     584:	cd bf       	out	0x3d, r28	; 61
     586:	de bf       	out	0x3e, r29	; 62
	float perms = 3.1249523;	
	float arr_alt[25]; //Creates an array of size 25 for altitude.
	float arr_vel[25]; //Velocity array.
	float arr_time[25]; //time array
	while (TCF0.CNT != TCF0.PER); //wait until interrupt is done.
     588:	e0 e0       	ldi	r30, 0x00	; 0
     58a:	fb e0       	ldi	r31, 0x0B	; 11
     58c:	20 a1       	ldd	r18, Z+32	; 0x20
     58e:	31 a1       	ldd	r19, Z+33	; 0x21
     590:	86 a1       	ldd	r24, Z+38	; 0x26
     592:	97 a1       	ldd	r25, Z+39	; 0x27
     594:	28 17       	cp	r18, r24
     596:	39 07       	cpc	r19, r25
     598:	c9 f7       	brne	.-14     	; 0x58c <getVelocity+0x34>
	float final_alt = getAltitude(); //sets final altitude for the loop to the current altitude.
     59a:	a8 df       	rcall	.-176    	; 0x4ec <getAltitude>
     59c:	2b 01       	movw	r4, r22
     59e:	3c 01       	movw	r6, r24
     5a0:	8e 01       	movw	r16, r28
     5a2:	0f 5f       	subi	r16, 0xFF	; 255
     5a4:	1f 4f       	sbci	r17, 0xFF	; 255
     5a6:	5e 01       	movw	r10, r28
     5a8:	89 ec       	ldi	r24, 0xC9	; 201
     5aa:	a8 0e       	add	r10, r24
     5ac:	b1 1c       	adc	r11, r1
     5ae:	4e 01       	movw	r8, r28
     5b0:	a5 e6       	ldi	r26, 0x65	; 101
     5b2:	8a 0e       	add	r8, r26
     5b4:	91 1c       	adc	r9, r1
     5b6:	68 01       	movw	r12, r16
	for(int i = 0; i < 25; i++){ //For each element in altTable
		while (TCF0.CNT != TCF0.PER); //wait until TCF0 overflows, which will take 10ms
     5b8:	0f 2e       	mov	r0, r31
     5ba:	e1 2c       	mov	r14, r1
     5bc:	fb e0       	ldi	r31, 0x0B	; 11
     5be:	ff 2e       	mov	r15, r31
     5c0:	f0 2d       	mov	r31, r0
     5c2:	f7 01       	movw	r30, r14
     5c4:	20 a1       	ldd	r18, Z+32	; 0x20
     5c6:	31 a1       	ldd	r19, Z+33	; 0x21
     5c8:	86 a1       	ldd	r24, Z+38	; 0x26
     5ca:	97 a1       	ldd	r25, Z+39	; 0x27
     5cc:	28 17       	cp	r18, r24
     5ce:	39 07       	cpc	r19, r25
     5d0:	c1 f7       	brne	.-16     	; 0x5c2 <getVelocity+0x6a>

		arr_alt[i] = final_alt - getAltitude(); //Set the current element to the delta altitude found with final altitude of the previous iteration subtracted by the current altitude.
     5d2:	8c df       	rcall	.-232    	; 0x4ec <getAltitude>
     5d4:	9b 01       	movw	r18, r22
     5d6:	ac 01       	movw	r20, r24
     5d8:	c3 01       	movw	r24, r6
     5da:	b2 01       	movw	r22, r4
     5dc:	0e 94 aa 10 	call	0x2154	; 0x2154 <__subsf3>
     5e0:	d6 01       	movw	r26, r12
     5e2:	6d 93       	st	X+, r22
     5e4:	7d 93       	st	X+, r23
     5e6:	8d 93       	st	X+, r24
     5e8:	9d 93       	st	X+, r25
     5ea:	6d 01       	movw	r12, r26

		arr_time[i] = TCF0.CNT/perms + 10; //time element array is one ahead so we can record the change in time + 10ms for the timer counter.
     5ec:	f7 01       	movw	r30, r14
     5ee:	60 a1       	ldd	r22, Z+32	; 0x20
     5f0:	71 a1       	ldd	r23, Z+33	; 0x21
     5f2:	80 e0       	ldi	r24, 0x00	; 0
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	0e 94 a7 11 	call	0x234e	; 0x234e <__floatunsisf>
     5fa:	28 e3       	ldi	r18, 0x38	; 56
     5fc:	3f ef       	ldi	r19, 0xFF	; 255
     5fe:	47 e4       	ldi	r20, 0x47	; 71
     600:	50 e4       	ldi	r21, 0x40	; 64
     602:	0e 94 13 11 	call	0x2226	; 0x2226 <__divsf3>
     606:	20 e0       	ldi	r18, 0x00	; 0
     608:	30 e0       	ldi	r19, 0x00	; 0
     60a:	40 e2       	ldi	r20, 0x20	; 32
     60c:	51 e4       	ldi	r21, 0x41	; 65
     60e:	0e 94 ab 10 	call	0x2156	; 0x2156 <__addsf3>
     612:	d5 01       	movw	r26, r10
     614:	6d 93       	st	X+, r22
     616:	7d 93       	st	X+, r23
     618:	8d 93       	st	X+, r24
     61a:	9d 93       	st	X+, r25
     61c:	5d 01       	movw	r10, r26

		final_alt = getAltitude(); //Sets the final altitude for the iteration to the current altitude.
     61e:	66 df       	rcall	.-308    	; 0x4ec <getAltitude>
     620:	2b 01       	movw	r4, r22
     622:	3c 01       	movw	r6, r24
	float arr_alt[25]; //Creates an array of size 25 for altitude.
	float arr_vel[25]; //Velocity array.
	float arr_time[25]; //time array
	while (TCF0.CNT != TCF0.PER); //wait until interrupt is done.
	float final_alt = getAltitude(); //sets final altitude for the loop to the current altitude.
	for(int i = 0; i < 25; i++){ //For each element in altTable
     624:	c8 14       	cp	r12, r8
     626:	d9 04       	cpc	r13, r9
     628:	61 f6       	brne	.-104    	; 0x5c2 <getVelocity+0x6a>
     62a:	4e 01       	movw	r8, r28
     62c:	bd ec       	ldi	r27, 0xCD	; 205
     62e:	8b 0e       	add	r8, r27
     630:	91 1c       	adc	r9, r1
     632:	5e 01       	movw	r10, r28
     634:	e9 e6       	ldi	r30, 0x69	; 105
     636:	ae 0e       	add	r10, r30
     638:	b1 1c       	adc	r11, r1
     63a:	1e 01       	movw	r2, r28
     63c:	f1 e6       	ldi	r31, 0x61	; 97
     63e:	2f 0e       	add	r2, r31
     640:	31 1c       	adc	r3, r1
     642:	25 01       	movw	r4, r10
	}*/

	/* numerical differentiation. */
	for(int z = 1; z < 25; z++){
		arr_vel[z] = (arr_alt[z+1] - arr_alt[z-1])/(2*arr_time[z]); //Approximated velocity using a centered difference scheme, reduces noise from taking the derivative.
		printf("arr_vel: %.2f\n",arr_vel[z]);
     644:	0f 2e       	mov	r0, r31
     646:	fd e0       	ldi	r31, 0x0D	; 13
     648:	6f 2e       	mov	r6, r31
     64a:	f0 e2       	ldi	r31, 0x20	; 32
     64c:	7f 2e       	mov	r7, r31
     64e:	f0 2d       	mov	r31, r0
     650:	f8 01       	movw	r30, r16
     652:	0c 5f       	subi	r16, 0xFC	; 252
     654:	1f 4f       	sbci	r17, 0xFF	; 255
		printf("arr_vel: %.2f\n",arr_vel[z]);
	}*/

	/* numerical differentiation. */
	for(int z = 1; z < 25; z++){
		arr_vel[z] = (arr_alt[z+1] - arr_alt[z-1])/(2*arr_time[z]); //Approximated velocity using a centered difference scheme, reduces noise from taking the derivative.
     656:	d4 01       	movw	r26, r8
     658:	cd 90       	ld	r12, X+
     65a:	dd 90       	ld	r13, X+
     65c:	ed 90       	ld	r14, X+
     65e:	fd 90       	ld	r15, X+
     660:	4d 01       	movw	r8, r26
     662:	20 81       	ld	r18, Z
     664:	31 81       	ldd	r19, Z+1	; 0x01
     666:	42 81       	ldd	r20, Z+2	; 0x02
     668:	53 81       	ldd	r21, Z+3	; 0x03
     66a:	60 85       	ldd	r22, Z+8	; 0x08
     66c:	71 85       	ldd	r23, Z+9	; 0x09
     66e:	82 85       	ldd	r24, Z+10	; 0x0a
     670:	93 85       	ldd	r25, Z+11	; 0x0b
     672:	0e 94 aa 10 	call	0x2154	; 0x2154 <__subsf3>
     676:	cf 56       	subi	r28, 0x6F	; 111
     678:	de 4f       	sbci	r29, 0xFE	; 254
     67a:	68 83       	st	Y, r22
     67c:	79 83       	std	Y+1, r23	; 0x01
     67e:	8a 83       	std	Y+2, r24	; 0x02
     680:	9b 83       	std	Y+3, r25	; 0x03
     682:	c1 59       	subi	r28, 0x91	; 145
     684:	d1 40       	sbci	r29, 0x01	; 1
     686:	a7 01       	movw	r20, r14
     688:	96 01       	movw	r18, r12
     68a:	c7 01       	movw	r24, r14
     68c:	b6 01       	movw	r22, r12
     68e:	0e 94 ab 10 	call	0x2156	; 0x2156 <__addsf3>
     692:	9b 01       	movw	r18, r22
     694:	ac 01       	movw	r20, r24
     696:	cf 56       	subi	r28, 0x6F	; 111
     698:	de 4f       	sbci	r29, 0xFE	; 254
     69a:	68 81       	ld	r22, Y
     69c:	79 81       	ldd	r23, Y+1	; 0x01
     69e:	8a 81       	ldd	r24, Y+2	; 0x02
     6a0:	9b 81       	ldd	r25, Y+3	; 0x03
     6a2:	c1 59       	subi	r28, 0x91	; 145
     6a4:	d1 40       	sbci	r29, 0x01	; 1
     6a6:	0e 94 13 11 	call	0x2226	; 0x2226 <__divsf3>
     6aa:	26 2f       	mov	r18, r22
     6ac:	37 2f       	mov	r19, r23
     6ae:	46 2f       	mov	r20, r22
     6b0:	57 2f       	mov	r21, r23
     6b2:	68 2f       	mov	r22, r24
     6b4:	79 2f       	mov	r23, r25
     6b6:	f2 01       	movw	r30, r4
     6b8:	41 93       	st	Z+, r20
     6ba:	51 93       	st	Z+, r21
     6bc:	61 93       	st	Z+, r22
     6be:	71 93       	st	Z+, r23
     6c0:	2f 01       	movw	r4, r30
		printf("arr_vel: %.2f\n",arr_vel[z]);
     6c2:	9f 93       	push	r25
     6c4:	8f 93       	push	r24
     6c6:	3f 93       	push	r19
     6c8:	2f 93       	push	r18
     6ca:	7f 92       	push	r7
     6cc:	6f 92       	push	r6
     6ce:	0e 94 27 19 	call	0x324e	; 0x324e <printf>
		arr_vel[z] = arr_alt[z]/arr_time[z]; //Approximated velocity from delta alt / delta t.
		printf("arr_vel: %.2f\n",arr_vel[z]);
	}*/

	/* numerical differentiation. */
	for(int z = 1; z < 25; z++){
     6d2:	0f 90       	pop	r0
     6d4:	0f 90       	pop	r0
     6d6:	0f 90       	pop	r0
     6d8:	0f 90       	pop	r0
     6da:	0f 90       	pop	r0
     6dc:	0f 90       	pop	r0
     6de:	02 15       	cp	r16, r2
     6e0:	13 05       	cpc	r17, r3
     6e2:	09 f0       	breq	.+2      	; 0x6e6 <getVelocity+0x18e>
     6e4:	b5 cf       	rjmp	.-150    	; 0x650 <getVelocity+0xf8>
		arr_vel[z] = (arr_alt[z+1] - arr_alt[z-1])/(2*arr_time[z]); //Approximated velocity using a centered difference scheme, reduces noise from taking the derivative.
		printf("arr_vel: %.2f\n",arr_vel[z]);
	}

	arr_vel[0] = arr_alt[0]/arr_time[0]; //Still need to get the first velocity, time was missing ~10ms.
     6e6:	c7 53       	subi	r28, 0x37	; 55
     6e8:	df 4f       	sbci	r29, 0xFF	; 255
     6ea:	28 81       	ld	r18, Y
     6ec:	39 81       	ldd	r19, Y+1	; 0x01
     6ee:	4a 81       	ldd	r20, Y+2	; 0x02
     6f0:	5b 81       	ldd	r21, Y+3	; 0x03
     6f2:	c9 5c       	subi	r28, 0xC9	; 201
     6f4:	d0 40       	sbci	r29, 0x00	; 0
     6f6:	69 81       	ldd	r22, Y+1	; 0x01
     6f8:	7a 81       	ldd	r23, Y+2	; 0x02
     6fa:	8b 81       	ldd	r24, Y+3	; 0x03
     6fc:	9c 81       	ldd	r25, Y+4	; 0x04
     6fe:	0e 94 13 11 	call	0x2226	; 0x2226 <__divsf3>
     702:	a9 96       	adiw	r28, 0x29	; 41
     704:	6c af       	std	Y+60, r22	; 0x3c
     706:	7d af       	std	Y+61, r23	; 0x3d
     708:	8e af       	std	Y+62, r24	; 0x3e
     70a:	9f af       	std	Y+63, r25	; 0x3f
     70c:	a9 97       	sbiw	r28, 0x29	; 41

	//Now we know the velocity for 25 different samples over a total of 250ms. We now need to exponentially smooth the data to reduce noise again.

	float a_smooth[25]; //Smoothed velocity table of size 25.
	a_smooth[0] = arr_vel[0]; //Sets the initial smoothed value to the first velocity taken.
     70e:	c3 5d       	subi	r28, 0xD3	; 211
     710:	de 4f       	sbci	r29, 0xFE	; 254
     712:	68 83       	st	Y, r22
     714:	79 83       	std	Y+1, r23	; 0x01
     716:	8a 83       	std	Y+2, r24	; 0x02
     718:	9b 83       	std	Y+3, r25	; 0x03
     71a:	cd 52       	subi	r28, 0x2D	; 45
     71c:	d1 40       	sbci	r29, 0x01	; 1
     71e:	8e 01       	movw	r16, r28
     720:	03 5d       	subi	r16, 0xD3	; 211
     722:	1e 4f       	sbci	r17, 0xFE	; 254
     724:	7e 01       	movw	r14, r28
     726:	f3 e7       	ldi	r31, 0x73	; 115
     728:	ef 1a       	sub	r14, r31
     72a:	fe ef       	ldi	r31, 0xFE	; 254
     72c:	ff 0a       	sbc	r15, r31
	for(int j = 1; j < 25; j++){ //For our 24 elements of velocity..
		a_smooth[j] = exponentialSmoothing(a_smooth[j - 1], arr_vel[j]); //For the current element of smoothed velocity, set it equal to the value that our exponential smoothing function gives us. We input the previous value for the smoothed table as our forecast/second variable, then the element of velocity at the current position. 
     72e:	d5 01       	movw	r26, r10
     730:	6d 91       	ld	r22, X+
     732:	7d 91       	ld	r23, X+
     734:	8d 91       	ld	r24, X+
     736:	9d 91       	ld	r25, X+
     738:	5d 01       	movw	r10, r26
     73a:	f8 01       	movw	r30, r16
     73c:	41 90       	ld	r4, Z+
     73e:	51 90       	ld	r5, Z+
     740:	61 90       	ld	r6, Z+
     742:	71 90       	ld	r7, Z+
     744:	8f 01       	movw	r16, r30

 /* Exponential smoothing to reduce noise. */
 float exponentialSmoothing(float p_smth_vel, float current_vel){ //We need the previous smoothed value as well as the current un-smoothed value, as indicated by the equation on this page: https://en.wikipedia.org/wiki/Exponential_smoothing#Basic_exponential_smoothing
	float smooth_factor = .5; //50% smoothing factor, needs to be tested.
	//printf("current_vel: %.2f\np_smth_vel:%.2f\n",current_vel,p_smth_vel);
	return (current_vel * smooth_factor) + (p_smth_vel * (1 - smooth_factor)); //returns the smoothed velocity for the current position of our table! That wasn't so hard, was it?
     746:	20 e0       	ldi	r18, 0x00	; 0
     748:	30 e0       	ldi	r19, 0x00	; 0
     74a:	40 e0       	ldi	r20, 0x00	; 0
     74c:	5f e3       	ldi	r21, 0x3F	; 63
     74e:	0e 94 9e 12 	call	0x253c	; 0x253c <__mulsf3>
     752:	cf 56       	subi	r28, 0x6F	; 111
     754:	de 4f       	sbci	r29, 0xFE	; 254
     756:	68 83       	st	Y, r22
     758:	79 83       	std	Y+1, r23	; 0x01
     75a:	8a 83       	std	Y+2, r24	; 0x02
     75c:	9b 83       	std	Y+3, r25	; 0x03
     75e:	c1 59       	subi	r28, 0x91	; 145
     760:	d1 40       	sbci	r29, 0x01	; 1
     762:	20 e0       	ldi	r18, 0x00	; 0
     764:	30 e0       	ldi	r19, 0x00	; 0
     766:	40 e0       	ldi	r20, 0x00	; 0
     768:	5f e3       	ldi	r21, 0x3F	; 63
     76a:	c3 01       	movw	r24, r6
     76c:	b2 01       	movw	r22, r4
     76e:	0e 94 9e 12 	call	0x253c	; 0x253c <__mulsf3>
     772:	9b 01       	movw	r18, r22
     774:	ac 01       	movw	r20, r24
     776:	cf 56       	subi	r28, 0x6F	; 111
     778:	de 4f       	sbci	r29, 0xFE	; 254
     77a:	68 81       	ld	r22, Y
     77c:	79 81       	ldd	r23, Y+1	; 0x01
     77e:	8a 81       	ldd	r24, Y+2	; 0x02
     780:	9b 81       	ldd	r25, Y+3	; 0x03
     782:	c1 59       	subi	r28, 0x91	; 145
     784:	d1 40       	sbci	r29, 0x01	; 1
     786:	0e 94 ab 10 	call	0x2156	; 0x2156 <__addsf3>
	//Now we know the velocity for 25 different samples over a total of 250ms. We now need to exponentially smooth the data to reduce noise again.

	float a_smooth[25]; //Smoothed velocity table of size 25.
	a_smooth[0] = arr_vel[0]; //Sets the initial smoothed value to the first velocity taken.
	for(int j = 1; j < 25; j++){ //For our 24 elements of velocity..
		a_smooth[j] = exponentialSmoothing(a_smooth[j - 1], arr_vel[j]); //For the current element of smoothed velocity, set it equal to the value that our exponential smoothing function gives us. We input the previous value for the smoothed table as our forecast/second variable, then the element of velocity at the current position. 
     78a:	d8 01       	movw	r26, r16
     78c:	6d 93       	st	X+, r22
     78e:	7d 93       	st	X+, r23
     790:	8d 93       	st	X+, r24
     792:	9c 93       	st	X, r25
     794:	13 97       	sbiw	r26, 0x03	; 3

	//Now we know the velocity for 25 different samples over a total of 250ms. We now need to exponentially smooth the data to reduce noise again.

	float a_smooth[25]; //Smoothed velocity table of size 25.
	a_smooth[0] = arr_vel[0]; //Sets the initial smoothed value to the first velocity taken.
	for(int j = 1; j < 25; j++){ //For our 24 elements of velocity..
     796:	0e 15       	cp	r16, r14
     798:	1f 05       	cpc	r17, r15
     79a:	49 f6       	brne	.-110    	; 0x72e <getVelocity+0x1d6>
     79c:	8e 01       	movw	r16, r28
     79e:	0f 5c       	subi	r16, 0xCF	; 207
     7a0:	1e 4f       	sbci	r17, 0xFE	; 254
     7a2:	7e 01       	movw	r14, r28
     7a4:	bf e6       	ldi	r27, 0x6F	; 111
     7a6:	eb 1a       	sub	r14, r27
     7a8:	be ef       	ldi	r27, 0xFE	; 254
     7aa:	fb 0a       	sbc	r15, r27
     7ac:	60 e0       	ldi	r22, 0x00	; 0
     7ae:	70 e0       	ldi	r23, 0x00	; 0
     7b0:	cb 01       	movw	r24, r22
		a_smooth[j] = exponentialSmoothing(a_smooth[j - 1], arr_vel[j]); //For the current element of smoothed velocity, set it equal to the value that our exponential smoothing function gives us. We input the previous value for the smoothed table as our forecast/second variable, then the element of velocity at the current position. 
		//printf("a_smooth: %.2f\n",a_smooth[j]);
	}
	float s_vel = 0; //Summed velocity so we can average it.
	for(int b = 1; b < 25; b++) //For our size 25 smoothed velocity table, we want to ignore the first value because it is a duplicate, then iterate through every other value.
		s_vel += a_smooth[b]; //Set the sum of velocity equal to itself plus the element at our current position. Sums up all of the values in our table.
     7b2:	f8 01       	movw	r30, r16
     7b4:	21 91       	ld	r18, Z+
     7b6:	31 91       	ld	r19, Z+
     7b8:	41 91       	ld	r20, Z+
     7ba:	51 91       	ld	r21, Z+
     7bc:	8f 01       	movw	r16, r30
     7be:	0e 94 ab 10 	call	0x2156	; 0x2156 <__addsf3>
	for(int j = 1; j < 25; j++){ //For our 24 elements of velocity..
		a_smooth[j] = exponentialSmoothing(a_smooth[j - 1], arr_vel[j]); //For the current element of smoothed velocity, set it equal to the value that our exponential smoothing function gives us. We input the previous value for the smoothed table as our forecast/second variable, then the element of velocity at the current position. 
		//printf("a_smooth: %.2f\n",a_smooth[j]);
	}
	float s_vel = 0; //Summed velocity so we can average it.
	for(int b = 1; b < 25; b++) //For our size 25 smoothed velocity table, we want to ignore the first value because it is a duplicate, then iterate through every other value.
     7c2:	0e 15       	cp	r16, r14
     7c4:	1f 05       	cpc	r17, r15
     7c6:	a9 f7       	brne	.-22     	; 0x7b2 <getVelocity+0x25a>
		s_vel += a_smooth[b]; //Set the sum of velocity equal to itself plus the element at our current position. Sums up all of the values in our table.
	return s_vel/24; //The function finally ends with returning the average, or the sum of our 24 elements of velocity divided by 24.
     7c8:	20 e0       	ldi	r18, 0x00	; 0
     7ca:	30 e0       	ldi	r19, 0x00	; 0
     7cc:	40 ec       	ldi	r20, 0xC0	; 192
     7ce:	51 e4       	ldi	r21, 0x41	; 65
     7d0:	0e 94 13 11 	call	0x2226	; 0x2226 <__divsf3>
 }
     7d4:	cc 56       	subi	r28, 0x6C	; 108
     7d6:	de 4f       	sbci	r29, 0xFE	; 254
     7d8:	cd bf       	out	0x3d, r28	; 61
     7da:	de bf       	out	0x3e, r29	; 62
     7dc:	df 91       	pop	r29
     7de:	cf 91       	pop	r28
     7e0:	1f 91       	pop	r17
     7e2:	0f 91       	pop	r16
     7e4:	ff 90       	pop	r15
     7e6:	ef 90       	pop	r14
     7e8:	df 90       	pop	r13
     7ea:	cf 90       	pop	r12
     7ec:	bf 90       	pop	r11
     7ee:	af 90       	pop	r10
     7f0:	9f 90       	pop	r9
     7f2:	8f 90       	pop	r8
     7f4:	7f 90       	pop	r7
     7f6:	6f 90       	pop	r6
     7f8:	5f 90       	pop	r5
     7fa:	4f 90       	pop	r4
     7fc:	3f 90       	pop	r3
     7fe:	2f 90       	pop	r2
     800:	08 95       	ret

00000802 <buzzer>:

 /*******************************************************************************************/
							/* Simple Buzzer methods */

 /* Buzzer method to start buzzer @ a certain period. */
 void buzzer(uint16_t period){
     802:	9c 01       	movw	r18, r24
	TCD0.CTRLA = 0b00000110; //prescalar 256
     804:	e0 e0       	ldi	r30, 0x00	; 0
     806:	f9 e0       	ldi	r31, 0x09	; 9
     808:	86 e0       	ldi	r24, 0x06	; 6
     80a:	80 83       	st	Z, r24
	 PORTD.OUT |= 0b00001000; //out, high = 1, low = 0.
     80c:	a0 e6       	ldi	r26, 0x60	; 96
     80e:	b6 e0       	ldi	r27, 0x06	; 6
     810:	14 96       	adiw	r26, 0x04	; 4
     812:	9c 91       	ld	r25, X
     814:	14 97       	sbiw	r26, 0x04	; 4
     816:	98 60       	ori	r25, 0x08	; 8
     818:	14 96       	adiw	r26, 0x04	; 4
     81a:	9c 93       	st	X, r25

	 TCD0.PER = period; //Set period of output.
     81c:	26 a3       	std	Z+38, r18	; 0x26
     81e:	37 a3       	std	Z+39, r19	; 0x27
	 TCD0.CCD = TCD0.PER;	//Set duty cycle of output for Command Capture register A.
     820:	86 a1       	ldd	r24, Z+38	; 0x26
     822:	97 a1       	ldd	r25, Z+39	; 0x27
     824:	86 a7       	std	Z+46, r24	; 0x2e
     826:	97 a7       	std	Z+47, r25	; 0x2f
     828:	08 95       	ret

0000082a <LED>:

   /*******************************************************************************************/
   						/* Simple LED methods */

/* LED method to start LED @ a certain period and duty cycle. */
  void LED(uint16_t period,uint8_t duty_cycle){
     82a:	9c 01       	movw	r18, r24
	  PORTD.OUT |= 0b00000010; //out, high = 1, low = 0.
     82c:	e0 e6       	ldi	r30, 0x60	; 96
     82e:	f6 e0       	ldi	r31, 0x06	; 6
     830:	94 81       	ldd	r25, Z+4	; 0x04
     832:	92 60       	ori	r25, 0x02	; 2
     834:	94 83       	std	Z+4, r25	; 0x04

	  TCD0.PER = period; //Set period of output.
     836:	e0 e0       	ldi	r30, 0x00	; 0
     838:	f9 e0       	ldi	r31, 0x09	; 9
     83a:	26 a3       	std	Z+38, r18	; 0x26
     83c:	37 a3       	std	Z+39, r19	; 0x27
	  TCD0.CCB = TCD0.PER - (TCD0.PER/duty_cycle); //Set duty cycle of output for Command Capture register A.
     83e:	26 a1       	ldd	r18, Z+38	; 0x26
     840:	37 a1       	ldd	r19, Z+39	; 0x27
     842:	86 a1       	ldd	r24, Z+38	; 0x26
     844:	97 a1       	ldd	r25, Z+39	; 0x27
     846:	70 e0       	ldi	r23, 0x00	; 0
     848:	0e 94 b6 16 	call	0x2d6c	; 0x2d6c <__udivmodhi4>
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	22 a7       	std	Z+42, r18	; 0x2a
     852:	33 a7       	std	Z+43, r19	; 0x2b
     854:	08 95       	ret

00000856 <motor>:

  /*******************************************************************************************/
    					/* Simple Motor methods */

/* Motor method to start motor @ a certain period. */
void motor(uint16_t period){
     856:	9c 01       	movw	r18, r24
	TCD0.CTRLA = 0b00000110; //prescalar 256
     858:	e0 e0       	ldi	r30, 0x00	; 0
     85a:	f9 e0       	ldi	r31, 0x09	; 9
     85c:	86 e0       	ldi	r24, 0x06	; 6
     85e:	80 83       	st	Z, r24
	PORTD.OUT |= 0b00000100; //out, high = 1, low = 0.
     860:	a0 e6       	ldi	r26, 0x60	; 96
     862:	b6 e0       	ldi	r27, 0x06	; 6
     864:	14 96       	adiw	r26, 0x04	; 4
     866:	9c 91       	ld	r25, X
     868:	14 97       	sbiw	r26, 0x04	; 4
     86a:	94 60       	ori	r25, 0x04	; 4
     86c:	14 96       	adiw	r26, 0x04	; 4
     86e:	9c 93       	st	X, r25

	TCD0.PER = period; //Set period of output.
     870:	26 a3       	std	Z+38, r18	; 0x26
     872:	37 a3       	std	Z+39, r19	; 0x27
	TCD0.CCC = TCD0.PER; //Set duty cycle of output for Command Capture register C.
     874:	86 a1       	ldd	r24, Z+38	; 0x26
     876:	97 a1       	ldd	r25, Z+39	; 0x27
     878:	84 a7       	std	Z+44, r24	; 0x2c
     87a:	95 a7       	std	Z+45, r25	; 0x2d
     87c:	08 95       	ret

0000087e <sysclk_init>:
     87e:	8f ef       	ldi	r24, 0xFF	; 255
     880:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x700070>
     884:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__TEXT_REGION_LENGTH__+0x700071>
     888:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__TEXT_REGION_LENGTH__+0x700072>
     88c:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x700073>
     890:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x700074>
     894:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <__TEXT_REGION_LENGTH__+0x700075>
     898:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__TEXT_REGION_LENGTH__+0x700076>
     89c:	9f b7       	in	r25, 0x3f	; 63
     89e:	f8 94       	cli
     8a0:	e0 e5       	ldi	r30, 0x50	; 80
     8a2:	f0 e0       	ldi	r31, 0x00	; 0
     8a4:	80 81       	ld	r24, Z
     8a6:	82 60       	ori	r24, 0x02	; 2
     8a8:	80 83       	st	Z, r24
     8aa:	9f bf       	out	0x3f, r25	; 63
     8ac:	81 81       	ldd	r24, Z+1	; 0x01
     8ae:	81 ff       	sbrs	r24, 1
     8b0:	fd cf       	rjmp	.-6      	; 0x8ac <sysclk_init+0x2e>
     8b2:	61 e0       	ldi	r22, 0x01	; 1
     8b4:	80 e4       	ldi	r24, 0x40	; 64
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	2b d2       	rcall	.+1110   	; 0xd10 <ccp_write_io>
     8ba:	9f b7       	in	r25, 0x3f	; 63
     8bc:	f8 94       	cli
     8be:	e0 e5       	ldi	r30, 0x50	; 80
     8c0:	f0 e0       	ldi	r31, 0x00	; 0
     8c2:	80 81       	ld	r24, Z
     8c4:	8e 7f       	andi	r24, 0xFE	; 254
     8c6:	80 83       	st	Z, r24
     8c8:	9f bf       	out	0x3f, r25	; 63
     8ca:	81 e0       	ldi	r24, 0x01	; 1
     8cc:	80 93 43 00 	sts	0x0043, r24	; 0x800043 <__TEXT_REGION_LENGTH__+0x700043>
     8d0:	08 95       	ret

000008d2 <sysclk_enable_module>:
     8d2:	9f b7       	in	r25, 0x3f	; 63
     8d4:	f8 94       	cli
     8d6:	e8 2f       	mov	r30, r24
     8d8:	f0 e0       	ldi	r31, 0x00	; 0
     8da:	e0 59       	subi	r30, 0x90	; 144
     8dc:	ff 4f       	sbci	r31, 0xFF	; 255
     8de:	60 95       	com	r22
     8e0:	80 81       	ld	r24, Z
     8e2:	68 23       	and	r22, r24
     8e4:	60 83       	st	Z, r22
     8e6:	9f bf       	out	0x3f, r25	; 63
     8e8:	08 95       	ret

000008ea <_read>:
     8ea:	cf 93       	push	r28
     8ec:	df 93       	push	r29
     8ee:	1f 92       	push	r1
     8f0:	cd b7       	in	r28, 0x3d	; 61
     8f2:	de b7       	in	r29, 0x3e	; 62
     8f4:	80 91 28 20 	lds	r24, 0x2028	; 0x802028 <stdio_base>
     8f8:	90 91 29 20 	lds	r25, 0x2029	; 0x802029 <stdio_base+0x1>
     8fc:	e0 91 24 20 	lds	r30, 0x2024	; 0x802024 <ptr_get>
     900:	f0 91 25 20 	lds	r31, 0x2025	; 0x802025 <ptr_get+0x1>
     904:	be 01       	movw	r22, r28
     906:	6f 5f       	subi	r22, 0xFF	; 255
     908:	7f 4f       	sbci	r23, 0xFF	; 255
     90a:	19 95       	eicall
     90c:	89 81       	ldd	r24, Y+1	; 0x01
     90e:	08 2e       	mov	r0, r24
     910:	00 0c       	add	r0, r0
     912:	99 0b       	sbc	r25, r25
     914:	0f 90       	pop	r0
     916:	df 91       	pop	r29
     918:	cf 91       	pop	r28
     91a:	08 95       	ret

0000091c <_write>:
     91c:	68 2f       	mov	r22, r24
     91e:	80 91 28 20 	lds	r24, 0x2028	; 0x802028 <stdio_base>
     922:	90 91 29 20 	lds	r25, 0x2029	; 0x802029 <stdio_base+0x1>
     926:	e0 91 26 20 	lds	r30, 0x2026	; 0x802026 <ptr_put>
     92a:	f0 91 27 20 	lds	r31, 0x2027	; 0x802027 <ptr_put+0x1>
     92e:	19 95       	eicall
     930:	99 23       	and	r25, r25
     932:	1c f0       	brlt	.+6      	; 0x93a <_write+0x1e>
     934:	81 e0       	ldi	r24, 0x01	; 1
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	08 95       	ret
     93a:	8f ef       	ldi	r24, 0xFF	; 255
     93c:	9f ef       	ldi	r25, 0xFF	; 255
     93e:	08 95       	ret

00000940 <__vector_71>:
     940:	1f 92       	push	r1
     942:	0f 92       	push	r0
     944:	0f b6       	in	r0, 0x3f	; 63
     946:	0f 92       	push	r0
     948:	11 24       	eor	r1, r1
     94a:	08 b6       	in	r0, 0x38	; 56
     94c:	0f 92       	push	r0
     94e:	18 be       	out	0x38, r1	; 56
     950:	09 b6       	in	r0, 0x39	; 57
     952:	0f 92       	push	r0
     954:	19 be       	out	0x39, r1	; 57
     956:	0b b6       	in	r0, 0x3b	; 59
     958:	0f 92       	push	r0
     95a:	1b be       	out	0x3b, r1	; 59
     95c:	2f 93       	push	r18
     95e:	3f 93       	push	r19
     960:	4f 93       	push	r20
     962:	5f 93       	push	r21
     964:	6f 93       	push	r22
     966:	7f 93       	push	r23
     968:	8f 93       	push	r24
     96a:	9f 93       	push	r25
     96c:	af 93       	push	r26
     96e:	bf 93       	push	r27
     970:	ef 93       	push	r30
     972:	ff 93       	push	r31
     974:	40 91 24 02 	lds	r20, 0x0224	; 0x800224 <__TEXT_REGION_LENGTH__+0x700224>
     978:	50 91 25 02 	lds	r21, 0x0225	; 0x800225 <__TEXT_REGION_LENGTH__+0x700225>
     97c:	e0 91 2c 20 	lds	r30, 0x202C	; 0x80202c <adca_callback>
     980:	f0 91 2d 20 	lds	r31, 0x202D	; 0x80202d <adca_callback+0x1>
     984:	61 e0       	ldi	r22, 0x01	; 1
     986:	80 e0       	ldi	r24, 0x00	; 0
     988:	92 e0       	ldi	r25, 0x02	; 2
     98a:	19 95       	eicall
     98c:	ff 91       	pop	r31
     98e:	ef 91       	pop	r30
     990:	bf 91       	pop	r27
     992:	af 91       	pop	r26
     994:	9f 91       	pop	r25
     996:	8f 91       	pop	r24
     998:	7f 91       	pop	r23
     99a:	6f 91       	pop	r22
     99c:	5f 91       	pop	r21
     99e:	4f 91       	pop	r20
     9a0:	3f 91       	pop	r19
     9a2:	2f 91       	pop	r18
     9a4:	0f 90       	pop	r0
     9a6:	0b be       	out	0x3b, r0	; 59
     9a8:	0f 90       	pop	r0
     9aa:	09 be       	out	0x39, r0	; 57
     9ac:	0f 90       	pop	r0
     9ae:	08 be       	out	0x38, r0	; 56
     9b0:	0f 90       	pop	r0
     9b2:	0f be       	out	0x3f, r0	; 63
     9b4:	0f 90       	pop	r0
     9b6:	1f 90       	pop	r1
     9b8:	18 95       	reti

000009ba <__vector_72>:
     9ba:	1f 92       	push	r1
     9bc:	0f 92       	push	r0
     9be:	0f b6       	in	r0, 0x3f	; 63
     9c0:	0f 92       	push	r0
     9c2:	11 24       	eor	r1, r1
     9c4:	08 b6       	in	r0, 0x38	; 56
     9c6:	0f 92       	push	r0
     9c8:	18 be       	out	0x38, r1	; 56
     9ca:	09 b6       	in	r0, 0x39	; 57
     9cc:	0f 92       	push	r0
     9ce:	19 be       	out	0x39, r1	; 57
     9d0:	0b b6       	in	r0, 0x3b	; 59
     9d2:	0f 92       	push	r0
     9d4:	1b be       	out	0x3b, r1	; 59
     9d6:	2f 93       	push	r18
     9d8:	3f 93       	push	r19
     9da:	4f 93       	push	r20
     9dc:	5f 93       	push	r21
     9de:	6f 93       	push	r22
     9e0:	7f 93       	push	r23
     9e2:	8f 93       	push	r24
     9e4:	9f 93       	push	r25
     9e6:	af 93       	push	r26
     9e8:	bf 93       	push	r27
     9ea:	ef 93       	push	r30
     9ec:	ff 93       	push	r31
     9ee:	40 91 2c 02 	lds	r20, 0x022C	; 0x80022c <__TEXT_REGION_LENGTH__+0x70022c>
     9f2:	50 91 2d 02 	lds	r21, 0x022D	; 0x80022d <__TEXT_REGION_LENGTH__+0x70022d>
     9f6:	e0 91 2c 20 	lds	r30, 0x202C	; 0x80202c <adca_callback>
     9fa:	f0 91 2d 20 	lds	r31, 0x202D	; 0x80202d <adca_callback+0x1>
     9fe:	62 e0       	ldi	r22, 0x02	; 2
     a00:	80 e0       	ldi	r24, 0x00	; 0
     a02:	92 e0       	ldi	r25, 0x02	; 2
     a04:	19 95       	eicall
     a06:	ff 91       	pop	r31
     a08:	ef 91       	pop	r30
     a0a:	bf 91       	pop	r27
     a0c:	af 91       	pop	r26
     a0e:	9f 91       	pop	r25
     a10:	8f 91       	pop	r24
     a12:	7f 91       	pop	r23
     a14:	6f 91       	pop	r22
     a16:	5f 91       	pop	r21
     a18:	4f 91       	pop	r20
     a1a:	3f 91       	pop	r19
     a1c:	2f 91       	pop	r18
     a1e:	0f 90       	pop	r0
     a20:	0b be       	out	0x3b, r0	; 59
     a22:	0f 90       	pop	r0
     a24:	09 be       	out	0x39, r0	; 57
     a26:	0f 90       	pop	r0
     a28:	08 be       	out	0x38, r0	; 56
     a2a:	0f 90       	pop	r0
     a2c:	0f be       	out	0x3f, r0	; 63
     a2e:	0f 90       	pop	r0
     a30:	1f 90       	pop	r1
     a32:	18 95       	reti

00000a34 <__vector_73>:
     a34:	1f 92       	push	r1
     a36:	0f 92       	push	r0
     a38:	0f b6       	in	r0, 0x3f	; 63
     a3a:	0f 92       	push	r0
     a3c:	11 24       	eor	r1, r1
     a3e:	08 b6       	in	r0, 0x38	; 56
     a40:	0f 92       	push	r0
     a42:	18 be       	out	0x38, r1	; 56
     a44:	09 b6       	in	r0, 0x39	; 57
     a46:	0f 92       	push	r0
     a48:	19 be       	out	0x39, r1	; 57
     a4a:	0b b6       	in	r0, 0x3b	; 59
     a4c:	0f 92       	push	r0
     a4e:	1b be       	out	0x3b, r1	; 59
     a50:	2f 93       	push	r18
     a52:	3f 93       	push	r19
     a54:	4f 93       	push	r20
     a56:	5f 93       	push	r21
     a58:	6f 93       	push	r22
     a5a:	7f 93       	push	r23
     a5c:	8f 93       	push	r24
     a5e:	9f 93       	push	r25
     a60:	af 93       	push	r26
     a62:	bf 93       	push	r27
     a64:	ef 93       	push	r30
     a66:	ff 93       	push	r31
     a68:	40 91 34 02 	lds	r20, 0x0234	; 0x800234 <__TEXT_REGION_LENGTH__+0x700234>
     a6c:	50 91 35 02 	lds	r21, 0x0235	; 0x800235 <__TEXT_REGION_LENGTH__+0x700235>
     a70:	e0 91 2c 20 	lds	r30, 0x202C	; 0x80202c <adca_callback>
     a74:	f0 91 2d 20 	lds	r31, 0x202D	; 0x80202d <adca_callback+0x1>
     a78:	64 e0       	ldi	r22, 0x04	; 4
     a7a:	80 e0       	ldi	r24, 0x00	; 0
     a7c:	92 e0       	ldi	r25, 0x02	; 2
     a7e:	19 95       	eicall
     a80:	ff 91       	pop	r31
     a82:	ef 91       	pop	r30
     a84:	bf 91       	pop	r27
     a86:	af 91       	pop	r26
     a88:	9f 91       	pop	r25
     a8a:	8f 91       	pop	r24
     a8c:	7f 91       	pop	r23
     a8e:	6f 91       	pop	r22
     a90:	5f 91       	pop	r21
     a92:	4f 91       	pop	r20
     a94:	3f 91       	pop	r19
     a96:	2f 91       	pop	r18
     a98:	0f 90       	pop	r0
     a9a:	0b be       	out	0x3b, r0	; 59
     a9c:	0f 90       	pop	r0
     a9e:	09 be       	out	0x39, r0	; 57
     aa0:	0f 90       	pop	r0
     aa2:	08 be       	out	0x38, r0	; 56
     aa4:	0f 90       	pop	r0
     aa6:	0f be       	out	0x3f, r0	; 63
     aa8:	0f 90       	pop	r0
     aaa:	1f 90       	pop	r1
     aac:	18 95       	reti

00000aae <__vector_74>:
     aae:	1f 92       	push	r1
     ab0:	0f 92       	push	r0
     ab2:	0f b6       	in	r0, 0x3f	; 63
     ab4:	0f 92       	push	r0
     ab6:	11 24       	eor	r1, r1
     ab8:	08 b6       	in	r0, 0x38	; 56
     aba:	0f 92       	push	r0
     abc:	18 be       	out	0x38, r1	; 56
     abe:	09 b6       	in	r0, 0x39	; 57
     ac0:	0f 92       	push	r0
     ac2:	19 be       	out	0x39, r1	; 57
     ac4:	0b b6       	in	r0, 0x3b	; 59
     ac6:	0f 92       	push	r0
     ac8:	1b be       	out	0x3b, r1	; 59
     aca:	2f 93       	push	r18
     acc:	3f 93       	push	r19
     ace:	4f 93       	push	r20
     ad0:	5f 93       	push	r21
     ad2:	6f 93       	push	r22
     ad4:	7f 93       	push	r23
     ad6:	8f 93       	push	r24
     ad8:	9f 93       	push	r25
     ada:	af 93       	push	r26
     adc:	bf 93       	push	r27
     ade:	ef 93       	push	r30
     ae0:	ff 93       	push	r31
     ae2:	40 91 3c 02 	lds	r20, 0x023C	; 0x80023c <__TEXT_REGION_LENGTH__+0x70023c>
     ae6:	50 91 3d 02 	lds	r21, 0x023D	; 0x80023d <__TEXT_REGION_LENGTH__+0x70023d>
     aea:	e0 91 2c 20 	lds	r30, 0x202C	; 0x80202c <adca_callback>
     aee:	f0 91 2d 20 	lds	r31, 0x202D	; 0x80202d <adca_callback+0x1>
     af2:	68 e0       	ldi	r22, 0x08	; 8
     af4:	80 e0       	ldi	r24, 0x00	; 0
     af6:	92 e0       	ldi	r25, 0x02	; 2
     af8:	19 95       	eicall
     afa:	ff 91       	pop	r31
     afc:	ef 91       	pop	r30
     afe:	bf 91       	pop	r27
     b00:	af 91       	pop	r26
     b02:	9f 91       	pop	r25
     b04:	8f 91       	pop	r24
     b06:	7f 91       	pop	r23
     b08:	6f 91       	pop	r22
     b0a:	5f 91       	pop	r21
     b0c:	4f 91       	pop	r20
     b0e:	3f 91       	pop	r19
     b10:	2f 91       	pop	r18
     b12:	0f 90       	pop	r0
     b14:	0b be       	out	0x3b, r0	; 59
     b16:	0f 90       	pop	r0
     b18:	09 be       	out	0x39, r0	; 57
     b1a:	0f 90       	pop	r0
     b1c:	08 be       	out	0x38, r0	; 56
     b1e:	0f 90       	pop	r0
     b20:	0f be       	out	0x3f, r0	; 63
     b22:	0f 90       	pop	r0
     b24:	1f 90       	pop	r1
     b26:	18 95       	reti

00000b28 <__vector_39>:
     b28:	1f 92       	push	r1
     b2a:	0f 92       	push	r0
     b2c:	0f b6       	in	r0, 0x3f	; 63
     b2e:	0f 92       	push	r0
     b30:	11 24       	eor	r1, r1
     b32:	08 b6       	in	r0, 0x38	; 56
     b34:	0f 92       	push	r0
     b36:	18 be       	out	0x38, r1	; 56
     b38:	09 b6       	in	r0, 0x39	; 57
     b3a:	0f 92       	push	r0
     b3c:	19 be       	out	0x39, r1	; 57
     b3e:	0b b6       	in	r0, 0x3b	; 59
     b40:	0f 92       	push	r0
     b42:	1b be       	out	0x3b, r1	; 59
     b44:	2f 93       	push	r18
     b46:	3f 93       	push	r19
     b48:	4f 93       	push	r20
     b4a:	5f 93       	push	r21
     b4c:	6f 93       	push	r22
     b4e:	7f 93       	push	r23
     b50:	8f 93       	push	r24
     b52:	9f 93       	push	r25
     b54:	af 93       	push	r26
     b56:	bf 93       	push	r27
     b58:	ef 93       	push	r30
     b5a:	ff 93       	push	r31
     b5c:	40 91 64 02 	lds	r20, 0x0264	; 0x800264 <__TEXT_REGION_LENGTH__+0x700264>
     b60:	50 91 65 02 	lds	r21, 0x0265	; 0x800265 <__TEXT_REGION_LENGTH__+0x700265>
     b64:	e0 91 2a 20 	lds	r30, 0x202A	; 0x80202a <adcb_callback>
     b68:	f0 91 2b 20 	lds	r31, 0x202B	; 0x80202b <adcb_callback+0x1>
     b6c:	61 e0       	ldi	r22, 0x01	; 1
     b6e:	80 e4       	ldi	r24, 0x40	; 64
     b70:	92 e0       	ldi	r25, 0x02	; 2
     b72:	19 95       	eicall
     b74:	ff 91       	pop	r31
     b76:	ef 91       	pop	r30
     b78:	bf 91       	pop	r27
     b7a:	af 91       	pop	r26
     b7c:	9f 91       	pop	r25
     b7e:	8f 91       	pop	r24
     b80:	7f 91       	pop	r23
     b82:	6f 91       	pop	r22
     b84:	5f 91       	pop	r21
     b86:	4f 91       	pop	r20
     b88:	3f 91       	pop	r19
     b8a:	2f 91       	pop	r18
     b8c:	0f 90       	pop	r0
     b8e:	0b be       	out	0x3b, r0	; 59
     b90:	0f 90       	pop	r0
     b92:	09 be       	out	0x39, r0	; 57
     b94:	0f 90       	pop	r0
     b96:	08 be       	out	0x38, r0	; 56
     b98:	0f 90       	pop	r0
     b9a:	0f be       	out	0x3f, r0	; 63
     b9c:	0f 90       	pop	r0
     b9e:	1f 90       	pop	r1
     ba0:	18 95       	reti

00000ba2 <__vector_40>:
     ba2:	1f 92       	push	r1
     ba4:	0f 92       	push	r0
     ba6:	0f b6       	in	r0, 0x3f	; 63
     ba8:	0f 92       	push	r0
     baa:	11 24       	eor	r1, r1
     bac:	08 b6       	in	r0, 0x38	; 56
     bae:	0f 92       	push	r0
     bb0:	18 be       	out	0x38, r1	; 56
     bb2:	09 b6       	in	r0, 0x39	; 57
     bb4:	0f 92       	push	r0
     bb6:	19 be       	out	0x39, r1	; 57
     bb8:	0b b6       	in	r0, 0x3b	; 59
     bba:	0f 92       	push	r0
     bbc:	1b be       	out	0x3b, r1	; 59
     bbe:	2f 93       	push	r18
     bc0:	3f 93       	push	r19
     bc2:	4f 93       	push	r20
     bc4:	5f 93       	push	r21
     bc6:	6f 93       	push	r22
     bc8:	7f 93       	push	r23
     bca:	8f 93       	push	r24
     bcc:	9f 93       	push	r25
     bce:	af 93       	push	r26
     bd0:	bf 93       	push	r27
     bd2:	ef 93       	push	r30
     bd4:	ff 93       	push	r31
     bd6:	40 91 6c 02 	lds	r20, 0x026C	; 0x80026c <__TEXT_REGION_LENGTH__+0x70026c>
     bda:	50 91 6d 02 	lds	r21, 0x026D	; 0x80026d <__TEXT_REGION_LENGTH__+0x70026d>
     bde:	e0 91 2a 20 	lds	r30, 0x202A	; 0x80202a <adcb_callback>
     be2:	f0 91 2b 20 	lds	r31, 0x202B	; 0x80202b <adcb_callback+0x1>
     be6:	62 e0       	ldi	r22, 0x02	; 2
     be8:	80 e4       	ldi	r24, 0x40	; 64
     bea:	92 e0       	ldi	r25, 0x02	; 2
     bec:	19 95       	eicall
     bee:	ff 91       	pop	r31
     bf0:	ef 91       	pop	r30
     bf2:	bf 91       	pop	r27
     bf4:	af 91       	pop	r26
     bf6:	9f 91       	pop	r25
     bf8:	8f 91       	pop	r24
     bfa:	7f 91       	pop	r23
     bfc:	6f 91       	pop	r22
     bfe:	5f 91       	pop	r21
     c00:	4f 91       	pop	r20
     c02:	3f 91       	pop	r19
     c04:	2f 91       	pop	r18
     c06:	0f 90       	pop	r0
     c08:	0b be       	out	0x3b, r0	; 59
     c0a:	0f 90       	pop	r0
     c0c:	09 be       	out	0x39, r0	; 57
     c0e:	0f 90       	pop	r0
     c10:	08 be       	out	0x38, r0	; 56
     c12:	0f 90       	pop	r0
     c14:	0f be       	out	0x3f, r0	; 63
     c16:	0f 90       	pop	r0
     c18:	1f 90       	pop	r1
     c1a:	18 95       	reti

00000c1c <__vector_41>:
     c1c:	1f 92       	push	r1
     c1e:	0f 92       	push	r0
     c20:	0f b6       	in	r0, 0x3f	; 63
     c22:	0f 92       	push	r0
     c24:	11 24       	eor	r1, r1
     c26:	08 b6       	in	r0, 0x38	; 56
     c28:	0f 92       	push	r0
     c2a:	18 be       	out	0x38, r1	; 56
     c2c:	09 b6       	in	r0, 0x39	; 57
     c2e:	0f 92       	push	r0
     c30:	19 be       	out	0x39, r1	; 57
     c32:	0b b6       	in	r0, 0x3b	; 59
     c34:	0f 92       	push	r0
     c36:	1b be       	out	0x3b, r1	; 59
     c38:	2f 93       	push	r18
     c3a:	3f 93       	push	r19
     c3c:	4f 93       	push	r20
     c3e:	5f 93       	push	r21
     c40:	6f 93       	push	r22
     c42:	7f 93       	push	r23
     c44:	8f 93       	push	r24
     c46:	9f 93       	push	r25
     c48:	af 93       	push	r26
     c4a:	bf 93       	push	r27
     c4c:	ef 93       	push	r30
     c4e:	ff 93       	push	r31
     c50:	40 91 74 02 	lds	r20, 0x0274	; 0x800274 <__TEXT_REGION_LENGTH__+0x700274>
     c54:	50 91 75 02 	lds	r21, 0x0275	; 0x800275 <__TEXT_REGION_LENGTH__+0x700275>
     c58:	e0 91 2a 20 	lds	r30, 0x202A	; 0x80202a <adcb_callback>
     c5c:	f0 91 2b 20 	lds	r31, 0x202B	; 0x80202b <adcb_callback+0x1>
     c60:	64 e0       	ldi	r22, 0x04	; 4
     c62:	80 e4       	ldi	r24, 0x40	; 64
     c64:	92 e0       	ldi	r25, 0x02	; 2
     c66:	19 95       	eicall
     c68:	ff 91       	pop	r31
     c6a:	ef 91       	pop	r30
     c6c:	bf 91       	pop	r27
     c6e:	af 91       	pop	r26
     c70:	9f 91       	pop	r25
     c72:	8f 91       	pop	r24
     c74:	7f 91       	pop	r23
     c76:	6f 91       	pop	r22
     c78:	5f 91       	pop	r21
     c7a:	4f 91       	pop	r20
     c7c:	3f 91       	pop	r19
     c7e:	2f 91       	pop	r18
     c80:	0f 90       	pop	r0
     c82:	0b be       	out	0x3b, r0	; 59
     c84:	0f 90       	pop	r0
     c86:	09 be       	out	0x39, r0	; 57
     c88:	0f 90       	pop	r0
     c8a:	08 be       	out	0x38, r0	; 56
     c8c:	0f 90       	pop	r0
     c8e:	0f be       	out	0x3f, r0	; 63
     c90:	0f 90       	pop	r0
     c92:	1f 90       	pop	r1
     c94:	18 95       	reti

00000c96 <__vector_42>:
     c96:	1f 92       	push	r1
     c98:	0f 92       	push	r0
     c9a:	0f b6       	in	r0, 0x3f	; 63
     c9c:	0f 92       	push	r0
     c9e:	11 24       	eor	r1, r1
     ca0:	08 b6       	in	r0, 0x38	; 56
     ca2:	0f 92       	push	r0
     ca4:	18 be       	out	0x38, r1	; 56
     ca6:	09 b6       	in	r0, 0x39	; 57
     ca8:	0f 92       	push	r0
     caa:	19 be       	out	0x39, r1	; 57
     cac:	0b b6       	in	r0, 0x3b	; 59
     cae:	0f 92       	push	r0
     cb0:	1b be       	out	0x3b, r1	; 59
     cb2:	2f 93       	push	r18
     cb4:	3f 93       	push	r19
     cb6:	4f 93       	push	r20
     cb8:	5f 93       	push	r21
     cba:	6f 93       	push	r22
     cbc:	7f 93       	push	r23
     cbe:	8f 93       	push	r24
     cc0:	9f 93       	push	r25
     cc2:	af 93       	push	r26
     cc4:	bf 93       	push	r27
     cc6:	ef 93       	push	r30
     cc8:	ff 93       	push	r31
     cca:	40 91 7c 02 	lds	r20, 0x027C	; 0x80027c <__TEXT_REGION_LENGTH__+0x70027c>
     cce:	50 91 7d 02 	lds	r21, 0x027D	; 0x80027d <__TEXT_REGION_LENGTH__+0x70027d>
     cd2:	e0 91 2a 20 	lds	r30, 0x202A	; 0x80202a <adcb_callback>
     cd6:	f0 91 2b 20 	lds	r31, 0x202B	; 0x80202b <adcb_callback+0x1>
     cda:	68 e0       	ldi	r22, 0x08	; 8
     cdc:	80 e4       	ldi	r24, 0x40	; 64
     cde:	92 e0       	ldi	r25, 0x02	; 2
     ce0:	19 95       	eicall
     ce2:	ff 91       	pop	r31
     ce4:	ef 91       	pop	r30
     ce6:	bf 91       	pop	r27
     ce8:	af 91       	pop	r26
     cea:	9f 91       	pop	r25
     cec:	8f 91       	pop	r24
     cee:	7f 91       	pop	r23
     cf0:	6f 91       	pop	r22
     cf2:	5f 91       	pop	r21
     cf4:	4f 91       	pop	r20
     cf6:	3f 91       	pop	r19
     cf8:	2f 91       	pop	r18
     cfa:	0f 90       	pop	r0
     cfc:	0b be       	out	0x3b, r0	; 59
     cfe:	0f 90       	pop	r0
     d00:	09 be       	out	0x39, r0	; 57
     d02:	0f 90       	pop	r0
     d04:	08 be       	out	0x38, r0	; 56
     d06:	0f 90       	pop	r0
     d08:	0f be       	out	0x3f, r0	; 63
     d0a:	0f 90       	pop	r0
     d0c:	1f 90       	pop	r1
     d0e:	18 95       	reti

00000d10 <ccp_write_io>:
     d10:	1b be       	out	0x3b, r1	; 59
     d12:	fc 01       	movw	r30, r24
     d14:	28 ed       	ldi	r18, 0xD8	; 216
     d16:	24 bf       	out	0x34, r18	; 52
     d18:	60 83       	st	Z, r22
     d1a:	08 95       	ret

00000d1c <nvm_eeprom_flush_buffer>:
     d1c:	e0 ec       	ldi	r30, 0xC0	; 192
     d1e:	f1 e0       	ldi	r31, 0x01	; 1
     d20:	87 85       	ldd	r24, Z+15	; 0x0f
     d22:	88 23       	and	r24, r24
     d24:	ec f3       	brlt	.-6      	; 0xd20 <nvm_eeprom_flush_buffer+0x4>
     d26:	80 91 cf 01 	lds	r24, 0x01CF	; 0x8001cf <__TEXT_REGION_LENGTH__+0x7001cf>
     d2a:	81 ff       	sbrs	r24, 1
     d2c:	07 c0       	rjmp	.+14     	; 0xd3c <nvm_eeprom_flush_buffer+0x20>
     d2e:	86 e3       	ldi	r24, 0x36	; 54
     d30:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <__TEXT_REGION_LENGTH__+0x7001ca>
     d34:	61 e0       	ldi	r22, 0x01	; 1
     d36:	8b ec       	ldi	r24, 0xCB	; 203
     d38:	91 e0       	ldi	r25, 0x01	; 1
     d3a:	ea cf       	rjmp	.-44     	; 0xd10 <ccp_write_io>
     d3c:	08 95       	ret

00000d3e <nvm_eeprom_load_byte_to_buffer>:
     d3e:	e0 ec       	ldi	r30, 0xC0	; 192
     d40:	f1 e0       	ldi	r31, 0x01	; 1
     d42:	97 85       	ldd	r25, Z+15	; 0x0f
     d44:	99 23       	and	r25, r25
     d46:	ec f3       	brlt	.-6      	; 0xd42 <nvm_eeprom_load_byte_to_buffer+0x4>
     d48:	ac ec       	ldi	r26, 0xCC	; 204
     d4a:	b1 e0       	ldi	r27, 0x01	; 1
     d4c:	9c 91       	ld	r25, X
     d4e:	98 60       	ori	r25, 0x08	; 8
     d50:	9c 93       	st	X, r25
     d52:	e8 2f       	mov	r30, r24
     d54:	f0 e0       	ldi	r31, 0x00	; 0
     d56:	f0 5f       	subi	r31, 0xF0	; 240
     d58:	60 83       	st	Z, r22
     d5a:	8c 91       	ld	r24, X
     d5c:	87 7f       	andi	r24, 0xF7	; 247
     d5e:	8c 93       	st	X, r24
     d60:	08 95       	ret

00000d62 <nvm_eeprom_write_byte>:
     d62:	ff 92       	push	r15
     d64:	0f 93       	push	r16
     d66:	1f 93       	push	r17
     d68:	cf 93       	push	r28
     d6a:	df 93       	push	r29
     d6c:	18 2f       	mov	r17, r24
     d6e:	f9 2e       	mov	r15, r25
     d70:	c6 2f       	mov	r28, r22
     d72:	00 91 ca 01 	lds	r16, 0x01CA	; 0x8001ca <__TEXT_REGION_LENGTH__+0x7001ca>
     d76:	d2 df       	rcall	.-92     	; 0xd1c <nvm_eeprom_flush_buffer>
     d78:	e0 ec       	ldi	r30, 0xC0	; 192
     d7a:	f1 e0       	ldi	r31, 0x01	; 1
     d7c:	27 85       	ldd	r18, Z+15	; 0x0f
     d7e:	22 23       	and	r18, r18
     d80:	ec f3       	brlt	.-6      	; 0xd7c <nvm_eeprom_write_byte+0x1a>
     d82:	6c 2f       	mov	r22, r28
     d84:	81 2f       	mov	r24, r17
     d86:	db df       	rcall	.-74     	; 0xd3e <nvm_eeprom_load_byte_to_buffer>
     d88:	c0 ec       	ldi	r28, 0xC0	; 192
     d8a:	d1 e0       	ldi	r29, 0x01	; 1
     d8c:	1a 82       	std	Y+2, r1	; 0x02
     d8e:	f9 82       	std	Y+1, r15	; 0x01
     d90:	18 83       	st	Y, r17
     d92:	85 e3       	ldi	r24, 0x35	; 53
     d94:	8a 87       	std	Y+10, r24	; 0x0a
     d96:	61 e0       	ldi	r22, 0x01	; 1
     d98:	8b ec       	ldi	r24, 0xCB	; 203
     d9a:	91 e0       	ldi	r25, 0x01	; 1
     d9c:	b9 df       	rcall	.-142    	; 0xd10 <ccp_write_io>
     d9e:	0a 87       	std	Y+10, r16	; 0x0a
     da0:	df 91       	pop	r29
     da2:	cf 91       	pop	r28
     da4:	1f 91       	pop	r17
     da6:	0f 91       	pop	r16
     da8:	ff 90       	pop	r15
     daa:	08 95       	ret

00000dac <nvm_read_byte>:
     dac:	40 91 ca 01 	lds	r20, 0x01CA	; 0x8001ca <__TEXT_REGION_LENGTH__+0x7001ca>
     db0:	e6 2f       	mov	r30, r22
     db2:	f7 2f       	mov	r31, r23
     db4:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <__TEXT_REGION_LENGTH__+0x7001ca>
     db8:	84 91       	lpm	r24, Z
     dba:	40 93 ca 01 	sts	0x01CA, r20	; 0x8001ca <__TEXT_REGION_LENGTH__+0x7001ca>
     dbe:	08 95       	ret

00000dc0 <usart_putchar>:
     dc0:	fc 01       	movw	r30, r24
     dc2:	91 81       	ldd	r25, Z+1	; 0x01
     dc4:	95 ff       	sbrs	r25, 5
     dc6:	fd cf       	rjmp	.-6      	; 0xdc2 <usart_putchar+0x2>
     dc8:	60 83       	st	Z, r22
     dca:	80 e0       	ldi	r24, 0x00	; 0
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	08 95       	ret

00000dd0 <usart_getchar>:
     dd0:	fc 01       	movw	r30, r24
     dd2:	91 81       	ldd	r25, Z+1	; 0x01
     dd4:	99 23       	and	r25, r25
     dd6:	ec f7       	brge	.-6      	; 0xdd2 <usart_getchar+0x2>
     dd8:	80 81       	ld	r24, Z
     dda:	08 95       	ret

00000ddc <usart_set_baudrate>:
     ddc:	2f 92       	push	r2
     dde:	3f 92       	push	r3
     de0:	4f 92       	push	r4
     de2:	5f 92       	push	r5
     de4:	6f 92       	push	r6
     de6:	7f 92       	push	r7
     de8:	8f 92       	push	r8
     dea:	9f 92       	push	r9
     dec:	af 92       	push	r10
     dee:	bf 92       	push	r11
     df0:	cf 92       	push	r12
     df2:	df 92       	push	r13
     df4:	ef 92       	push	r14
     df6:	ff 92       	push	r15
     df8:	0f 93       	push	r16
     dfa:	1f 93       	push	r17
     dfc:	cf 93       	push	r28
     dfe:	1c 01       	movw	r2, r24
     e00:	2a 01       	movw	r4, r20
     e02:	3b 01       	movw	r6, r22
     e04:	48 01       	movw	r8, r16
     e06:	59 01       	movw	r10, r18
     e08:	d9 01       	movw	r26, r18
     e0a:	c8 01       	movw	r24, r16
     e0c:	68 94       	set
     e0e:	12 f8       	bld	r1, 2
     e10:	b6 95       	lsr	r27
     e12:	a7 95       	ror	r26
     e14:	97 95       	ror	r25
     e16:	87 95       	ror	r24
     e18:	16 94       	lsr	r1
     e1a:	d1 f7       	brne	.-12     	; 0xe10 <usart_set_baudrate+0x34>
     e1c:	b9 01       	movw	r22, r18
     e1e:	a8 01       	movw	r20, r16
     e20:	03 2e       	mov	r0, r19
     e22:	36 e1       	ldi	r19, 0x16	; 22
     e24:	76 95       	lsr	r23
     e26:	67 95       	ror	r22
     e28:	57 95       	ror	r21
     e2a:	47 95       	ror	r20
     e2c:	3a 95       	dec	r19
     e2e:	d1 f7       	brne	.-12     	; 0xe24 <usart_set_baudrate+0x48>
     e30:	30 2d       	mov	r19, r0
     e32:	f1 01       	movw	r30, r2
     e34:	24 81       	ldd	r18, Z+4	; 0x04
     e36:	22 fd       	sbrc	r18, 2
     e38:	08 c0       	rjmp	.+16     	; 0xe4a <usart_set_baudrate+0x6e>
     e3a:	b6 95       	lsr	r27
     e3c:	a7 95       	ror	r26
     e3e:	97 95       	ror	r25
     e40:	87 95       	ror	r24
     e42:	76 95       	lsr	r23
     e44:	67 95       	ror	r22
     e46:	57 95       	ror	r21
     e48:	47 95       	ror	r20
     e4a:	84 15       	cp	r24, r4
     e4c:	95 05       	cpc	r25, r5
     e4e:	a6 05       	cpc	r26, r6
     e50:	b7 05       	cpc	r27, r7
     e52:	08 f4       	brcc	.+2      	; 0xe56 <usart_set_baudrate+0x7a>
     e54:	ae c0       	rjmp	.+348    	; 0xfb2 <usart_set_baudrate+0x1d6>
     e56:	44 16       	cp	r4, r20
     e58:	55 06       	cpc	r5, r21
     e5a:	66 06       	cpc	r6, r22
     e5c:	77 06       	cpc	r7, r23
     e5e:	08 f4       	brcc	.+2      	; 0xe62 <usart_set_baudrate+0x86>
     e60:	aa c0       	rjmp	.+340    	; 0xfb6 <usart_set_baudrate+0x1da>
     e62:	f1 01       	movw	r30, r2
     e64:	84 81       	ldd	r24, Z+4	; 0x04
     e66:	82 fd       	sbrc	r24, 2
     e68:	04 c0       	rjmp	.+8      	; 0xe72 <usart_set_baudrate+0x96>
     e6a:	44 0c       	add	r4, r4
     e6c:	55 1c       	adc	r5, r5
     e6e:	66 1c       	adc	r6, r6
     e70:	77 1c       	adc	r7, r7
     e72:	c5 01       	movw	r24, r10
     e74:	b4 01       	movw	r22, r8
     e76:	a3 01       	movw	r20, r6
     e78:	92 01       	movw	r18, r4
     e7a:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <__udivmodsi4>
     e7e:	2f 3f       	cpi	r18, 0xFF	; 255
     e80:	31 05       	cpc	r19, r1
     e82:	41 05       	cpc	r20, r1
     e84:	51 05       	cpc	r21, r1
     e86:	08 f4       	brcc	.+2      	; 0xe8a <usart_set_baudrate+0xae>
     e88:	98 c0       	rjmp	.+304    	; 0xfba <usart_set_baudrate+0x1de>
     e8a:	c1 2c       	mov	r12, r1
     e8c:	d1 2c       	mov	r13, r1
     e8e:	76 01       	movw	r14, r12
     e90:	ca 94       	dec	r12
     e92:	c9 ef       	ldi	r28, 0xF9	; 249
     e94:	05 c0       	rjmp	.+10     	; 0xea0 <usart_set_baudrate+0xc4>
     e96:	2c 15       	cp	r18, r12
     e98:	3d 05       	cpc	r19, r13
     e9a:	4e 05       	cpc	r20, r14
     e9c:	5f 05       	cpc	r21, r15
     e9e:	68 f0       	brcs	.+26     	; 0xeba <usart_set_baudrate+0xde>
     ea0:	cc 0c       	add	r12, r12
     ea2:	dd 1c       	adc	r13, r13
     ea4:	ee 1c       	adc	r14, r14
     ea6:	ff 1c       	adc	r15, r15
     ea8:	cd 3f       	cpi	r28, 0xFD	; 253
     eaa:	14 f4       	brge	.+4      	; 0xeb0 <usart_set_baudrate+0xd4>
     eac:	68 94       	set
     eae:	c0 f8       	bld	r12, 0
     eb0:	cf 5f       	subi	r28, 0xFF	; 255
     eb2:	c7 30       	cpi	r28, 0x07	; 7
     eb4:	81 f7       	brne	.-32     	; 0xe96 <usart_set_baudrate+0xba>
     eb6:	8c 2f       	mov	r24, r28
     eb8:	56 c0       	rjmp	.+172    	; 0xf66 <usart_set_baudrate+0x18a>
     eba:	8c 2f       	mov	r24, r28
     ebc:	cc 23       	and	r28, r28
     ebe:	0c f0       	brlt	.+2      	; 0xec2 <usart_set_baudrate+0xe6>
     ec0:	52 c0       	rjmp	.+164    	; 0xf66 <usart_set_baudrate+0x18a>
     ec2:	d3 01       	movw	r26, r6
     ec4:	c2 01       	movw	r24, r4
     ec6:	88 0f       	add	r24, r24
     ec8:	99 1f       	adc	r25, r25
     eca:	aa 1f       	adc	r26, r26
     ecc:	bb 1f       	adc	r27, r27
     ece:	88 0f       	add	r24, r24
     ed0:	99 1f       	adc	r25, r25
     ed2:	aa 1f       	adc	r26, r26
     ed4:	bb 1f       	adc	r27, r27
     ed6:	88 0f       	add	r24, r24
     ed8:	99 1f       	adc	r25, r25
     eda:	aa 1f       	adc	r26, r26
     edc:	bb 1f       	adc	r27, r27
     ede:	85 01       	movw	r16, r10
     ee0:	74 01       	movw	r14, r8
     ee2:	e8 1a       	sub	r14, r24
     ee4:	f9 0a       	sbc	r15, r25
     ee6:	0a 0b       	sbc	r16, r26
     ee8:	1b 0b       	sbc	r17, r27
     eea:	d8 01       	movw	r26, r16
     eec:	c7 01       	movw	r24, r14
     eee:	ce 3f       	cpi	r28, 0xFE	; 254
     ef0:	f4 f4       	brge	.+60     	; 0xf2e <usart_set_baudrate+0x152>
     ef2:	2d ef       	ldi	r18, 0xFD	; 253
     ef4:	3f ef       	ldi	r19, 0xFF	; 255
     ef6:	2c 1b       	sub	r18, r28
     ef8:	31 09       	sbc	r19, r1
     efa:	c7 fd       	sbrc	r28, 7
     efc:	33 95       	inc	r19
     efe:	04 c0       	rjmp	.+8      	; 0xf08 <usart_set_baudrate+0x12c>
     f00:	88 0f       	add	r24, r24
     f02:	99 1f       	adc	r25, r25
     f04:	aa 1f       	adc	r26, r26
     f06:	bb 1f       	adc	r27, r27
     f08:	2a 95       	dec	r18
     f0a:	d2 f7       	brpl	.-12     	; 0xf00 <usart_set_baudrate+0x124>
     f0c:	73 01       	movw	r14, r6
     f0e:	62 01       	movw	r12, r4
     f10:	f6 94       	lsr	r15
     f12:	e7 94       	ror	r14
     f14:	d7 94       	ror	r13
     f16:	c7 94       	ror	r12
     f18:	bc 01       	movw	r22, r24
     f1a:	cd 01       	movw	r24, r26
     f1c:	6c 0d       	add	r22, r12
     f1e:	7d 1d       	adc	r23, r13
     f20:	8e 1d       	adc	r24, r14
     f22:	9f 1d       	adc	r25, r15
     f24:	a3 01       	movw	r20, r6
     f26:	92 01       	movw	r18, r4
     f28:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <__udivmodsi4>
     f2c:	38 c0       	rjmp	.+112    	; 0xf9e <usart_set_baudrate+0x1c2>
     f2e:	23 e0       	ldi	r18, 0x03	; 3
     f30:	2c 0f       	add	r18, r28
     f32:	83 01       	movw	r16, r6
     f34:	72 01       	movw	r14, r4
     f36:	04 c0       	rjmp	.+8      	; 0xf40 <usart_set_baudrate+0x164>
     f38:	ee 0c       	add	r14, r14
     f3a:	ff 1c       	adc	r15, r15
     f3c:	00 1f       	adc	r16, r16
     f3e:	11 1f       	adc	r17, r17
     f40:	2a 95       	dec	r18
     f42:	d2 f7       	brpl	.-12     	; 0xf38 <usart_set_baudrate+0x15c>
     f44:	a8 01       	movw	r20, r16
     f46:	97 01       	movw	r18, r14
     f48:	67 01       	movw	r12, r14
     f4a:	78 01       	movw	r14, r16
     f4c:	f6 94       	lsr	r15
     f4e:	e7 94       	ror	r14
     f50:	d7 94       	ror	r13
     f52:	c7 94       	ror	r12
     f54:	bc 01       	movw	r22, r24
     f56:	cd 01       	movw	r24, r26
     f58:	6c 0d       	add	r22, r12
     f5a:	7d 1d       	adc	r23, r13
     f5c:	8e 1d       	adc	r24, r14
     f5e:	9f 1d       	adc	r25, r15
     f60:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <__udivmodsi4>
     f64:	1c c0       	rjmp	.+56     	; 0xf9e <usart_set_baudrate+0x1c2>
     f66:	8d 5f       	subi	r24, 0xFD	; 253
     f68:	a3 01       	movw	r20, r6
     f6a:	92 01       	movw	r18, r4
     f6c:	04 c0       	rjmp	.+8      	; 0xf76 <usart_set_baudrate+0x19a>
     f6e:	22 0f       	add	r18, r18
     f70:	33 1f       	adc	r19, r19
     f72:	44 1f       	adc	r20, r20
     f74:	55 1f       	adc	r21, r21
     f76:	8a 95       	dec	r24
     f78:	d2 f7       	brpl	.-12     	; 0xf6e <usart_set_baudrate+0x192>
     f7a:	da 01       	movw	r26, r20
     f7c:	c9 01       	movw	r24, r18
     f7e:	b6 95       	lsr	r27
     f80:	a7 95       	ror	r26
     f82:	97 95       	ror	r25
     f84:	87 95       	ror	r24
     f86:	bc 01       	movw	r22, r24
     f88:	cd 01       	movw	r24, r26
     f8a:	68 0d       	add	r22, r8
     f8c:	79 1d       	adc	r23, r9
     f8e:	8a 1d       	adc	r24, r10
     f90:	9b 1d       	adc	r25, r11
     f92:	0e 94 ca 16 	call	0x2d94	; 0x2d94 <__udivmodsi4>
     f96:	21 50       	subi	r18, 0x01	; 1
     f98:	31 09       	sbc	r19, r1
     f9a:	41 09       	sbc	r20, r1
     f9c:	51 09       	sbc	r21, r1
     f9e:	83 2f       	mov	r24, r19
     fa0:	8f 70       	andi	r24, 0x0F	; 15
     fa2:	c2 95       	swap	r28
     fa4:	c0 7f       	andi	r28, 0xF0	; 240
     fa6:	c8 2b       	or	r28, r24
     fa8:	f1 01       	movw	r30, r2
     faa:	c7 83       	std	Z+7, r28	; 0x07
     fac:	26 83       	std	Z+6, r18	; 0x06
     fae:	81 e0       	ldi	r24, 0x01	; 1
     fb0:	1c c0       	rjmp	.+56     	; 0xfea <usart_set_baudrate+0x20e>
     fb2:	80 e0       	ldi	r24, 0x00	; 0
     fb4:	1a c0       	rjmp	.+52     	; 0xfea <usart_set_baudrate+0x20e>
     fb6:	80 e0       	ldi	r24, 0x00	; 0
     fb8:	18 c0       	rjmp	.+48     	; 0xfea <usart_set_baudrate+0x20e>
     fba:	d3 01       	movw	r26, r6
     fbc:	c2 01       	movw	r24, r4
     fbe:	88 0f       	add	r24, r24
     fc0:	99 1f       	adc	r25, r25
     fc2:	aa 1f       	adc	r26, r26
     fc4:	bb 1f       	adc	r27, r27
     fc6:	88 0f       	add	r24, r24
     fc8:	99 1f       	adc	r25, r25
     fca:	aa 1f       	adc	r26, r26
     fcc:	bb 1f       	adc	r27, r27
     fce:	88 0f       	add	r24, r24
     fd0:	99 1f       	adc	r25, r25
     fd2:	aa 1f       	adc	r26, r26
     fd4:	bb 1f       	adc	r27, r27
     fd6:	85 01       	movw	r16, r10
     fd8:	74 01       	movw	r14, r8
     fda:	e8 1a       	sub	r14, r24
     fdc:	f9 0a       	sbc	r15, r25
     fde:	0a 0b       	sbc	r16, r26
     fe0:	1b 0b       	sbc	r17, r27
     fe2:	d8 01       	movw	r26, r16
     fe4:	c7 01       	movw	r24, r14
     fe6:	c9 ef       	ldi	r28, 0xF9	; 249
     fe8:	84 cf       	rjmp	.-248    	; 0xef2 <usart_set_baudrate+0x116>
     fea:	cf 91       	pop	r28
     fec:	1f 91       	pop	r17
     fee:	0f 91       	pop	r16
     ff0:	ff 90       	pop	r15
     ff2:	ef 90       	pop	r14
     ff4:	df 90       	pop	r13
     ff6:	cf 90       	pop	r12
     ff8:	bf 90       	pop	r11
     ffa:	af 90       	pop	r10
     ffc:	9f 90       	pop	r9
     ffe:	8f 90       	pop	r8
    1000:	7f 90       	pop	r7
    1002:	6f 90       	pop	r6
    1004:	5f 90       	pop	r5
    1006:	4f 90       	pop	r4
    1008:	3f 90       	pop	r3
    100a:	2f 90       	pop	r2
    100c:	08 95       	ret

0000100e <usart_init_rs232>:
    100e:	0f 93       	push	r16
    1010:	1f 93       	push	r17
    1012:	cf 93       	push	r28
    1014:	df 93       	push	r29
    1016:	ec 01       	movw	r28, r24
    1018:	8b 01       	movw	r16, r22
    101a:	00 97       	sbiw	r24, 0x00	; 0
    101c:	09 f4       	brne	.+2      	; 0x1020 <usart_init_rs232+0x12>
    101e:	36 c1       	rjmp	.+620    	; 0x128c <usart_init_rs232+0x27e>
    1020:	80 3c       	cpi	r24, 0xC0	; 192
    1022:	91 05       	cpc	r25, r1
    1024:	21 f4       	brne	.+8      	; 0x102e <usart_init_rs232+0x20>
    1026:	60 e1       	ldi	r22, 0x10	; 16
    1028:	80 e0       	ldi	r24, 0x00	; 0
    102a:	53 dc       	rcall	.-1882   	; 0x8d2 <sysclk_enable_module>
    102c:	2f c1       	rjmp	.+606    	; 0x128c <usart_init_rs232+0x27e>
    102e:	c0 34       	cpi	r28, 0x40	; 64
    1030:	84 e0       	ldi	r24, 0x04	; 4
    1032:	d8 07       	cpc	r29, r24
    1034:	21 f4       	brne	.+8      	; 0x103e <usart_init_rs232+0x30>
    1036:	68 e0       	ldi	r22, 0x08	; 8
    1038:	80 e0       	ldi	r24, 0x00	; 0
    103a:	4b dc       	rcall	.-1898   	; 0x8d2 <sysclk_enable_module>
    103c:	27 c1       	rjmp	.+590    	; 0x128c <usart_init_rs232+0x27e>
    103e:	c1 15       	cp	r28, r1
    1040:	e4 e0       	ldi	r30, 0x04	; 4
    1042:	de 07       	cpc	r29, r30
    1044:	21 f4       	brne	.+8      	; 0x104e <usart_init_rs232+0x40>
    1046:	64 e0       	ldi	r22, 0x04	; 4
    1048:	80 e0       	ldi	r24, 0x00	; 0
    104a:	43 dc       	rcall	.-1914   	; 0x8d2 <sysclk_enable_module>
    104c:	1f c1       	rjmp	.+574    	; 0x128c <usart_init_rs232+0x27e>
    104e:	c0 38       	cpi	r28, 0x80	; 128
    1050:	f1 e0       	ldi	r31, 0x01	; 1
    1052:	df 07       	cpc	r29, r31
    1054:	21 f4       	brne	.+8      	; 0x105e <usart_init_rs232+0x50>
    1056:	62 e0       	ldi	r22, 0x02	; 2
    1058:	80 e0       	ldi	r24, 0x00	; 0
    105a:	3b dc       	rcall	.-1930   	; 0x8d2 <sysclk_enable_module>
    105c:	17 c1       	rjmp	.+558    	; 0x128c <usart_init_rs232+0x27e>
    105e:	c1 15       	cp	r28, r1
    1060:	81 e0       	ldi	r24, 0x01	; 1
    1062:	d8 07       	cpc	r29, r24
    1064:	21 f4       	brne	.+8      	; 0x106e <usart_init_rs232+0x60>
    1066:	61 e0       	ldi	r22, 0x01	; 1
    1068:	80 e0       	ldi	r24, 0x00	; 0
    106a:	33 dc       	rcall	.-1946   	; 0x8d2 <sysclk_enable_module>
    106c:	0f c1       	rjmp	.+542    	; 0x128c <usart_init_rs232+0x27e>
    106e:	c0 38       	cpi	r28, 0x80	; 128
    1070:	e3 e0       	ldi	r30, 0x03	; 3
    1072:	de 07       	cpc	r29, r30
    1074:	21 f4       	brne	.+8      	; 0x107e <usart_init_rs232+0x70>
    1076:	61 e0       	ldi	r22, 0x01	; 1
    1078:	81 e0       	ldi	r24, 0x01	; 1
    107a:	2b dc       	rcall	.-1962   	; 0x8d2 <sysclk_enable_module>
    107c:	07 c1       	rjmp	.+526    	; 0x128c <usart_init_rs232+0x27e>
    107e:	c0 39       	cpi	r28, 0x90	; 144
    1080:	f3 e0       	ldi	r31, 0x03	; 3
    1082:	df 07       	cpc	r29, r31
    1084:	21 f4       	brne	.+8      	; 0x108e <usart_init_rs232+0x80>
    1086:	61 e0       	ldi	r22, 0x01	; 1
    1088:	82 e0       	ldi	r24, 0x02	; 2
    108a:	23 dc       	rcall	.-1978   	; 0x8d2 <sysclk_enable_module>
    108c:	ff c0       	rjmp	.+510    	; 0x128c <usart_init_rs232+0x27e>
    108e:	c1 15       	cp	r28, r1
    1090:	82 e0       	ldi	r24, 0x02	; 2
    1092:	d8 07       	cpc	r29, r24
    1094:	21 f4       	brne	.+8      	; 0x109e <usart_init_rs232+0x90>
    1096:	62 e0       	ldi	r22, 0x02	; 2
    1098:	81 e0       	ldi	r24, 0x01	; 1
    109a:	1b dc       	rcall	.-1994   	; 0x8d2 <sysclk_enable_module>
    109c:	f7 c0       	rjmp	.+494    	; 0x128c <usart_init_rs232+0x27e>
    109e:	c0 34       	cpi	r28, 0x40	; 64
    10a0:	e2 e0       	ldi	r30, 0x02	; 2
    10a2:	de 07       	cpc	r29, r30
    10a4:	21 f4       	brne	.+8      	; 0x10ae <usart_init_rs232+0xa0>
    10a6:	62 e0       	ldi	r22, 0x02	; 2
    10a8:	82 e0       	ldi	r24, 0x02	; 2
    10aa:	13 dc       	rcall	.-2010   	; 0x8d2 <sysclk_enable_module>
    10ac:	ef c0       	rjmp	.+478    	; 0x128c <usart_init_rs232+0x27e>
    10ae:	c1 15       	cp	r28, r1
    10b0:	f3 e0       	ldi	r31, 0x03	; 3
    10b2:	df 07       	cpc	r29, r31
    10b4:	21 f4       	brne	.+8      	; 0x10be <usart_init_rs232+0xb0>
    10b6:	64 e0       	ldi	r22, 0x04	; 4
    10b8:	81 e0       	ldi	r24, 0x01	; 1
    10ba:	0b dc       	rcall	.-2026   	; 0x8d2 <sysclk_enable_module>
    10bc:	e7 c0       	rjmp	.+462    	; 0x128c <usart_init_rs232+0x27e>
    10be:	c0 32       	cpi	r28, 0x20	; 32
    10c0:	83 e0       	ldi	r24, 0x03	; 3
    10c2:	d8 07       	cpc	r29, r24
    10c4:	21 f4       	brne	.+8      	; 0x10ce <usart_init_rs232+0xc0>
    10c6:	64 e0       	ldi	r22, 0x04	; 4
    10c8:	82 e0       	ldi	r24, 0x02	; 2
    10ca:	03 dc       	rcall	.-2042   	; 0x8d2 <sysclk_enable_module>
    10cc:	df c0       	rjmp	.+446    	; 0x128c <usart_init_rs232+0x27e>
    10ce:	c1 15       	cp	r28, r1
    10d0:	e8 e0       	ldi	r30, 0x08	; 8
    10d2:	de 07       	cpc	r29, r30
    10d4:	21 f4       	brne	.+8      	; 0x10de <usart_init_rs232+0xd0>
    10d6:	61 e0       	ldi	r22, 0x01	; 1
    10d8:	83 e0       	ldi	r24, 0x03	; 3
    10da:	fb db       	rcall	.-2058   	; 0x8d2 <sysclk_enable_module>
    10dc:	d7 c0       	rjmp	.+430    	; 0x128c <usart_init_rs232+0x27e>
    10de:	c1 15       	cp	r28, r1
    10e0:	f9 e0       	ldi	r31, 0x09	; 9
    10e2:	df 07       	cpc	r29, r31
    10e4:	21 f4       	brne	.+8      	; 0x10ee <usart_init_rs232+0xe0>
    10e6:	61 e0       	ldi	r22, 0x01	; 1
    10e8:	84 e0       	ldi	r24, 0x04	; 4
    10ea:	f3 db       	rcall	.-2074   	; 0x8d2 <sysclk_enable_module>
    10ec:	cf c0       	rjmp	.+414    	; 0x128c <usart_init_rs232+0x27e>
    10ee:	c1 15       	cp	r28, r1
    10f0:	8a e0       	ldi	r24, 0x0A	; 10
    10f2:	d8 07       	cpc	r29, r24
    10f4:	21 f4       	brne	.+8      	; 0x10fe <usart_init_rs232+0xf0>
    10f6:	61 e0       	ldi	r22, 0x01	; 1
    10f8:	85 e0       	ldi	r24, 0x05	; 5
    10fa:	eb db       	rcall	.-2090   	; 0x8d2 <sysclk_enable_module>
    10fc:	c7 c0       	rjmp	.+398    	; 0x128c <usart_init_rs232+0x27e>
    10fe:	c1 15       	cp	r28, r1
    1100:	eb e0       	ldi	r30, 0x0B	; 11
    1102:	de 07       	cpc	r29, r30
    1104:	21 f4       	brne	.+8      	; 0x110e <usart_init_rs232+0x100>
    1106:	61 e0       	ldi	r22, 0x01	; 1
    1108:	86 e0       	ldi	r24, 0x06	; 6
    110a:	e3 db       	rcall	.-2106   	; 0x8d2 <sysclk_enable_module>
    110c:	bf c0       	rjmp	.+382    	; 0x128c <usart_init_rs232+0x27e>
    110e:	c0 34       	cpi	r28, 0x40	; 64
    1110:	f8 e0       	ldi	r31, 0x08	; 8
    1112:	df 07       	cpc	r29, r31
    1114:	21 f4       	brne	.+8      	; 0x111e <usart_init_rs232+0x110>
    1116:	62 e0       	ldi	r22, 0x02	; 2
    1118:	83 e0       	ldi	r24, 0x03	; 3
    111a:	db db       	rcall	.-2122   	; 0x8d2 <sysclk_enable_module>
    111c:	b7 c0       	rjmp	.+366    	; 0x128c <usart_init_rs232+0x27e>
    111e:	c0 34       	cpi	r28, 0x40	; 64
    1120:	89 e0       	ldi	r24, 0x09	; 9
    1122:	d8 07       	cpc	r29, r24
    1124:	21 f4       	brne	.+8      	; 0x112e <usart_init_rs232+0x120>
    1126:	62 e0       	ldi	r22, 0x02	; 2
    1128:	84 e0       	ldi	r24, 0x04	; 4
    112a:	d3 db       	rcall	.-2138   	; 0x8d2 <sysclk_enable_module>
    112c:	af c0       	rjmp	.+350    	; 0x128c <usart_init_rs232+0x27e>
    112e:	c0 34       	cpi	r28, 0x40	; 64
    1130:	ea e0       	ldi	r30, 0x0A	; 10
    1132:	de 07       	cpc	r29, r30
    1134:	21 f4       	brne	.+8      	; 0x113e <usart_init_rs232+0x130>
    1136:	62 e0       	ldi	r22, 0x02	; 2
    1138:	85 e0       	ldi	r24, 0x05	; 5
    113a:	cb db       	rcall	.-2154   	; 0x8d2 <sysclk_enable_module>
    113c:	a7 c0       	rjmp	.+334    	; 0x128c <usart_init_rs232+0x27e>
    113e:	c0 34       	cpi	r28, 0x40	; 64
    1140:	fb e0       	ldi	r31, 0x0B	; 11
    1142:	df 07       	cpc	r29, r31
    1144:	21 f4       	brne	.+8      	; 0x114e <usart_init_rs232+0x140>
    1146:	62 e0       	ldi	r22, 0x02	; 2
    1148:	86 e0       	ldi	r24, 0x06	; 6
    114a:	c3 db       	rcall	.-2170   	; 0x8d2 <sysclk_enable_module>
    114c:	9f c0       	rjmp	.+318    	; 0x128c <usart_init_rs232+0x27e>
    114e:	c0 39       	cpi	r28, 0x90	; 144
    1150:	88 e0       	ldi	r24, 0x08	; 8
    1152:	d8 07       	cpc	r29, r24
    1154:	21 f4       	brne	.+8      	; 0x115e <usart_init_rs232+0x150>
    1156:	64 e0       	ldi	r22, 0x04	; 4
    1158:	83 e0       	ldi	r24, 0x03	; 3
    115a:	bb db       	rcall	.-2186   	; 0x8d2 <sysclk_enable_module>
    115c:	97 c0       	rjmp	.+302    	; 0x128c <usart_init_rs232+0x27e>
    115e:	c0 39       	cpi	r28, 0x90	; 144
    1160:	e9 e0       	ldi	r30, 0x09	; 9
    1162:	de 07       	cpc	r29, r30
    1164:	21 f4       	brne	.+8      	; 0x116e <usart_init_rs232+0x160>
    1166:	64 e0       	ldi	r22, 0x04	; 4
    1168:	84 e0       	ldi	r24, 0x04	; 4
    116a:	b3 db       	rcall	.-2202   	; 0x8d2 <sysclk_enable_module>
    116c:	8f c0       	rjmp	.+286    	; 0x128c <usart_init_rs232+0x27e>
    116e:	c0 39       	cpi	r28, 0x90	; 144
    1170:	fa e0       	ldi	r31, 0x0A	; 10
    1172:	df 07       	cpc	r29, r31
    1174:	21 f4       	brne	.+8      	; 0x117e <usart_init_rs232+0x170>
    1176:	64 e0       	ldi	r22, 0x04	; 4
    1178:	85 e0       	ldi	r24, 0x05	; 5
    117a:	ab db       	rcall	.-2218   	; 0x8d2 <sysclk_enable_module>
    117c:	87 c0       	rjmp	.+270    	; 0x128c <usart_init_rs232+0x27e>
    117e:	c0 39       	cpi	r28, 0x90	; 144
    1180:	8b e0       	ldi	r24, 0x0B	; 11
    1182:	d8 07       	cpc	r29, r24
    1184:	21 f4       	brne	.+8      	; 0x118e <usart_init_rs232+0x180>
    1186:	64 e0       	ldi	r22, 0x04	; 4
    1188:	86 e0       	ldi	r24, 0x06	; 6
    118a:	a3 db       	rcall	.-2234   	; 0x8d2 <sysclk_enable_module>
    118c:	7f c0       	rjmp	.+254    	; 0x128c <usart_init_rs232+0x27e>
    118e:	c0 3c       	cpi	r28, 0xC0	; 192
    1190:	e8 e0       	ldi	r30, 0x08	; 8
    1192:	de 07       	cpc	r29, r30
    1194:	21 f4       	brne	.+8      	; 0x119e <usart_init_rs232+0x190>
    1196:	68 e0       	ldi	r22, 0x08	; 8
    1198:	83 e0       	ldi	r24, 0x03	; 3
    119a:	9b db       	rcall	.-2250   	; 0x8d2 <sysclk_enable_module>
    119c:	77 c0       	rjmp	.+238    	; 0x128c <usart_init_rs232+0x27e>
    119e:	c0 3c       	cpi	r28, 0xC0	; 192
    11a0:	f9 e0       	ldi	r31, 0x09	; 9
    11a2:	df 07       	cpc	r29, r31
    11a4:	21 f4       	brne	.+8      	; 0x11ae <usart_init_rs232+0x1a0>
    11a6:	68 e0       	ldi	r22, 0x08	; 8
    11a8:	84 e0       	ldi	r24, 0x04	; 4
    11aa:	93 db       	rcall	.-2266   	; 0x8d2 <sysclk_enable_module>
    11ac:	6f c0       	rjmp	.+222    	; 0x128c <usart_init_rs232+0x27e>
    11ae:	c0 3c       	cpi	r28, 0xC0	; 192
    11b0:	8a e0       	ldi	r24, 0x0A	; 10
    11b2:	d8 07       	cpc	r29, r24
    11b4:	21 f4       	brne	.+8      	; 0x11be <usart_init_rs232+0x1b0>
    11b6:	68 e0       	ldi	r22, 0x08	; 8
    11b8:	85 e0       	ldi	r24, 0x05	; 5
    11ba:	8b db       	rcall	.-2282   	; 0x8d2 <sysclk_enable_module>
    11bc:	67 c0       	rjmp	.+206    	; 0x128c <usart_init_rs232+0x27e>
    11be:	c0 3c       	cpi	r28, 0xC0	; 192
    11c0:	eb e0       	ldi	r30, 0x0B	; 11
    11c2:	de 07       	cpc	r29, r30
    11c4:	21 f4       	brne	.+8      	; 0x11ce <usart_init_rs232+0x1c0>
    11c6:	68 e0       	ldi	r22, 0x08	; 8
    11c8:	86 e0       	ldi	r24, 0x06	; 6
    11ca:	83 db       	rcall	.-2298   	; 0x8d2 <sysclk_enable_module>
    11cc:	5f c0       	rjmp	.+190    	; 0x128c <usart_init_rs232+0x27e>
    11ce:	c0 3a       	cpi	r28, 0xA0	; 160
    11d0:	f8 e0       	ldi	r31, 0x08	; 8
    11d2:	df 07       	cpc	r29, r31
    11d4:	21 f4       	brne	.+8      	; 0x11de <usart_init_rs232+0x1d0>
    11d6:	60 e1       	ldi	r22, 0x10	; 16
    11d8:	83 e0       	ldi	r24, 0x03	; 3
    11da:	7b db       	rcall	.-2314   	; 0x8d2 <sysclk_enable_module>
    11dc:	57 c0       	rjmp	.+174    	; 0x128c <usart_init_rs232+0x27e>
    11de:	c0 3a       	cpi	r28, 0xA0	; 160
    11e0:	89 e0       	ldi	r24, 0x09	; 9
    11e2:	d8 07       	cpc	r29, r24
    11e4:	21 f4       	brne	.+8      	; 0x11ee <usart_init_rs232+0x1e0>
    11e6:	60 e1       	ldi	r22, 0x10	; 16
    11e8:	84 e0       	ldi	r24, 0x04	; 4
    11ea:	73 db       	rcall	.-2330   	; 0x8d2 <sysclk_enable_module>
    11ec:	4f c0       	rjmp	.+158    	; 0x128c <usart_init_rs232+0x27e>
    11ee:	c0 3a       	cpi	r28, 0xA0	; 160
    11f0:	ea e0       	ldi	r30, 0x0A	; 10
    11f2:	de 07       	cpc	r29, r30
    11f4:	21 f4       	brne	.+8      	; 0x11fe <usart_init_rs232+0x1f0>
    11f6:	60 e1       	ldi	r22, 0x10	; 16
    11f8:	85 e0       	ldi	r24, 0x05	; 5
    11fa:	6b db       	rcall	.-2346   	; 0x8d2 <sysclk_enable_module>
    11fc:	47 c0       	rjmp	.+142    	; 0x128c <usart_init_rs232+0x27e>
    11fe:	c0 3a       	cpi	r28, 0xA0	; 160
    1200:	fb e0       	ldi	r31, 0x0B	; 11
    1202:	df 07       	cpc	r29, r31
    1204:	21 f4       	brne	.+8      	; 0x120e <usart_init_rs232+0x200>
    1206:	60 e1       	ldi	r22, 0x10	; 16
    1208:	86 e0       	ldi	r24, 0x06	; 6
    120a:	63 db       	rcall	.-2362   	; 0x8d2 <sysclk_enable_module>
    120c:	3f c0       	rjmp	.+126    	; 0x128c <usart_init_rs232+0x27e>
    120e:	c0 3b       	cpi	r28, 0xB0	; 176
    1210:	88 e0       	ldi	r24, 0x08	; 8
    1212:	d8 07       	cpc	r29, r24
    1214:	21 f4       	brne	.+8      	; 0x121e <usart_init_rs232+0x210>
    1216:	60 e2       	ldi	r22, 0x20	; 32
    1218:	83 e0       	ldi	r24, 0x03	; 3
    121a:	5b db       	rcall	.-2378   	; 0x8d2 <sysclk_enable_module>
    121c:	37 c0       	rjmp	.+110    	; 0x128c <usart_init_rs232+0x27e>
    121e:	c0 3b       	cpi	r28, 0xB0	; 176
    1220:	e9 e0       	ldi	r30, 0x09	; 9
    1222:	de 07       	cpc	r29, r30
    1224:	21 f4       	brne	.+8      	; 0x122e <usart_init_rs232+0x220>
    1226:	60 e2       	ldi	r22, 0x20	; 32
    1228:	84 e0       	ldi	r24, 0x04	; 4
    122a:	53 db       	rcall	.-2394   	; 0x8d2 <sysclk_enable_module>
    122c:	2f c0       	rjmp	.+94     	; 0x128c <usart_init_rs232+0x27e>
    122e:	c0 3b       	cpi	r28, 0xB0	; 176
    1230:	fa e0       	ldi	r31, 0x0A	; 10
    1232:	df 07       	cpc	r29, r31
    1234:	21 f4       	brne	.+8      	; 0x123e <usart_init_rs232+0x230>
    1236:	60 e2       	ldi	r22, 0x20	; 32
    1238:	85 e0       	ldi	r24, 0x05	; 5
    123a:	4b db       	rcall	.-2410   	; 0x8d2 <sysclk_enable_module>
    123c:	27 c0       	rjmp	.+78     	; 0x128c <usart_init_rs232+0x27e>
    123e:	c0 3b       	cpi	r28, 0xB0	; 176
    1240:	8b e0       	ldi	r24, 0x0B	; 11
    1242:	d8 07       	cpc	r29, r24
    1244:	21 f4       	brne	.+8      	; 0x124e <usart_init_rs232+0x240>
    1246:	60 e2       	ldi	r22, 0x20	; 32
    1248:	86 e0       	ldi	r24, 0x06	; 6
    124a:	43 db       	rcall	.-2426   	; 0x8d2 <sysclk_enable_module>
    124c:	1f c0       	rjmp	.+62     	; 0x128c <usart_init_rs232+0x27e>
    124e:	c0 38       	cpi	r28, 0x80	; 128
    1250:	e4 e0       	ldi	r30, 0x04	; 4
    1252:	de 07       	cpc	r29, r30
    1254:	21 f4       	brne	.+8      	; 0x125e <usart_init_rs232+0x250>
    1256:	60 e4       	ldi	r22, 0x40	; 64
    1258:	83 e0       	ldi	r24, 0x03	; 3
    125a:	3b db       	rcall	.-2442   	; 0x8d2 <sysclk_enable_module>
    125c:	17 c0       	rjmp	.+46     	; 0x128c <usart_init_rs232+0x27e>
    125e:	c0 39       	cpi	r28, 0x90	; 144
    1260:	f4 e0       	ldi	r31, 0x04	; 4
    1262:	df 07       	cpc	r29, r31
    1264:	21 f4       	brne	.+8      	; 0x126e <usart_init_rs232+0x260>
    1266:	60 e4       	ldi	r22, 0x40	; 64
    1268:	84 e0       	ldi	r24, 0x04	; 4
    126a:	33 db       	rcall	.-2458   	; 0x8d2 <sysclk_enable_module>
    126c:	0f c0       	rjmp	.+30     	; 0x128c <usart_init_rs232+0x27e>
    126e:	c0 3a       	cpi	r28, 0xA0	; 160
    1270:	84 e0       	ldi	r24, 0x04	; 4
    1272:	d8 07       	cpc	r29, r24
    1274:	21 f4       	brne	.+8      	; 0x127e <usart_init_rs232+0x270>
    1276:	60 e4       	ldi	r22, 0x40	; 64
    1278:	85 e0       	ldi	r24, 0x05	; 5
    127a:	2b db       	rcall	.-2474   	; 0x8d2 <sysclk_enable_module>
    127c:	07 c0       	rjmp	.+14     	; 0x128c <usart_init_rs232+0x27e>
    127e:	c0 3b       	cpi	r28, 0xB0	; 176
    1280:	e4 e0       	ldi	r30, 0x04	; 4
    1282:	de 07       	cpc	r29, r30
    1284:	19 f4       	brne	.+6      	; 0x128c <usart_init_rs232+0x27e>
    1286:	60 e4       	ldi	r22, 0x40	; 64
    1288:	86 e0       	ldi	r24, 0x06	; 6
    128a:	23 db       	rcall	.-2490   	; 0x8d2 <sysclk_enable_module>
    128c:	8d 81       	ldd	r24, Y+5	; 0x05
    128e:	8f 73       	andi	r24, 0x3F	; 63
    1290:	8d 83       	std	Y+5, r24	; 0x05
    1292:	f8 01       	movw	r30, r16
    1294:	94 81       	ldd	r25, Z+4	; 0x04
    1296:	85 81       	ldd	r24, Z+5	; 0x05
    1298:	89 2b       	or	r24, r25
    129a:	96 81       	ldd	r25, Z+6	; 0x06
    129c:	91 11       	cpse	r25, r1
    129e:	98 e0       	ldi	r25, 0x08	; 8
    12a0:	89 2b       	or	r24, r25
    12a2:	8d 83       	std	Y+5, r24	; 0x05
    12a4:	f8 01       	movw	r30, r16
    12a6:	40 81       	ld	r20, Z
    12a8:	51 81       	ldd	r21, Z+1	; 0x01
    12aa:	62 81       	ldd	r22, Z+2	; 0x02
    12ac:	73 81       	ldd	r23, Z+3	; 0x03
    12ae:	00 e0       	ldi	r16, 0x00	; 0
    12b0:	18 e4       	ldi	r17, 0x48	; 72
    12b2:	28 ee       	ldi	r18, 0xE8	; 232
    12b4:	31 e0       	ldi	r19, 0x01	; 1
    12b6:	ce 01       	movw	r24, r28
    12b8:	91 dd       	rcall	.-1246   	; 0xddc <usart_set_baudrate>
    12ba:	9c 81       	ldd	r25, Y+4	; 0x04
    12bc:	98 60       	ori	r25, 0x08	; 8
    12be:	9c 83       	std	Y+4, r25	; 0x04
    12c0:	9c 81       	ldd	r25, Y+4	; 0x04
    12c2:	90 61       	ori	r25, 0x10	; 16
    12c4:	9c 83       	std	Y+4, r25	; 0x04
    12c6:	df 91       	pop	r29
    12c8:	cf 91       	pop	r28
    12ca:	1f 91       	pop	r17
    12cc:	0f 91       	pop	r16
    12ce:	08 95       	ret

000012d0 <ADC_init>:
/* Global Variable Declarations */

/*******************************************************************************************/
								/* Initialization methods */
/* Initialize ADC for port A, thermistor*/
void ADC_init(void){
    12d0:	ff 92       	push	r15
    12d2:	0f 93       	push	r16
    12d4:	1f 93       	push	r17
    12d6:	cf 93       	push	r28
    12d8:	df 93       	push	r29
	ADCA.CTRLA = 0b00000001; //Enables the ADC.
    12da:	c0 e0       	ldi	r28, 0x00	; 0
    12dc:	d2 e0       	ldi	r29, 0x02	; 2
    12de:	ff 24       	eor	r15, r15
    12e0:	f3 94       	inc	r15
    12e2:	f8 82       	st	Y, r15
	ADCA.CTRLB = 0b00000000; //Unsigned 12 bit mode.
    12e4:	19 82       	std	Y+1, r1	; 0x01
	ADCA.REFCTRL = 0b00010000; //Voltage reference of Vcc/1.6V
    12e6:	80 e1       	ldi	r24, 0x10	; 16
    12e8:	8a 83       	std	Y+2, r24	; 0x02
	ADCA.PRESCALER = 0b00000101; //This is automatic prescalar of 128 on the clock.
    12ea:	85 e0       	ldi	r24, 0x05	; 5
    12ec:	8c 83       	std	Y+4, r24	; 0x04
 *
 * \param address Byte offset into the signature row
 */
static inline uint8_t nvm_read_production_signature_row(uint8_t address)
{
	return nvm_read_byte(NVM_CMD_READ_CALIB_ROW_gc, address);
    12ee:	61 e2       	ldi	r22, 0x21	; 33
    12f0:	70 e0       	ldi	r23, 0x00	; 0
    12f2:	82 e0       	ldi	r24, 0x02	; 2
    12f4:	5b dd       	rcall	.-1354   	; 0xdac <nvm_read_byte>
	uint16_t data;

	switch (cal) {
#ifdef ADCA
	case ADC_CAL_ADCA:
		data = nvm_read_production_signature_row(ADCACAL1);
    12f6:	08 2f       	mov	r16, r24
    12f8:	10 e0       	ldi	r17, 0x00	; 0
		data <<= 8;
    12fa:	10 2f       	mov	r17, r16
    12fc:	00 27       	eor	r16, r16
    12fe:	60 e2       	ldi	r22, 0x20	; 32
    1300:	70 e0       	ldi	r23, 0x00	; 0
    1302:	82 e0       	ldi	r24, 0x02	; 2
    1304:	53 dd       	rcall	.-1370   	; 0xdac <nvm_read_byte>
		data |= nvm_read_production_signature_row(ADCACAL0);
    1306:	08 2b       	or	r16, r24
	ADCA.CAL = adc_get_calibration_data(ADC_CAL_ADCA); //Retrieve stored calibration data about the ADC.
    1308:	0c 87       	std	Y+12, r16	; 0x0c
    130a:	1d 87       	std	Y+13, r17	; 0x0d

	ADCA.CH0.CTRL = 0b00000001; //Single ended input
    130c:	f8 a2       	std	Y+32, r15	; 0x20
	ADCA.CH0.MUXCTRL = 0b00000000; //Reading ADCA pin 0.
    130e:	19 a2       	std	Y+33, r1	; 0x21
    1310:	df 91       	pop	r29
    1312:	cf 91       	pop	r28
    1314:	1f 91       	pop	r17
    1316:	0f 91       	pop	r16
    1318:	ff 90       	pop	r15
    131a:	08 95       	ret

0000131c <spi_select>:
 }

  /*******************************************************************************************/
								/* SPI Usability Methods */
 void spi_select(void){
	PORTC.OUT &= 0b11101111;
    131c:	e0 e4       	ldi	r30, 0x40	; 64
    131e:	f6 e0       	ldi	r31, 0x06	; 6
    1320:	84 81       	ldd	r24, Z+4	; 0x04
    1322:	8f 7e       	andi	r24, 0xEF	; 239
    1324:	84 83       	std	Z+4, r24	; 0x04
    1326:	08 95       	ret

00001328 <spi_deselect>:
 }
 void spi_deselect(void){
	PORTC.OUT |= 0b00010000;
    1328:	e0 e4       	ldi	r30, 0x40	; 64
    132a:	f6 e0       	ldi	r31, 0x06	; 6
    132c:	84 81       	ldd	r24, Z+4	; 0x04
    132e:	80 61       	ori	r24, 0x10	; 16
    1330:	84 83       	std	Z+4, r24	; 0x04
    1332:	08 95       	ret

00001334 <spi_read>:
 }
 uint8_t spi_read(void){
	 SPIC.DATA = 0xFF; //Set the data to something we know.
    1334:	8f ef       	ldi	r24, 0xFF	; 255
    1336:	80 93 c3 08 	sts	0x08C3, r24	; 0x8008c3 <__TEXT_REGION_LENGTH__+0x7008c3>
	 while(!(SPIC.STATUS>>7)); //Wait until new data comes in by monitoring the interrupt flag.
    133a:	e0 ec       	ldi	r30, 0xC0	; 192
    133c:	f8 e0       	ldi	r31, 0x08	; 8
    133e:	82 81       	ldd	r24, Z+2	; 0x02
    1340:	88 23       	and	r24, r24
    1342:	ec f7       	brge	.-6      	; 0x133e <spi_read+0xa>
	 return SPIC.DATA; //Return the data.
    1344:	80 91 c3 08 	lds	r24, 0x08C3	; 0x8008c3 <__TEXT_REGION_LENGTH__+0x7008c3>
 }
    1348:	08 95       	ret

0000134a <spi_write>:

 void spi_write(uint8_t data){
	 SPIC.DATA = data;
    134a:	80 93 c3 08 	sts	0x08C3, r24	; 0x8008c3 <__TEXT_REGION_LENGTH__+0x7008c3>
	 while(!(SPIC.STATUS>>7));
    134e:	e0 ec       	ldi	r30, 0xC0	; 192
    1350:	f8 e0       	ldi	r31, 0x08	; 8
    1352:	82 81       	ldd	r24, Z+2	; 0x02
    1354:	88 23       	and	r24, r24
    1356:	ec f7       	brge	.-6      	; 0x1352 <spi_write+0x8>
 }
    1358:	08 95       	ret

0000135a <calibratePressure>:
	 calibratePressure();
 }
 /* Calibrate pressure from factory settings on the MS5611 */
 void calibratePressure(void){
	/* Calibrate value c1 */
	 spi_select();
    135a:	e0 df       	rcall	.-64     	; 0x131c <spi_select>
	 spi_write(0b10100010); //prom read ad1
    135c:	82 ea       	ldi	r24, 0xA2	; 162
    135e:	f5 df       	rcall	.-22     	; 0x134a <spi_write>
	 cal_pres_c1 = ((uint16_t)spi_read())<<8; //bitshift
    1360:	e9 df       	rcall	.-46     	; 0x1334 <spi_read>
    1362:	10 92 32 20 	sts	0x2032, r1	; 0x802032 <cal_pres_c1>
    1366:	80 93 33 20 	sts	0x2033, r24	; 0x802033 <cal_pres_c1+0x1>
	 cal_pres_c1 += ((uint16_t)spi_read());
    136a:	e4 df       	rcall	.-56     	; 0x1334 <spi_read>
    136c:	20 91 32 20 	lds	r18, 0x2032	; 0x802032 <cal_pres_c1>
    1370:	30 91 33 20 	lds	r19, 0x2033	; 0x802033 <cal_pres_c1+0x1>
    1374:	28 0f       	add	r18, r24
    1376:	31 1d       	adc	r19, r1
    1378:	20 93 32 20 	sts	0x2032, r18	; 0x802032 <cal_pres_c1>
    137c:	30 93 33 20 	sts	0x2033, r19	; 0x802033 <cal_pres_c1+0x1>
	 spi_deselect();
    1380:	d3 df       	rcall	.-90     	; 0x1328 <spi_deselect>

	/* Calibrate value c2 */
	 spi_select();
    1382:	cc df       	rcall	.-104    	; 0x131c <spi_select>
	 spi_write(0b10100100); //prom read ad2
    1384:	84 ea       	ldi	r24, 0xA4	; 164
    1386:	e1 df       	rcall	.-62     	; 0x134a <spi_write>
	 cal_pres_c2 = ((uint16_t)spi_read())<<8;
    1388:	d5 df       	rcall	.-86     	; 0x1334 <spi_read>
    138a:	10 92 36 20 	sts	0x2036, r1	; 0x802036 <cal_pres_c2>
    138e:	80 93 37 20 	sts	0x2037, r24	; 0x802037 <cal_pres_c2+0x1>
	 cal_pres_c2 += ((uint16_t)spi_read());
    1392:	d0 df       	rcall	.-96     	; 0x1334 <spi_read>
    1394:	20 91 36 20 	lds	r18, 0x2036	; 0x802036 <cal_pres_c2>
    1398:	30 91 37 20 	lds	r19, 0x2037	; 0x802037 <cal_pres_c2+0x1>
    139c:	28 0f       	add	r18, r24
    139e:	31 1d       	adc	r19, r1
    13a0:	20 93 36 20 	sts	0x2036, r18	; 0x802036 <cal_pres_c2>
    13a4:	30 93 37 20 	sts	0x2037, r19	; 0x802037 <cal_pres_c2+0x1>
	 spi_deselect();
    13a8:	bf df       	rcall	.-130    	; 0x1328 <spi_deselect>

	/* Calibrate value c3 */
	 spi_select();
    13aa:	b8 df       	rcall	.-144    	; 0x131c <spi_select>
	 spi_write(0b10100110); //prom read ad3
    13ac:	86 ea       	ldi	r24, 0xA6	; 166
    13ae:	cd df       	rcall	.-102    	; 0x134a <spi_write>
	 cal_pres_c3 = ((uint16_t)spi_read())<<8;
    13b0:	c1 df       	rcall	.-126    	; 0x1334 <spi_read>
    13b2:	10 92 30 20 	sts	0x2030, r1	; 0x802030 <cal_pres_c3>
    13b6:	80 93 31 20 	sts	0x2031, r24	; 0x802031 <cal_pres_c3+0x1>
	 cal_pres_c3 += ((uint16_t)spi_read());
    13ba:	bc df       	rcall	.-136    	; 0x1334 <spi_read>
    13bc:	20 91 30 20 	lds	r18, 0x2030	; 0x802030 <cal_pres_c3>
    13c0:	30 91 31 20 	lds	r19, 0x2031	; 0x802031 <cal_pres_c3+0x1>
    13c4:	28 0f       	add	r18, r24
    13c6:	31 1d       	adc	r19, r1
    13c8:	20 93 30 20 	sts	0x2030, r18	; 0x802030 <cal_pres_c3>
    13cc:	30 93 31 20 	sts	0x2031, r19	; 0x802031 <cal_pres_c3+0x1>
	 spi_deselect();
    13d0:	ab df       	rcall	.-170    	; 0x1328 <spi_deselect>

	/* Calibrate value c4 */
	 spi_select();
    13d2:	a4 df       	rcall	.-184    	; 0x131c <spi_select>
	 spi_write(0b10101000); //prom read ad4
    13d4:	88 ea       	ldi	r24, 0xA8	; 168
    13d6:	b9 df       	rcall	.-142    	; 0x134a <spi_write>
	 cal_pres_c4 = ((uint16_t)spi_read())<<8;
    13d8:	ad df       	rcall	.-166    	; 0x1334 <spi_read>
    13da:	10 92 34 20 	sts	0x2034, r1	; 0x802034 <cal_pres_c4>
    13de:	80 93 35 20 	sts	0x2035, r24	; 0x802035 <cal_pres_c4+0x1>
	 cal_pres_c4 += ((uint16_t)spi_read());
    13e2:	a8 df       	rcall	.-176    	; 0x1334 <spi_read>
    13e4:	20 91 34 20 	lds	r18, 0x2034	; 0x802034 <cal_pres_c4>
    13e8:	30 91 35 20 	lds	r19, 0x2035	; 0x802035 <cal_pres_c4+0x1>
    13ec:	28 0f       	add	r18, r24
    13ee:	31 1d       	adc	r19, r1
    13f0:	20 93 34 20 	sts	0x2034, r18	; 0x802034 <cal_pres_c4>
    13f4:	30 93 35 20 	sts	0x2035, r19	; 0x802035 <cal_pres_c4+0x1>
	 spi_deselect();
    13f8:	97 df       	rcall	.-210    	; 0x1328 <spi_deselect>

	/* Calibrate value c5 */
	 spi_select();
    13fa:	90 df       	rcall	.-224    	; 0x131c <spi_select>
	 spi_write(0b10101010); //prom read ad5
    13fc:	8a ea       	ldi	r24, 0xAA	; 170
    13fe:	a5 df       	rcall	.-182    	; 0x134a <spi_write>
	 cal_pres_c5 = ((uint16_t)spi_read())<<8;
    1400:	99 df       	rcall	.-206    	; 0x1334 <spi_read>
    1402:	10 92 2e 20 	sts	0x202E, r1	; 0x80202e <cal_pres_c5>
    1406:	80 93 2f 20 	sts	0x202F, r24	; 0x80202f <cal_pres_c5+0x1>
	 cal_pres_c5 += ((uint16_t)spi_read());
    140a:	94 df       	rcall	.-216    	; 0x1334 <spi_read>
    140c:	20 91 2e 20 	lds	r18, 0x202E	; 0x80202e <cal_pres_c5>
    1410:	30 91 2f 20 	lds	r19, 0x202F	; 0x80202f <cal_pres_c5+0x1>
    1414:	28 0f       	add	r18, r24
    1416:	31 1d       	adc	r19, r1
    1418:	20 93 2e 20 	sts	0x202E, r18	; 0x80202e <cal_pres_c5>
    141c:	30 93 2f 20 	sts	0x202F, r19	; 0x80202f <cal_pres_c5+0x1>
	 spi_deselect();
    1420:	83 df       	rcall	.-250    	; 0x1328 <spi_deselect>

	/* Calibrate value c6 */
	 spi_select();
    1422:	7c df       	rcall	.-264    	; 0x131c <spi_select>
	 spi_write(0b10101100); //prom read ad6
    1424:	8c ea       	ldi	r24, 0xAC	; 172
    1426:	91 df       	rcall	.-222    	; 0x134a <spi_write>
	 cal_pres_c6 = ((uint16_t)spi_read())<<8;
    1428:	85 df       	rcall	.-246    	; 0x1334 <spi_read>
    142a:	10 92 38 20 	sts	0x2038, r1	; 0x802038 <cal_pres_c6>
    142e:	80 93 39 20 	sts	0x2039, r24	; 0x802039 <cal_pres_c6+0x1>
	 cal_pres_c6 += ((uint16_t)spi_read());
    1432:	80 df       	rcall	.-256    	; 0x1334 <spi_read>
    1434:	20 91 38 20 	lds	r18, 0x2038	; 0x802038 <cal_pres_c6>
    1438:	30 91 39 20 	lds	r19, 0x2039	; 0x802039 <cal_pres_c6+0x1>
    143c:	28 0f       	add	r18, r24
    143e:	31 1d       	adc	r19, r1
    1440:	20 93 38 20 	sts	0x2038, r18	; 0x802038 <cal_pres_c6>
    1444:	30 93 39 20 	sts	0x2039, r19	; 0x802039 <cal_pres_c6+0x1>
	 spi_deselect();
    1448:	6f cf       	rjmp	.-290    	; 0x1328 <spi_deselect>
    144a:	08 95       	ret

0000144c <SPI_init>:
              /* Initialization and Calibration for SPI and Pressure Sensor */

 /* Configuring SPI module.*/
 void SPI_init(void){
	 //printf("spi_init\n");
	 PORTC.DIR |= 0b10110000; //Set port to input.
    144c:	e0 e4       	ldi	r30, 0x40	; 64
    144e:	f6 e0       	ldi	r31, 0x06	; 6
    1450:	80 81       	ld	r24, Z
    1452:	80 6b       	ori	r24, 0xB0	; 176
    1454:	80 83       	st	Z, r24
	 PORTC.DIR &= 0b10111111;
    1456:	80 81       	ld	r24, Z
    1458:	8f 7b       	andi	r24, 0xBF	; 191
    145a:	80 83       	st	Z, r24
	 SPIC.CTRL = 0b01010000; //Clock Double off, enable SPI, MSB DORD, master mode, SPI transfer mode set to 0, prescalar set to clkper/4 (has no effect in slave mode).
    145c:	80 e5       	ldi	r24, 0x50	; 80
    145e:	80 93 c0 08 	sts	0x08C0, r24	; 0x8008c0 <__TEXT_REGION_LENGTH__+0x7008c0>
	 calibratePressure();
    1462:	7b cf       	rjmp	.-266    	; 0x135a <calibratePressure>
    1464:	08 95       	ret

00001466 <getPressure>:
 }
 
  /*******************************************************************************************/
						/* Get Current Pressure value method */

 int32_t getPressure(void){
    1466:	2f 92       	push	r2
    1468:	3f 92       	push	r3
    146a:	4f 92       	push	r4
    146c:	5f 92       	push	r5
    146e:	6f 92       	push	r6
    1470:	7f 92       	push	r7
    1472:	8f 92       	push	r8
    1474:	9f 92       	push	r9
    1476:	af 92       	push	r10
    1478:	bf 92       	push	r11
    147a:	cf 92       	push	r12
    147c:	df 92       	push	r13
    147e:	ef 92       	push	r14
    1480:	ff 92       	push	r15
    1482:	0f 93       	push	r16
    1484:	1f 93       	push	r17
    1486:	cf 93       	push	r28
    1488:	df 93       	push	r29
    148a:	cd b7       	in	r28, 0x3d	; 61
    148c:	de b7       	in	r29, 0x3e	; 62
    148e:	6f 97       	sbiw	r28, 0x1f	; 31
    1490:	cd bf       	out	0x3d, r28	; 61
    1492:	de bf       	out	0x3e, r29	; 62
	/* Request current pressure value */
	spi_select();
    1494:	43 df       	rcall	.-378    	; 0x131c <spi_select>
	spi_write(0x48);
    1496:	88 e4       	ldi	r24, 0x48	; 72
    1498:	58 df       	rcall	.-336    	; 0x134a <spi_write>
	spi_deselect();
    149a:	46 df       	rcall	.-372    	; 0x1328 <spi_deselect>
    149c:	80 e0       	ldi	r24, 0x00	; 0
    149e:	90 e0       	ldi	r25, 0x00	; 0
 * @{
 */
__always_optimize
static inline void __portable_avr_delay_cycles(unsigned long n)
{
	do { barrier(); } while (--n);
    14a0:	01 96       	adiw	r24, 0x01	; 1
    14a2:	85 35       	cpi	r24, 0x55	; 85
    14a4:	00 ed       	ldi	r16, 0xD0	; 208
    14a6:	90 07       	cpc	r25, r16
    14a8:	d9 f7       	brne	.-10     	; 0x14a0 <getPressure+0x3a>
	delay_ms(10);

	/* Read current pressure value */
	spi_select();
    14aa:	38 df       	rcall	.-400    	; 0x131c <spi_select>
	spi_write(0x00);
    14ac:	80 e0       	ldi	r24, 0x00	; 0
    14ae:	4d df       	rcall	.-358    	; 0x134a <spi_write>
	uint32_t uncal_pressure = ((uint32_t)spi_read())<<16; //Typecast the 8 bit data to 32 bit, then move it 16 places to the left. Stores in temp variable.
    14b0:	41 df       	rcall	.-382    	; 0x1334 <spi_read>
    14b2:	c8 2e       	mov	r12, r24
    14b4:	d1 2c       	mov	r13, r1
    14b6:	e1 2c       	mov	r14, r1
    14b8:	f1 2c       	mov	r15, r1
    14ba:	76 01       	movw	r14, r12
    14bc:	dd 24       	eor	r13, r13
    14be:	cc 24       	eor	r12, r12
	uncal_pressure += ((uint32_t)spi_read())<<8; //Assign data to data + the new data but in the lower 8 bits.
    14c0:	39 df       	rcall	.-398    	; 0x1334 <spi_read>
    14c2:	90 e0       	ldi	r25, 0x00	; 0
    14c4:	a0 e0       	ldi	r26, 0x00	; 0
    14c6:	b0 e0       	ldi	r27, 0x00	; 0
    14c8:	ba 2f       	mov	r27, r26
    14ca:	a9 2f       	mov	r26, r25
    14cc:	98 2f       	mov	r25, r24
    14ce:	88 27       	eor	r24, r24
    14d0:	c8 0e       	add	r12, r24
    14d2:	d9 1e       	adc	r13, r25
    14d4:	ea 1e       	adc	r14, r26
    14d6:	fb 1e       	adc	r15, r27
	uncal_pressure += ((uint32_t)spi_read());
    14d8:	2d df       	rcall	.-422    	; 0x1334 <spi_read>
    14da:	a7 01       	movw	r20, r14
    14dc:	96 01       	movw	r18, r12
    14de:	28 0f       	add	r18, r24
    14e0:	31 1d       	adc	r19, r1
    14e2:	41 1d       	adc	r20, r1
    14e4:	51 1d       	adc	r21, r1
    14e6:	2d 83       	std	Y+5, r18	; 0x05
    14e8:	3e 83       	std	Y+6, r19	; 0x06
    14ea:	4f 83       	std	Y+7, r20	; 0x07
    14ec:	58 87       	std	Y+8, r21	; 0x08
	spi_deselect();
    14ee:	1c df       	rcall	.-456    	; 0x1328 <spi_deselect>
	

	/* Request current temperature value */
	spi_select();
    14f0:	15 df       	rcall	.-470    	; 0x131c <spi_select>
	spi_write(0x58); //Ask for temp value.
    14f2:	88 e5       	ldi	r24, 0x58	; 88
    14f4:	2a df       	rcall	.-428    	; 0x134a <spi_write>
	spi_deselect();
    14f6:	18 df       	rcall	.-464    	; 0x1328 <spi_deselect>
    14f8:	80 e0       	ldi	r24, 0x00	; 0
    14fa:	90 e0       	ldi	r25, 0x00	; 0
    14fc:	01 96       	adiw	r24, 0x01	; 1
    14fe:	85 35       	cpi	r24, 0x55	; 85
    1500:	30 ed       	ldi	r19, 0xD0	; 208
    1502:	93 07       	cpc	r25, r19
    1504:	d9 f7       	brne	.-10     	; 0x14fc <getPressure+0x96>
	delay_ms(10);
	
	/* Read current temperature value */
	spi_select();
    1506:	0a df       	rcall	.-492    	; 0x131c <spi_select>
	spi_write(0x00);
    1508:	80 e0       	ldi	r24, 0x00	; 0
    150a:	1f df       	rcall	.-450    	; 0x134a <spi_write>
	uint32_t d2 = ((uint32_t)spi_read())<<16;
    150c:	13 df       	rcall	.-474    	; 0x1334 <spi_read>
    150e:	08 2f       	mov	r16, r24
	d2 += ((uint32_t)spi_read())<<8;
    1510:	11 df       	rcall	.-478    	; 0x1334 <spi_read>
    1512:	f8 2e       	mov	r15, r24
	d2 += ((uint32_t)spi_read());
    1514:	0f df       	rcall	.-482    	; 0x1334 <spi_read>
    1516:	18 2f       	mov	r17, r24
	spi_deselect();
    1518:	07 df       	rcall	.-498    	; 0x1328 <spi_deselect>
	
	/* Calculate temperature-adjusted pressure */
	int32_t dT = (int64_t)d2 - (((int64_t)cal_pres_c5)*(256));
    151a:	a0 91 2e 20 	lds	r26, 0x202E	; 0x80202e <cal_pres_c5>
    151e:	b0 91 2f 20 	lds	r27, 0x202F	; 0x80202f <cal_pres_c5+0x1>
    1522:	20 e0       	ldi	r18, 0x00	; 0
    1524:	3f ef       	ldi	r19, 0xFF	; 255
    1526:	4f ef       	ldi	r20, 0xFF	; 255
    1528:	5f ef       	ldi	r21, 0xFF	; 255
    152a:	0e 94 ec 16 	call	0x2dd8	; 0x2dd8 <__muluhisi3>
    152e:	2b 01       	movw	r4, r22
    1530:	3c 01       	movw	r6, r24
    1532:	41 0e       	add	r4, r17
    1534:	51 1c       	adc	r5, r1
    1536:	61 1c       	adc	r6, r1
    1538:	71 1c       	adc	r7, r1
	delay_ms(10);
	
	/* Read current temperature value */
	spi_select();
	spi_write(0x00);
	uint32_t d2 = ((uint32_t)spi_read())<<16;
    153a:	40 2f       	mov	r20, r16
    153c:	50 e0       	ldi	r21, 0x00	; 0
    153e:	60 e0       	ldi	r22, 0x00	; 0
    1540:	70 e0       	ldi	r23, 0x00	; 0
    1542:	ba 01       	movw	r22, r20
    1544:	55 27       	eor	r21, r21
    1546:	44 27       	eor	r20, r20
    1548:	d3 01       	movw	r26, r6
    154a:	c2 01       	movw	r24, r4
    154c:	84 0f       	add	r24, r20
    154e:	95 1f       	adc	r25, r21
    1550:	a6 1f       	adc	r26, r22
    1552:	b7 1f       	adc	r27, r23
	d2 += ((uint32_t)spi_read())<<8;
    1554:	4f 2c       	mov	r4, r15
    1556:	51 2c       	mov	r5, r1
    1558:	61 2c       	mov	r6, r1
    155a:	71 2c       	mov	r7, r1
    155c:	76 2c       	mov	r7, r6
    155e:	65 2c       	mov	r6, r5
    1560:	54 2c       	mov	r5, r4
    1562:	44 24       	eor	r4, r4
	d2 += ((uint32_t)spi_read());
	spi_deselect();
	
	/* Calculate temperature-adjusted pressure */
	int32_t dT = (int64_t)d2 - (((int64_t)cal_pres_c5)*(256));
    1564:	48 0e       	add	r4, r24
    1566:	59 1e       	adc	r5, r25
    1568:	6a 1e       	adc	r6, r26
    156a:	7b 1e       	adc	r7, r27
	int64_t offset = ((int64_t)cal_pres_c2)*(65536) + ((((int64_t)cal_pres_c4)*((int64_t)dT))/(128));
    156c:	d3 01       	movw	r26, r6
    156e:	c2 01       	movw	r24, r4
    1570:	bb 0f       	add	r27, r27
    1572:	88 0b       	sbc	r24, r24
    1574:	98 2f       	mov	r25, r24
    1576:	dc 01       	movw	r26, r24
    1578:	89 83       	std	Y+1, r24	; 0x01
    157a:	9a 83       	std	Y+2, r25	; 0x02
    157c:	ab 83       	std	Y+3, r26	; 0x03
    157e:	bc 83       	std	Y+4, r27	; 0x04
	int64_t sens = (((int64_t)cal_pres_c1)*(32768)) + ((((int64_t)cal_pres_c3)*((int64_t)dT))/256);
    1580:	80 91 32 20 	lds	r24, 0x2032	; 0x802032 <cal_pres_c1>
    1584:	90 91 33 20 	lds	r25, 0x2033	; 0x802033 <cal_pres_c1+0x1>
    1588:	4c 01       	movw	r8, r24
    158a:	28 2f       	mov	r18, r24
    158c:	39 2d       	mov	r19, r9
    158e:	40 e0       	ldi	r20, 0x00	; 0
    1590:	50 e0       	ldi	r21, 0x00	; 0
    1592:	60 e0       	ldi	r22, 0x00	; 0
    1594:	70 e0       	ldi	r23, 0x00	; 0
    1596:	80 e0       	ldi	r24, 0x00	; 0
    1598:	90 e0       	ldi	r25, 0x00	; 0
    159a:	0f e0       	ldi	r16, 0x0F	; 15
    159c:	0e 94 47 17 	call	0x2e8e	; 0x2e8e <__ashldi3>
    15a0:	22 2e       	mov	r2, r18
    15a2:	3d 87       	std	Y+13, r19	; 0x0d
    15a4:	4e 87       	std	Y+14, r20	; 0x0e
    15a6:	5f 87       	std	Y+15, r21	; 0x0f
    15a8:	68 8b       	std	Y+16, r22	; 0x10
    15aa:	79 8b       	std	Y+17, r23	; 0x11
    15ac:	8a 8b       	std	Y+18, r24	; 0x12
    15ae:	9b 8b       	std	Y+19, r25	; 0x13
    15b0:	00 91 30 20 	lds	r16, 0x2030	; 0x802030 <cal_pres_c3>
    15b4:	10 91 31 20 	lds	r17, 0x2031	; 0x802031 <cal_pres_c3+0x1>
    15b8:	a0 2e       	mov	r10, r16
    15ba:	b1 2e       	mov	r11, r17
    15bc:	c1 2c       	mov	r12, r1
    15be:	d1 2c       	mov	r13, r1
    15c0:	e1 2c       	mov	r14, r1
    15c2:	f1 2c       	mov	r15, r1
    15c4:	00 e0       	ldi	r16, 0x00	; 0
    15c6:	10 e0       	ldi	r17, 0x00	; 0
    15c8:	24 2d       	mov	r18, r4
    15ca:	35 2d       	mov	r19, r5
    15cc:	46 2d       	mov	r20, r6
    15ce:	57 2d       	mov	r21, r7
    15d0:	69 81       	ldd	r22, Y+1	; 0x01
    15d2:	76 2f       	mov	r23, r22
    15d4:	86 2f       	mov	r24, r22
    15d6:	96 2f       	mov	r25, r22
    15d8:	0e 94 f6 16 	call	0x2dec	; 0x2dec <__muldi3>
    15dc:	32 2e       	mov	r3, r18
    15de:	83 2e       	mov	r8, r19
    15e0:	94 2e       	mov	r9, r20
    15e2:	e5 2f       	mov	r30, r21
    15e4:	6d 8b       	std	Y+21, r22	; 0x15
    15e6:	7c 8b       	std	Y+20, r23	; 0x14
    15e8:	a8 2e       	mov	r10, r24
    15ea:	b9 2e       	mov	r11, r25
    15ec:	a0 e0       	ldi	r26, 0x00	; 0
    15ee:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__cmpdi2_s8>
    15f2:	84 f4       	brge	.+32     	; 0x1614 <getPressure+0x1ae>
    15f4:	21 50       	subi	r18, 0x01	; 1
    15f6:	3f 4f       	sbci	r19, 0xFF	; 255
    15f8:	4f 4f       	sbci	r20, 0xFF	; 255
    15fa:	5f 4f       	sbci	r21, 0xFF	; 255
    15fc:	6f 4f       	sbci	r22, 0xFF	; 255
    15fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1600:	8f 4f       	sbci	r24, 0xFF	; 255
    1602:	9f 4f       	sbci	r25, 0xFF	; 255
    1604:	32 2e       	mov	r3, r18
    1606:	83 2e       	mov	r8, r19
    1608:	94 2e       	mov	r9, r20
    160a:	e5 2f       	mov	r30, r21
    160c:	6d 8b       	std	Y+21, r22	; 0x15
    160e:	7c 8b       	std	Y+20, r23	; 0x14
    1610:	a8 2e       	mov	r10, r24
    1612:	b9 2e       	mov	r11, r25
    1614:	23 2d       	mov	r18, r3
    1616:	38 2d       	mov	r19, r8
    1618:	49 2d       	mov	r20, r9
    161a:	5e 2f       	mov	r21, r30
    161c:	6d 89       	ldd	r22, Y+21	; 0x15
    161e:	7c 89       	ldd	r23, Y+20	; 0x14
    1620:	8a 2d       	mov	r24, r10
    1622:	9b 2d       	mov	r25, r11
    1624:	08 e0       	ldi	r16, 0x08	; 8
    1626:	0e 94 60 17 	call	0x2ec0	; 0x2ec0 <__ashrdi3>
    162a:	a2 2e       	mov	r10, r18
    162c:	b3 2e       	mov	r11, r19
    162e:	c4 2e       	mov	r12, r20
    1630:	d5 2e       	mov	r13, r21
    1632:	e6 2e       	mov	r14, r22
    1634:	f7 2e       	mov	r15, r23
    1636:	08 2f       	mov	r16, r24
    1638:	19 2f       	mov	r17, r25
    163a:	22 2d       	mov	r18, r2
    163c:	3d 85       	ldd	r19, Y+13	; 0x0d
    163e:	4e 85       	ldd	r20, Y+14	; 0x0e
    1640:	5f 85       	ldd	r21, Y+15	; 0x0f
    1642:	68 89       	ldd	r22, Y+16	; 0x10
    1644:	79 89       	ldd	r23, Y+17	; 0x11
    1646:	8a 89       	ldd	r24, Y+18	; 0x12
    1648:	9b 89       	ldd	r25, Y+19	; 0x13
    164a:	0e 94 7e 17 	call	0x2efc	; 0x2efc <__adddi3>
	int32_t pressure = ((((int64_t)uncal_pressure) * (((uint64_t)sens)/2097152)) - (int64_t)offset)/32768;
    164e:	05 e1       	ldi	r16, 0x15	; 21
    1650:	0e 94 62 17 	call	0x2ec4	; 0x2ec4 <__lshrdi3>
    1654:	cd 80       	ldd	r12, Y+5	; 0x05
    1656:	de 80       	ldd	r13, Y+6	; 0x06
    1658:	ef 80       	ldd	r14, Y+7	; 0x07
    165a:	f8 84       	ldd	r15, Y+8	; 0x08
    165c:	56 01       	movw	r10, r12
    165e:	67 01       	movw	r12, r14
    1660:	e1 2c       	mov	r14, r1
    1662:	f1 2c       	mov	r15, r1
    1664:	87 01       	movw	r16, r14
    1666:	ad 82       	std	Y+5, r10	; 0x05
    1668:	be 82       	std	Y+6, r11	; 0x06
    166a:	cf 82       	std	Y+7, r12	; 0x07
    166c:	d8 86       	std	Y+8, r13	; 0x08
    166e:	e9 86       	std	Y+9, r14	; 0x09
    1670:	fa 86       	std	Y+10, r15	; 0x0a
    1672:	0b 87       	std	Y+11, r16	; 0x0b
    1674:	1c 87       	std	Y+12, r17	; 0x0c
    1676:	e1 2c       	mov	r14, r1
    1678:	f1 2c       	mov	r15, r1
    167a:	00 e0       	ldi	r16, 0x00	; 0
    167c:	10 e0       	ldi	r17, 0x00	; 0
    167e:	0e 94 f6 16 	call	0x2dec	; 0x2dec <__muldi3>
    1682:	2d 83       	std	Y+5, r18	; 0x05
    1684:	3d 87       	std	Y+13, r19	; 0x0d
    1686:	4e 87       	std	Y+14, r20	; 0x0e
    1688:	5f 87       	std	Y+15, r21	; 0x0f
    168a:	68 8b       	std	Y+16, r22	; 0x10
    168c:	79 8b       	std	Y+17, r23	; 0x11
    168e:	8a 8b       	std	Y+18, r24	; 0x12
    1690:	9b 8b       	std	Y+19, r25	; 0x13
	d2 += ((uint32_t)spi_read());
	spi_deselect();
	
	/* Calculate temperature-adjusted pressure */
	int32_t dT = (int64_t)d2 - (((int64_t)cal_pres_c5)*(256));
	int64_t offset = ((int64_t)cal_pres_c2)*(65536) + ((((int64_t)cal_pres_c4)*((int64_t)dT))/(128));
    1692:	80 91 36 20 	lds	r24, 0x2036	; 0x802036 <cal_pres_c2>
    1696:	90 91 37 20 	lds	r25, 0x2037	; 0x802037 <cal_pres_c2+0x1>
    169a:	4c 01       	movw	r8, r24
    169c:	28 2f       	mov	r18, r24
    169e:	39 2d       	mov	r19, r9
    16a0:	40 e0       	ldi	r20, 0x00	; 0
    16a2:	50 e0       	ldi	r21, 0x00	; 0
    16a4:	60 e0       	ldi	r22, 0x00	; 0
    16a6:	70 e0       	ldi	r23, 0x00	; 0
    16a8:	80 e0       	ldi	r24, 0x00	; 0
    16aa:	90 e0       	ldi	r25, 0x00	; 0
    16ac:	00 e1       	ldi	r16, 0x10	; 16
    16ae:	0e 94 47 17 	call	0x2e8e	; 0x2e8e <__ashldi3>
    16b2:	22 2e       	mov	r2, r18
    16b4:	33 2e       	mov	r3, r19
    16b6:	84 2e       	mov	r8, r20
    16b8:	95 2e       	mov	r9, r21
    16ba:	6c 8b       	std	Y+20, r22	; 0x14
    16bc:	7d 8b       	std	Y+21, r23	; 0x15
    16be:	8e 8b       	std	Y+22, r24	; 0x16
    16c0:	9f 8b       	std	Y+23, r25	; 0x17
    16c2:	40 91 34 20 	lds	r20, 0x2034	; 0x802034 <cal_pres_c4>
    16c6:	50 91 35 20 	lds	r21, 0x2035	; 0x802035 <cal_pres_c4+0x1>
    16ca:	5a 01       	movw	r10, r20
    16cc:	c1 2c       	mov	r12, r1
    16ce:	d1 2c       	mov	r13, r1
    16d0:	e1 2c       	mov	r14, r1
    16d2:	f1 2c       	mov	r15, r1
    16d4:	87 01       	movw	r16, r14
    16d6:	48 8f       	std	Y+24, r20	; 0x18
    16d8:	b9 8e       	std	Y+25, r11	; 0x19
    16da:	ca 8e       	std	Y+26, r12	; 0x1a
    16dc:	db 8e       	std	Y+27, r13	; 0x1b
    16de:	ec 8e       	std	Y+28, r14	; 0x1c
    16e0:	fd 8e       	std	Y+29, r15	; 0x1d
    16e2:	0e 8f       	std	Y+30, r16	; 0x1e
    16e4:	1f 8f       	std	Y+31, r17	; 0x1f
    16e6:	a4 2c       	mov	r10, r4
    16e8:	b5 2c       	mov	r11, r5
    16ea:	c6 2c       	mov	r12, r6
    16ec:	d7 2c       	mov	r13, r7
    16ee:	e9 80       	ldd	r14, Y+1	; 0x01
    16f0:	fe 2c       	mov	r15, r14
    16f2:	0e 2d       	mov	r16, r14
    16f4:	1e 2d       	mov	r17, r14
    16f6:	28 8d       	ldd	r18, Y+24	; 0x18
    16f8:	39 8d       	ldd	r19, Y+25	; 0x19
    16fa:	40 e0       	ldi	r20, 0x00	; 0
    16fc:	50 e0       	ldi	r21, 0x00	; 0
    16fe:	60 e0       	ldi	r22, 0x00	; 0
    1700:	70 e0       	ldi	r23, 0x00	; 0
    1702:	80 e0       	ldi	r24, 0x00	; 0
    1704:	90 e0       	ldi	r25, 0x00	; 0
    1706:	0e 94 f6 16 	call	0x2dec	; 0x2dec <__muldi3>
    170a:	e2 2f       	mov	r30, r18
    170c:	73 2e       	mov	r7, r19
    170e:	64 2e       	mov	r6, r20
    1710:	55 2e       	mov	r5, r21
    1712:	46 2e       	mov	r4, r22
    1714:	79 83       	std	Y+1, r23	; 0x01
    1716:	a8 2e       	mov	r10, r24
    1718:	b9 2e       	mov	r11, r25
    171a:	a0 e0       	ldi	r26, 0x00	; 0
    171c:	0e 94 9c 17 	call	0x2f38	; 0x2f38 <__cmpdi2_s8>
    1720:	5c f4       	brge	.+22     	; 0x1738 <getPressure+0x2d2>
    1722:	af e7       	ldi	r26, 0x7F	; 127
    1724:	0e 94 87 17 	call	0x2f0e	; 0x2f0e <__adddi3_s8>
    1728:	e2 2f       	mov	r30, r18
    172a:	73 2e       	mov	r7, r19
    172c:	64 2e       	mov	r6, r20
    172e:	55 2e       	mov	r5, r21
    1730:	46 2e       	mov	r4, r22
    1732:	79 83       	std	Y+1, r23	; 0x01
    1734:	a8 2e       	mov	r10, r24
    1736:	b9 2e       	mov	r11, r25
    1738:	2e 2f       	mov	r18, r30
    173a:	37 2d       	mov	r19, r7
    173c:	46 2d       	mov	r20, r6
    173e:	55 2d       	mov	r21, r5
    1740:	64 2d       	mov	r22, r4
    1742:	79 81       	ldd	r23, Y+1	; 0x01
    1744:	8a 2d       	mov	r24, r10
    1746:	9b 2d       	mov	r25, r11
    1748:	07 e0       	ldi	r16, 0x07	; 7
    174a:	0e 94 60 17 	call	0x2ec0	; 0x2ec0 <__ashrdi3>
    174e:	a2 2e       	mov	r10, r18
    1750:	b3 2e       	mov	r11, r19
    1752:	c4 2e       	mov	r12, r20
    1754:	d5 2e       	mov	r13, r21
    1756:	e6 2e       	mov	r14, r22
    1758:	f7 2e       	mov	r15, r23
    175a:	08 2f       	mov	r16, r24
    175c:	19 2f       	mov	r17, r25
    175e:	22 2d       	mov	r18, r2
    1760:	33 2d       	mov	r19, r3
    1762:	48 2d       	mov	r20, r8
    1764:	59 2d       	mov	r21, r9
    1766:	6c 89       	ldd	r22, Y+20	; 0x14
    1768:	7d 89       	ldd	r23, Y+21	; 0x15
    176a:	8e 89       	ldd	r24, Y+22	; 0x16
    176c:	9f 89       	ldd	r25, Y+23	; 0x17
    176e:	0e 94 7e 17 	call	0x2efc	; 0x2efc <__adddi3>
    1772:	a2 2e       	mov	r10, r18
    1774:	b3 2e       	mov	r11, r19
    1776:	c4 2e       	mov	r12, r20
    1778:	d5 2e       	mov	r13, r21
    177a:	e6 2e       	mov	r14, r22
    177c:	f7 2e       	mov	r15, r23
    177e:	08 2f       	mov	r16, r24
    1780:	19 2f       	mov	r17, r25
	int64_t sens = (((int64_t)cal_pres_c1)*(32768)) + ((((int64_t)cal_pres_c3)*((int64_t)dT))/256);
	int32_t pressure = ((((int64_t)uncal_pressure) * (((uint64_t)sens)/2097152)) - (int64_t)offset)/32768;
    1782:	2d 81       	ldd	r18, Y+5	; 0x05
    1784:	3d 85       	ldd	r19, Y+13	; 0x0d
    1786:	4e 85       	ldd	r20, Y+14	; 0x0e
    1788:	5f 85       	ldd	r21, Y+15	; 0x0f
    178a:	68 89       	ldd	r22, Y+16	; 0x10
    178c:	79 89       	ldd	r23, Y+17	; 0x11
    178e:	8a 89       	ldd	r24, Y+18	; 0x12
    1790:	9b 89       	ldd	r25, Y+19	; 0x13
    1792:	0e 94 93 17 	call	0x2f26	; 0x2f26 <__subdi3>
    1796:	0f e0       	ldi	r16, 0x0F	; 15
    1798:	0e 94 62 17 	call	0x2ec4	; 0x2ec4 <__lshrdi3>
    179c:	62 2f       	mov	r22, r18
    179e:	73 2f       	mov	r23, r19
    17a0:	84 2f       	mov	r24, r20
    17a2:	95 2f       	mov	r25, r21
	
	
	return pressure; //pressure given in pascals.
    17a4:	6f 96       	adiw	r28, 0x1f	; 31
    17a6:	cd bf       	out	0x3d, r28	; 61
    17a8:	de bf       	out	0x3e, r29	; 62
    17aa:	df 91       	pop	r29
    17ac:	cf 91       	pop	r28
    17ae:	1f 91       	pop	r17
    17b0:	0f 91       	pop	r16
    17b2:	ff 90       	pop	r15
    17b4:	ef 90       	pop	r14
    17b6:	df 90       	pop	r13
    17b8:	cf 90       	pop	r12
    17ba:	bf 90       	pop	r11
    17bc:	af 90       	pop	r10
    17be:	9f 90       	pop	r9
    17c0:	8f 90       	pop	r8
    17c2:	7f 90       	pop	r7
    17c4:	6f 90       	pop	r6
    17c6:	5f 90       	pop	r5
    17c8:	4f 90       	pop	r4
    17ca:	3f 90       	pop	r3
    17cc:	2f 90       	pop	r2
    17ce:	08 95       	ret

000017d0 <getTemperature>:

  /*******************************************************************************************/
							/* getTemperature method */

/* Method that uses change in voltage to find resistance across thermistor and thus temperature w/ Steinhart-Hart equation. */
 float getTemperature(void){
    17d0:	8f 92       	push	r8
    17d2:	9f 92       	push	r9
    17d4:	af 92       	push	r10
    17d6:	bf 92       	push	r11
    17d8:	cf 92       	push	r12
    17da:	df 92       	push	r13
    17dc:	ef 92       	push	r14
    17de:	ff 92       	push	r15
	ADCA.CH0.CTRL |= 0b10000000; //Start the conversion..
    17e0:	e0 e0       	ldi	r30, 0x00	; 0
    17e2:	f2 e0       	ldi	r31, 0x02	; 2
    17e4:	80 a1       	ldd	r24, Z+32	; 0x20
    17e6:	80 68       	ori	r24, 0x80	; 128
    17e8:	80 a3       	std	Z+32, r24	; 0x20
	while(ADCA.CH0.INTFLAGS == 0); //Wait until conversion is done.
    17ea:	83 a1       	ldd	r24, Z+35	; 0x23
    17ec:	88 23       	and	r24, r24
    17ee:	e9 f3       	breq	.-6      	; 0x17ea <getTemperature+0x1a>
	uint16_t read_adc = ADCA.CH0.RES; // save reading
    17f0:	60 91 24 02 	lds	r22, 0x0224	; 0x800224 <__TEXT_REGION_LENGTH__+0x700224>
    17f4:	70 91 25 02 	lds	r23, 0x0225	; 0x800225 <__TEXT_REGION_LENGTH__+0x700225>

	float voltage = (0.000502512562*read_adc - 0.095979899); //converts the adc reading into an actual voltage based off of slope.
    17f8:	80 e0       	ldi	r24, 0x00	; 0
    17fa:	90 e0       	ldi	r25, 0x00	; 0
    17fc:	a8 d5       	rcall	.+2896   	; 0x234e <__floatunsisf>
    17fe:	2c e0       	ldi	r18, 0x0C	; 12
    1800:	3b eb       	ldi	r19, 0xBB	; 187
    1802:	43 e0       	ldi	r20, 0x03	; 3
    1804:	5a e3       	ldi	r21, 0x3A	; 58
    1806:	9a d6       	rcall	.+3380   	; 0x253c <__mulsf3>
    1808:	2c e1       	ldi	r18, 0x1C	; 28
    180a:	31 e9       	ldi	r19, 0x91	; 145
    180c:	44 ec       	ldi	r20, 0xC4	; 196
    180e:	5d e3       	ldi	r21, 0x3D	; 61
    1810:	a1 d4       	rcall	.+2370   	; 0x2154 <__subsf3>
    1812:	9b 01       	movw	r18, r22
    1814:	ac 01       	movw	r20, r24
	float resistance = (3.3*10000)/(3.3 - voltage) - 10000; //Need to convert our voltage reading into the resistance across the thermistor. To find this we use 3.3(R1)/(3.3-vadc) - R1
    1816:	63 e3       	ldi	r22, 0x33	; 51
    1818:	73 e3       	ldi	r23, 0x33	; 51
    181a:	83 e5       	ldi	r24, 0x53	; 83
    181c:	90 e4       	ldi	r25, 0x40	; 64
    181e:	9a d4       	rcall	.+2356   	; 0x2154 <__subsf3>
    1820:	9b 01       	movw	r18, r22
    1822:	ac 01       	movw	r20, r24
    1824:	60 e0       	ldi	r22, 0x00	; 0
    1826:	78 ee       	ldi	r23, 0xE8	; 232
    1828:	80 e0       	ldi	r24, 0x00	; 0
    182a:	97 e4       	ldi	r25, 0x47	; 71
    182c:	fc d4       	rcall	.+2552   	; 0x2226 <__divsf3>
    182e:	20 e0       	ldi	r18, 0x00	; 0
    1830:	30 e4       	ldi	r19, 0x40	; 64
    1832:	4c e1       	ldi	r20, 0x1C	; 28
    1834:	56 e4       	ldi	r21, 0x46	; 70
    1836:	8e d4       	rcall	.+2332   	; 0x2154 <__subsf3>
	
	float a_const = 0.003354016; //A value for the NTCLE100E3103HT1 in the Steinhart-Hart equation (T = 1/(A + Bln(resistance) + Dln^3(resistance))
	float b_const = 0.000256985; //B value
	float d_const = 0.00000006383091; //D value.
	return 1/(a_const+ b_const*log(resistance/10000) + d_const*log(resistance/10000)*log(resistance/10000)*log(resistance/10000)); //Steinhart-Hart to find temperature then return it.
    1838:	20 e0       	ldi	r18, 0x00	; 0
    183a:	30 e4       	ldi	r19, 0x40	; 64
    183c:	4c e1       	ldi	r20, 0x1C	; 28
    183e:	56 e4       	ldi	r21, 0x46	; 70
    1840:	f2 d4       	rcall	.+2532   	; 0x2226 <__divsf3>
    1842:	3c d6       	rcall	.+3192   	; 0x24bc <log>
    1844:	6b 01       	movw	r12, r22
    1846:	7c 01       	movw	r14, r24
    1848:	21 ef       	ldi	r18, 0xF1	; 241
    184a:	3b eb       	ldi	r19, 0xBB	; 187
    184c:	46 e8       	ldi	r20, 0x86	; 134
    184e:	59 e3       	ldi	r21, 0x39	; 57
    1850:	75 d6       	rcall	.+3306   	; 0x253c <__mulsf3>
    1852:	2d e0       	ldi	r18, 0x0D	; 13
    1854:	3f ec       	ldi	r19, 0xCF	; 207
    1856:	4b e5       	ldi	r20, 0x5B	; 91
    1858:	5b e3       	ldi	r21, 0x3B	; 59
    185a:	7d d4       	rcall	.+2298   	; 0x2156 <__addsf3>
    185c:	4b 01       	movw	r8, r22
    185e:	5c 01       	movw	r10, r24
    1860:	2a e6       	ldi	r18, 0x6A	; 106
    1862:	33 e1       	ldi	r19, 0x13	; 19
    1864:	49 e8       	ldi	r20, 0x89	; 137
    1866:	53 e3       	ldi	r21, 0x33	; 51
    1868:	c7 01       	movw	r24, r14
    186a:	b6 01       	movw	r22, r12
    186c:	67 d6       	rcall	.+3278   	; 0x253c <__mulsf3>
    186e:	9b 01       	movw	r18, r22
    1870:	ac 01       	movw	r20, r24
    1872:	c7 01       	movw	r24, r14
    1874:	b6 01       	movw	r22, r12
    1876:	62 d6       	rcall	.+3268   	; 0x253c <__mulsf3>
    1878:	9b 01       	movw	r18, r22
    187a:	ac 01       	movw	r20, r24
    187c:	c7 01       	movw	r24, r14
    187e:	b6 01       	movw	r22, r12
    1880:	5d d6       	rcall	.+3258   	; 0x253c <__mulsf3>
    1882:	9b 01       	movw	r18, r22
    1884:	ac 01       	movw	r20, r24
    1886:	c5 01       	movw	r24, r10
    1888:	b4 01       	movw	r22, r8
    188a:	65 d4       	rcall	.+2250   	; 0x2156 <__addsf3>
    188c:	9b 01       	movw	r18, r22
    188e:	ac 01       	movw	r20, r24
    1890:	60 e0       	ldi	r22, 0x00	; 0
    1892:	70 e0       	ldi	r23, 0x00	; 0
    1894:	80 e8       	ldi	r24, 0x80	; 128
    1896:	9f e3       	ldi	r25, 0x3F	; 63
    1898:	c6 d4       	rcall	.+2444   	; 0x2226 <__divsf3>
    189a:	ff 90       	pop	r15
    189c:	ef 90       	pop	r14
    189e:	df 90       	pop	r13
    18a0:	cf 90       	pop	r12
    18a2:	bf 90       	pop	r11
    18a4:	af 90       	pop	r10
    18a6:	9f 90       	pop	r9
    18a8:	8f 90       	pop	r8
    18aa:	08 95       	ret

000018ac <TCD0_init>:
	TCE0.CCD = TCE0.PER - (TCE0.PER/duty_cycle);
}

/* Initialize Timer Counter for port D, GPIOs (LEDs, Buzzer, Motor) */
void TCD0_init(void){
	PORTD.DIR = 0b11111111; //sets to output.
    18ac:	8f ef       	ldi	r24, 0xFF	; 255
    18ae:	80 93 60 06 	sts	0x0660, r24	; 0x800660 <__TEXT_REGION_LENGTH__+0x700660>
	TCD0.CTRLA = 0b00000110; //0110 is prescalar 256.
    18b2:	e0 e0       	ldi	r30, 0x00	; 0
    18b4:	f9 e0       	ldi	r31, 0x09	; 9
    18b6:	86 e0       	ldi	r24, 0x06	; 6
    18b8:	80 83       	st	Z, r24
	TCD0.CTRLB = 0b10110011; //OCn output pin (currently set at 0) and single slope PWM.
    18ba:	83 eb       	ldi	r24, 0xB3	; 179
    18bc:	81 83       	std	Z+1, r24	; 0x01
    18be:	08 95       	ret

000018c0 <TCF0_init>:
}

/* Initialize Timer Counter for port F, keeps time for velocity calculations. */
void TCF0_init(void){
	TCF0.CTRLA = 0b00000111; //presc 1024
    18c0:	e0 e0       	ldi	r30, 0x00	; 0
    18c2:	fb e0       	ldi	r31, 0x0B	; 11
    18c4:	87 e0       	ldi	r24, 0x07	; 7
    18c6:	80 83       	st	Z, r24
	TCF0.CTRLB = 0b00000000;
    18c8:	11 82       	std	Z+1, r1	; 0x01
	TCF0.CNT = 0;
    18ca:	10 a2       	std	Z+32, r1	; 0x20
    18cc:	11 a2       	std	Z+33, r1	; 0x21
	TCF0.PER = 312; //period of 312 = ~100Hz = ~10ms before overflow
    18ce:	88 e3       	ldi	r24, 0x38	; 56
    18d0:	91 e0       	ldi	r25, 0x01	; 1
    18d2:	86 a3       	std	Z+38, r24	; 0x26
    18d4:	97 a3       	std	Z+39, r25	; 0x27
    18d6:	08 95       	ret

000018d8 <usart_serial_getchar>:
 * \param usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if usart, uint8_t *data)
{
    18d8:	cf 93       	push	r28
    18da:	df 93       	push	r29
    18dc:	eb 01       	movw	r28, r22
	*data = usart_getchar(usart);
    18de:	78 da       	rcall	.-2832   	; 0xdd0 <usart_getchar>
    18e0:	88 83       	st	Y, r24
}
    18e2:	df 91       	pop	r29
    18e4:	cf 91       	pop	r28
    18e6:	08 95       	ret

000018e8 <usart_serial_putchar>:
 *
 * \return Status code
 */
static inline enum status_code usart_serial_putchar(usart_if usart, uint8_t c)
{
	return usart_putchar(usart, c);
    18e8:	6b ca       	rjmp	.-2858   	; 0xdc0 <usart_putchar>
}
    18ea:	08 95       	ret

000018ec <UART_Comms_Init>:
/* Global Variables */

 /*******************************************************************************************/
								/* Initialization methods */
/* Method to initialize UART communications */
void UART_Comms_Init(void){
    18ec:	cf 93       	push	r28
    18ee:	df 93       	push	r29
    18f0:	cd b7       	in	r28, 0x3d	; 61
    18f2:	de b7       	in	r29, 0x3e	; 62
    18f4:	27 97       	sbiw	r28, 0x07	; 7
    18f6:	cd bf       	out	0x3d, r28	; 61
    18f8:	de bf       	out	0x3e, r29	; 62
		.paritytype = USART_SERIAL_PARITY,
		.stopbits = USART_SERIAL_STOP_BIT
	};

	//Must set TX pin as output
	PORTC.DIRSET=0b00001000;
    18fa:	e0 e4       	ldi	r30, 0x40	; 64
    18fc:	f6 e0       	ldi	r31, 0x06	; 6
    18fe:	88 e0       	ldi	r24, 0x08	; 8
    1900:	81 83       	std	Z+1, r24	; 0x01
	PORTC.OUTSET=0b00001000;
    1902:	85 83       	std	Z+5, r24	; 0x05
	PORTC.OUT=0xFF;
    1904:	8f ef       	ldi	r24, 0xFF	; 255
    1906:	84 83       	std	Z+4, r24	; 0x04
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
    1908:	80 ea       	ldi	r24, 0xA0	; 160
    190a:	98 e0       	ldi	r25, 0x08	; 8
    190c:	80 93 28 20 	sts	0x2028, r24	; 0x802028 <stdio_base>
    1910:	90 93 29 20 	sts	0x2029, r25	; 0x802029 <stdio_base+0x1>
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
    1914:	84 e7       	ldi	r24, 0x74	; 116
    1916:	9c e0       	ldi	r25, 0x0C	; 12
    1918:	80 93 26 20 	sts	0x2026, r24	; 0x802026 <ptr_put>
    191c:	90 93 27 20 	sts	0x2027, r25	; 0x802027 <ptr_put+0x1>
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
    1920:	8c e6       	ldi	r24, 0x6C	; 108
    1922:	9c e0       	ldi	r25, 0x0C	; 12
    1924:	80 93 24 20 	sts	0x2024, r24	; 0x802024 <ptr_get>
    1928:	90 93 25 20 	sts	0x2025, r25	; 0x802025 <ptr_get+0x1>
static inline bool usart_serial_init(usart_if usart, const
		usart_serial_options_t *options)
{
	// USART options.
	usart_rs232_options_t usart_rs232_options;
	usart_rs232_options.charlength   = options->charlength;
    192c:	e6 e0       	ldi	r30, 0x06	; 6
    192e:	f0 e2       	ldi	r31, 0x20	; 32
    1930:	84 81       	ldd	r24, Z+4	; 0x04
    1932:	8d 83       	std	Y+5, r24	; 0x05
	usart_rs232_options.paritytype   = options->paritytype;
    1934:	85 81       	ldd	r24, Z+5	; 0x05
    1936:	8e 83       	std	Y+6, r24	; 0x06
	usart_rs232_options.stopbits     = options->stopbits;
    1938:	86 81       	ldd	r24, Z+6	; 0x06
    193a:	8f 83       	std	Y+7, r24	; 0x07
	usart_rs232_options.baudrate     = options->baudrate;
    193c:	80 81       	ld	r24, Z
    193e:	91 81       	ldd	r25, Z+1	; 0x01
    1940:	a2 81       	ldd	r26, Z+2	; 0x02
    1942:	b3 81       	ldd	r27, Z+3	; 0x03
    1944:	89 83       	std	Y+1, r24	; 0x01
    1946:	9a 83       	std	Y+2, r25	; 0x02
    1948:	ab 83       	std	Y+3, r26	; 0x03
    194a:	bc 83       	std	Y+4, r27	; 0x04

#ifdef USARTC0
	if((uint16_t)usart == (uint16_t)&USARTC0) {
		sysclk_enable_module(SYSCLK_PORT_C,PR_USART0_bm);
    194c:	60 e1       	ldi	r22, 0x10	; 16
    194e:	83 e0       	ldi	r24, 0x03	; 3
    1950:	0e 94 69 04 	call	0x8d2	; 0x8d2 <sysclk_enable_module>
#ifdef USARTF1
	if((uint16_t)usart == (uint16_t)&USARTF1) {
		sysclk_enable_module(SYSCLK_PORT_F,PR_USART1_bm);
	}
#endif
	if (usart_init_rs232(usart, &usart_rs232_options)) {
    1954:	be 01       	movw	r22, r28
    1956:	6f 5f       	subi	r22, 0xFF	; 255
    1958:	7f 4f       	sbci	r23, 0xFF	; 255
    195a:	80 ea       	ldi	r24, 0xA0	; 160
    195c:	98 e0       	ldi	r25, 0x08	; 8
    195e:	57 db       	rcall	.-2386   	; 0x100e <usart_init_rs232>
# endif

# if defined(__GNUC__)
#  if (XMEGA || MEGA_RF)
	// For AVR GCC libc print redirection uses fdevopen.
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
    1960:	65 e7       	ldi	r22, 0x75	; 117
    1962:	74 e0       	ldi	r23, 0x04	; 4
    1964:	8e e8       	ldi	r24, 0x8E	; 142
    1966:	94 e0       	ldi	r25, 0x04	; 4
    1968:	0e 94 a5 18 	call	0x314a	; 0x314a <fdevopen>

	stdio_serial_init(&USARTC0, &usart_options); //ASF function that initializes the UART peripheral
}
    196c:	27 96       	adiw	r28, 0x07	; 7
    196e:	cd bf       	out	0x3d, r28	; 61
    1970:	de bf       	out	0x3e, r29	; 62
    1972:	df 91       	pop	r29
    1974:	cf 91       	pop	r28
    1976:	08 95       	ret

00001978 <sysclk_enable_peripheral_clock>:
 *
 * \param module Pointer to the module's base address.
 */
static inline void sysclk_enable_peripheral_clock(const volatile void *module)
{
	if (module == NULL) {
    1978:	00 97       	sbiw	r24, 0x00	; 0
    197a:	09 f4       	brne	.+2      	; 0x197e <sysclk_enable_peripheral_clock+0x6>
    197c:	5c c1       	rjmp	.+696    	; 0x1c36 <sysclk_enable_peripheral_clock+0x2be>
		Assert(false);
	}
#ifdef AES
	else if (module == &AES) {
    197e:	80 3c       	cpi	r24, 0xC0	; 192
    1980:	91 05       	cpc	r25, r1
    1982:	29 f4       	brne	.+10     	; 0x198e <sysclk_enable_peripheral_clock+0x16>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_AES);
    1984:	60 e1       	ldi	r22, 0x10	; 16
    1986:	80 e0       	ldi	r24, 0x00	; 0
    1988:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    198c:	08 95       	ret
	}
#endif
#ifdef EBI
	else if (module == &EBI) {
    198e:	80 34       	cpi	r24, 0x40	; 64
    1990:	24 e0       	ldi	r18, 0x04	; 4
    1992:	92 07       	cpc	r25, r18
    1994:	29 f4       	brne	.+10     	; 0x19a0 <sysclk_enable_peripheral_clock+0x28>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_EBI);
    1996:	68 e0       	ldi	r22, 0x08	; 8
    1998:	80 e0       	ldi	r24, 0x00	; 0
    199a:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    199e:	08 95       	ret
	}
#endif
#ifdef RTC
	else if (module == &RTC) {
    19a0:	81 15       	cp	r24, r1
    19a2:	24 e0       	ldi	r18, 0x04	; 4
    19a4:	92 07       	cpc	r25, r18
    19a6:	29 f4       	brne	.+10     	; 0x19b2 <sysclk_enable_peripheral_clock+0x3a>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_RTC);
    19a8:	64 e0       	ldi	r22, 0x04	; 4
    19aa:	80 e0       	ldi	r24, 0x00	; 0
    19ac:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    19b0:	08 95       	ret
	}
#endif
#ifdef EVSYS
	else if (module == &EVSYS) {
    19b2:	80 38       	cpi	r24, 0x80	; 128
    19b4:	21 e0       	ldi	r18, 0x01	; 1
    19b6:	92 07       	cpc	r25, r18
    19b8:	29 f4       	brne	.+10     	; 0x19c4 <sysclk_enable_peripheral_clock+0x4c>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_EVSYS);
    19ba:	62 e0       	ldi	r22, 0x02	; 2
    19bc:	80 e0       	ldi	r24, 0x00	; 0
    19be:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    19c2:	08 95       	ret
	}
#endif
#ifdef DMA
	else if (module == &DMA) {
    19c4:	81 15       	cp	r24, r1
    19c6:	21 e0       	ldi	r18, 0x01	; 1
    19c8:	92 07       	cpc	r25, r18
    19ca:	29 f4       	brne	.+10     	; 0x19d6 <sysclk_enable_peripheral_clock+0x5e>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_DMA);
    19cc:	61 e0       	ldi	r22, 0x01	; 1
    19ce:	80 e0       	ldi	r24, 0x00	; 0
    19d0:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    19d4:	08 95       	ret
	else if (module == &EDMA) {
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_EDMA);
	}
#endif
#ifdef ACA
	else if (module == &ACA) {
    19d6:	80 38       	cpi	r24, 0x80	; 128
    19d8:	23 e0       	ldi	r18, 0x03	; 3
    19da:	92 07       	cpc	r25, r18
    19dc:	29 f4       	brne	.+10     	; 0x19e8 <sysclk_enable_peripheral_clock+0x70>
		sysclk_enable_module(SYSCLK_PORT_A, SYSCLK_AC);
    19de:	61 e0       	ldi	r22, 0x01	; 1
    19e0:	81 e0       	ldi	r24, 0x01	; 1
    19e2:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    19e6:	08 95       	ret
	}
#endif
#ifdef ACB
	else if (module == &ACB) {
    19e8:	80 39       	cpi	r24, 0x90	; 144
    19ea:	23 e0       	ldi	r18, 0x03	; 3
    19ec:	92 07       	cpc	r25, r18
    19ee:	29 f4       	brne	.+10     	; 0x19fa <sysclk_enable_peripheral_clock+0x82>
		sysclk_enable_module(SYSCLK_PORT_B, SYSCLK_AC);
    19f0:	61 e0       	ldi	r22, 0x01	; 1
    19f2:	82 e0       	ldi	r24, 0x02	; 2
    19f4:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    19f8:	08 95       	ret
	}
#endif
#ifdef ADCA
	else if (module == &ADCA) {
    19fa:	81 15       	cp	r24, r1
    19fc:	22 e0       	ldi	r18, 0x02	; 2
    19fe:	92 07       	cpc	r25, r18
    1a00:	29 f4       	brne	.+10     	; 0x1a0c <sysclk_enable_peripheral_clock+0x94>
		sysclk_enable_module(SYSCLK_PORT_A, SYSCLK_ADC);
    1a02:	62 e0       	ldi	r22, 0x02	; 2
    1a04:	81 e0       	ldi	r24, 0x01	; 1
    1a06:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1a0a:	08 95       	ret
	}
#endif
#ifdef ADCB
	else if (module == &ADCB) {
    1a0c:	80 34       	cpi	r24, 0x40	; 64
    1a0e:	22 e0       	ldi	r18, 0x02	; 2
    1a10:	92 07       	cpc	r25, r18
    1a12:	29 f4       	brne	.+10     	; 0x1a1e <sysclk_enable_peripheral_clock+0xa6>
		sysclk_enable_module(SYSCLK_PORT_B, SYSCLK_ADC);
    1a14:	62 e0       	ldi	r22, 0x02	; 2
    1a16:	82 e0       	ldi	r24, 0x02	; 2
    1a18:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1a1c:	08 95       	ret
	}
#endif
#ifdef DACA
	else if (module == &DACA) {
    1a1e:	81 15       	cp	r24, r1
    1a20:	23 e0       	ldi	r18, 0x03	; 3
    1a22:	92 07       	cpc	r25, r18
    1a24:	29 f4       	brne	.+10     	; 0x1a30 <sysclk_enable_peripheral_clock+0xb8>
		sysclk_enable_module(SYSCLK_PORT_A, SYSCLK_DAC);
    1a26:	64 e0       	ldi	r22, 0x04	; 4
    1a28:	81 e0       	ldi	r24, 0x01	; 1
    1a2a:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1a2e:	08 95       	ret
	}
#endif
// Workaround for bad XMEGA D header file
#if !XMEGA_D
#ifdef DACB
	else if (module == &DACB) {
    1a30:	80 32       	cpi	r24, 0x20	; 32
    1a32:	23 e0       	ldi	r18, 0x03	; 3
    1a34:	92 07       	cpc	r25, r18
    1a36:	29 f4       	brne	.+10     	; 0x1a42 <sysclk_enable_peripheral_clock+0xca>
		sysclk_enable_module(SYSCLK_PORT_B, SYSCLK_DAC);
    1a38:	64 e0       	ldi	r22, 0x04	; 4
    1a3a:	82 e0       	ldi	r24, 0x02	; 2
    1a3c:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1a40:	08 95       	ret
	}
#endif
#endif // Workaround end
#ifdef TCC0
	else if (module == &TCC0) {
    1a42:	81 15       	cp	r24, r1
    1a44:	28 e0       	ldi	r18, 0x08	; 8
    1a46:	92 07       	cpc	r25, r18
    1a48:	29 f4       	brne	.+10     	; 0x1a54 <sysclk_enable_peripheral_clock+0xdc>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC0);
    1a4a:	61 e0       	ldi	r22, 0x01	; 1
    1a4c:	83 e0       	ldi	r24, 0x03	; 3
    1a4e:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1a52:	08 95       	ret
	}
#endif
#ifdef TCD0
	else if (module == &TCD0) {
    1a54:	81 15       	cp	r24, r1
    1a56:	29 e0       	ldi	r18, 0x09	; 9
    1a58:	92 07       	cpc	r25, r18
    1a5a:	29 f4       	brne	.+10     	; 0x1a66 <sysclk_enable_peripheral_clock+0xee>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC0);
    1a5c:	61 e0       	ldi	r22, 0x01	; 1
    1a5e:	84 e0       	ldi	r24, 0x04	; 4
    1a60:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1a64:	08 95       	ret
	}
#endif
#ifdef TCE0
	else if (module == &TCE0) {
    1a66:	81 15       	cp	r24, r1
    1a68:	2a e0       	ldi	r18, 0x0A	; 10
    1a6a:	92 07       	cpc	r25, r18
    1a6c:	29 f4       	brne	.+10     	; 0x1a78 <sysclk_enable_peripheral_clock+0x100>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC0);
    1a6e:	61 e0       	ldi	r22, 0x01	; 1
    1a70:	85 e0       	ldi	r24, 0x05	; 5
    1a72:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1a76:	08 95       	ret
	}
#endif
#ifdef TCF0
	else if (module == &TCF0) {
    1a78:	81 15       	cp	r24, r1
    1a7a:	2b e0       	ldi	r18, 0x0B	; 11
    1a7c:	92 07       	cpc	r25, r18
    1a7e:	29 f4       	brne	.+10     	; 0x1a8a <sysclk_enable_peripheral_clock+0x112>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TC0);
    1a80:	61 e0       	ldi	r22, 0x01	; 1
    1a82:	86 e0       	ldi	r24, 0x06	; 6
    1a84:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1a88:	08 95       	ret
	}
#endif
#ifdef TCC1
	else if (module == &TCC1) {
    1a8a:	80 34       	cpi	r24, 0x40	; 64
    1a8c:	28 e0       	ldi	r18, 0x08	; 8
    1a8e:	92 07       	cpc	r25, r18
    1a90:	29 f4       	brne	.+10     	; 0x1a9c <sysclk_enable_peripheral_clock+0x124>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC1);
    1a92:	62 e0       	ldi	r22, 0x02	; 2
    1a94:	83 e0       	ldi	r24, 0x03	; 3
    1a96:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1a9a:	08 95       	ret
	}
#endif
#ifdef TCD1
	else if (module == &TCD1) {
    1a9c:	80 34       	cpi	r24, 0x40	; 64
    1a9e:	29 e0       	ldi	r18, 0x09	; 9
    1aa0:	92 07       	cpc	r25, r18
    1aa2:	29 f4       	brne	.+10     	; 0x1aae <sysclk_enable_peripheral_clock+0x136>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC1);
    1aa4:	62 e0       	ldi	r22, 0x02	; 2
    1aa6:	84 e0       	ldi	r24, 0x04	; 4
    1aa8:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1aac:	08 95       	ret
	}
#endif
#ifdef TCE1
	else if (module == &TCE1) {
    1aae:	80 34       	cpi	r24, 0x40	; 64
    1ab0:	2a e0       	ldi	r18, 0x0A	; 10
    1ab2:	92 07       	cpc	r25, r18
    1ab4:	29 f4       	brne	.+10     	; 0x1ac0 <sysclk_enable_peripheral_clock+0x148>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC1);
    1ab6:	62 e0       	ldi	r22, 0x02	; 2
    1ab8:	85 e0       	ldi	r24, 0x05	; 5
    1aba:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1abe:	08 95       	ret
	}
#endif
#ifdef TCF1
	else if (module == &TCF1) {
    1ac0:	80 34       	cpi	r24, 0x40	; 64
    1ac2:	2b e0       	ldi	r18, 0x0B	; 11
    1ac4:	92 07       	cpc	r25, r18
    1ac6:	29 f4       	brne	.+10     	; 0x1ad2 <sysclk_enable_peripheral_clock+0x15a>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TC1);
    1ac8:	62 e0       	ldi	r22, 0x02	; 2
    1aca:	86 e0       	ldi	r24, 0x06	; 6
    1acc:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1ad0:	08 95       	ret
	else if (module == &TCD5) {
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC5);
	}
#endif
#ifdef HIRESC
	else if (module == &HIRESC) {
    1ad2:	80 39       	cpi	r24, 0x90	; 144
    1ad4:	28 e0       	ldi	r18, 0x08	; 8
    1ad6:	92 07       	cpc	r25, r18
    1ad8:	29 f4       	brne	.+10     	; 0x1ae4 <sysclk_enable_peripheral_clock+0x16c>
			sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_HIRES);
    1ada:	64 e0       	ldi	r22, 0x04	; 4
    1adc:	83 e0       	ldi	r24, 0x03	; 3
    1ade:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1ae2:	08 95       	ret
	}
#endif
#ifdef HIRESD
	else if (module == &HIRESD) {
    1ae4:	80 39       	cpi	r24, 0x90	; 144
    1ae6:	29 e0       	ldi	r18, 0x09	; 9
    1ae8:	92 07       	cpc	r25, r18
    1aea:	29 f4       	brne	.+10     	; 0x1af6 <sysclk_enable_peripheral_clock+0x17e>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_HIRES);
    1aec:	64 e0       	ldi	r22, 0x04	; 4
    1aee:	84 e0       	ldi	r24, 0x04	; 4
    1af0:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1af4:	08 95       	ret
	}
#endif
#ifdef HIRESE
	else if (module == &HIRESE) {
    1af6:	80 39       	cpi	r24, 0x90	; 144
    1af8:	2a e0       	ldi	r18, 0x0A	; 10
    1afa:	92 07       	cpc	r25, r18
    1afc:	29 f4       	brne	.+10     	; 0x1b08 <sysclk_enable_peripheral_clock+0x190>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_HIRES);
    1afe:	64 e0       	ldi	r22, 0x04	; 4
    1b00:	85 e0       	ldi	r24, 0x05	; 5
    1b02:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1b06:	08 95       	ret
	}
#endif
#ifdef HIRESF
	else if (module == &HIRESF) {
    1b08:	80 39       	cpi	r24, 0x90	; 144
    1b0a:	2b e0       	ldi	r18, 0x0B	; 11
    1b0c:	92 07       	cpc	r25, r18
    1b0e:	29 f4       	brne	.+10     	; 0x1b1a <sysclk_enable_peripheral_clock+0x1a2>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_HIRES);
    1b10:	64 e0       	ldi	r22, 0x04	; 4
    1b12:	86 e0       	ldi	r24, 0x06	; 6
    1b14:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1b18:	08 95       	ret
	}
#endif
#ifdef SPIC
	else if (module == &SPIC) {
    1b1a:	80 3c       	cpi	r24, 0xC0	; 192
    1b1c:	28 e0       	ldi	r18, 0x08	; 8
    1b1e:	92 07       	cpc	r25, r18
    1b20:	29 f4       	brne	.+10     	; 0x1b2c <sysclk_enable_peripheral_clock+0x1b4>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_SPI);
    1b22:	68 e0       	ldi	r22, 0x08	; 8
    1b24:	83 e0       	ldi	r24, 0x03	; 3
    1b26:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1b2a:	08 95       	ret
	}
#endif
#ifdef SPID
	else if (module == &SPID) {
    1b2c:	80 3c       	cpi	r24, 0xC0	; 192
    1b2e:	29 e0       	ldi	r18, 0x09	; 9
    1b30:	92 07       	cpc	r25, r18
    1b32:	29 f4       	brne	.+10     	; 0x1b3e <sysclk_enable_peripheral_clock+0x1c6>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_SPI);
    1b34:	68 e0       	ldi	r22, 0x08	; 8
    1b36:	84 e0       	ldi	r24, 0x04	; 4
    1b38:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1b3c:	08 95       	ret
	}
#endif
#ifdef SPIE
	else if (module == &SPIE) {
    1b3e:	80 3c       	cpi	r24, 0xC0	; 192
    1b40:	2a e0       	ldi	r18, 0x0A	; 10
    1b42:	92 07       	cpc	r25, r18
    1b44:	29 f4       	brne	.+10     	; 0x1b50 <sysclk_enable_peripheral_clock+0x1d8>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_SPI);
    1b46:	68 e0       	ldi	r22, 0x08	; 8
    1b48:	85 e0       	ldi	r24, 0x05	; 5
    1b4a:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1b4e:	08 95       	ret
	}
#endif
#ifdef SPIF
	else if (module == &SPIF) {
    1b50:	80 3c       	cpi	r24, 0xC0	; 192
    1b52:	2b e0       	ldi	r18, 0x0B	; 11
    1b54:	92 07       	cpc	r25, r18
    1b56:	29 f4       	brne	.+10     	; 0x1b62 <sysclk_enable_peripheral_clock+0x1ea>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_SPI);
    1b58:	68 e0       	ldi	r22, 0x08	; 8
    1b5a:	86 e0       	ldi	r24, 0x06	; 6
    1b5c:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1b60:	08 95       	ret
	}
#endif
#ifdef USARTC0
	else if (module == &USARTC0) {
    1b62:	80 3a       	cpi	r24, 0xA0	; 160
    1b64:	28 e0       	ldi	r18, 0x08	; 8
    1b66:	92 07       	cpc	r25, r18
    1b68:	29 f4       	brne	.+10     	; 0x1b74 <sysclk_enable_peripheral_clock+0x1fc>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_USART0);
    1b6a:	60 e1       	ldi	r22, 0x10	; 16
    1b6c:	83 e0       	ldi	r24, 0x03	; 3
    1b6e:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1b72:	08 95       	ret
	}
#endif
#ifdef USARTD0
	else if (module == &USARTD0) {
    1b74:	80 3a       	cpi	r24, 0xA0	; 160
    1b76:	29 e0       	ldi	r18, 0x09	; 9
    1b78:	92 07       	cpc	r25, r18
    1b7a:	29 f4       	brne	.+10     	; 0x1b86 <sysclk_enable_peripheral_clock+0x20e>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_USART0);
    1b7c:	60 e1       	ldi	r22, 0x10	; 16
    1b7e:	84 e0       	ldi	r24, 0x04	; 4
    1b80:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1b84:	08 95       	ret
	}
#endif
#ifdef USARTE0
	else if (module == &USARTE0) {
    1b86:	80 3a       	cpi	r24, 0xA0	; 160
    1b88:	2a e0       	ldi	r18, 0x0A	; 10
    1b8a:	92 07       	cpc	r25, r18
    1b8c:	29 f4       	brne	.+10     	; 0x1b98 <sysclk_enable_peripheral_clock+0x220>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_USART0);
    1b8e:	60 e1       	ldi	r22, 0x10	; 16
    1b90:	85 e0       	ldi	r24, 0x05	; 5
    1b92:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1b96:	08 95       	ret
	}
#endif
#ifdef USARTF0
	else if (module == &USARTF0) {
    1b98:	80 3a       	cpi	r24, 0xA0	; 160
    1b9a:	2b e0       	ldi	r18, 0x0B	; 11
    1b9c:	92 07       	cpc	r25, r18
    1b9e:	29 f4       	brne	.+10     	; 0x1baa <sysclk_enable_peripheral_clock+0x232>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_USART0);
    1ba0:	60 e1       	ldi	r22, 0x10	; 16
    1ba2:	86 e0       	ldi	r24, 0x06	; 6
    1ba4:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1ba8:	08 95       	ret
	}
#endif
#ifdef USARTC1
	else if (module == &USARTC1) {
    1baa:	80 3b       	cpi	r24, 0xB0	; 176
    1bac:	28 e0       	ldi	r18, 0x08	; 8
    1bae:	92 07       	cpc	r25, r18
    1bb0:	29 f4       	brne	.+10     	; 0x1bbc <sysclk_enable_peripheral_clock+0x244>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_USART1);
    1bb2:	60 e2       	ldi	r22, 0x20	; 32
    1bb4:	83 e0       	ldi	r24, 0x03	; 3
    1bb6:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1bba:	08 95       	ret
	}
#endif
#ifdef USARTD1
	else if (module == &USARTD1) {
    1bbc:	80 3b       	cpi	r24, 0xB0	; 176
    1bbe:	29 e0       	ldi	r18, 0x09	; 9
    1bc0:	92 07       	cpc	r25, r18
    1bc2:	29 f4       	brne	.+10     	; 0x1bce <sysclk_enable_peripheral_clock+0x256>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_USART1);
    1bc4:	60 e2       	ldi	r22, 0x20	; 32
    1bc6:	84 e0       	ldi	r24, 0x04	; 4
    1bc8:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1bcc:	08 95       	ret
	}
#endif
#ifdef USARTE1
	else if (module == &USARTE1) {
    1bce:	80 3b       	cpi	r24, 0xB0	; 176
    1bd0:	2a e0       	ldi	r18, 0x0A	; 10
    1bd2:	92 07       	cpc	r25, r18
    1bd4:	29 f4       	brne	.+10     	; 0x1be0 <sysclk_enable_peripheral_clock+0x268>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_USART1);
    1bd6:	60 e2       	ldi	r22, 0x20	; 32
    1bd8:	85 e0       	ldi	r24, 0x05	; 5
    1bda:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1bde:	08 95       	ret
	}
#endif
#ifdef USARTF1
	else if (module == &USARTF1) {
    1be0:	80 3b       	cpi	r24, 0xB0	; 176
    1be2:	2b e0       	ldi	r18, 0x0B	; 11
    1be4:	92 07       	cpc	r25, r18
    1be6:	29 f4       	brne	.+10     	; 0x1bf2 <sysclk_enable_peripheral_clock+0x27a>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_USART1);
    1be8:	60 e2       	ldi	r22, 0x20	; 32
    1bea:	86 e0       	ldi	r24, 0x06	; 6
    1bec:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1bf0:	08 95       	ret
	}
#endif
#ifdef TWIC
	else if (module == &TWIC) {
    1bf2:	80 38       	cpi	r24, 0x80	; 128
    1bf4:	24 e0       	ldi	r18, 0x04	; 4
    1bf6:	92 07       	cpc	r25, r18
    1bf8:	29 f4       	brne	.+10     	; 0x1c04 <sysclk_enable_peripheral_clock+0x28c>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TWI);
    1bfa:	60 e4       	ldi	r22, 0x40	; 64
    1bfc:	83 e0       	ldi	r24, 0x03	; 3
    1bfe:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1c02:	08 95       	ret
	}
#endif
#ifdef TWID
	else if (module == &TWID) {
    1c04:	80 39       	cpi	r24, 0x90	; 144
    1c06:	24 e0       	ldi	r18, 0x04	; 4
    1c08:	92 07       	cpc	r25, r18
    1c0a:	29 f4       	brne	.+10     	; 0x1c16 <sysclk_enable_peripheral_clock+0x29e>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TWI);
    1c0c:	60 e4       	ldi	r22, 0x40	; 64
    1c0e:	84 e0       	ldi	r24, 0x04	; 4
    1c10:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1c14:	08 95       	ret
	}
#endif
#ifdef TWIE
	else if (module == &TWIE) {
    1c16:	80 3a       	cpi	r24, 0xA0	; 160
    1c18:	24 e0       	ldi	r18, 0x04	; 4
    1c1a:	92 07       	cpc	r25, r18
    1c1c:	29 f4       	brne	.+10     	; 0x1c28 <sysclk_enable_peripheral_clock+0x2b0>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TWI);
    1c1e:	60 e4       	ldi	r22, 0x40	; 64
    1c20:	85 e0       	ldi	r24, 0x05	; 5
    1c22:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1c26:	08 95       	ret
	}
#endif
#ifdef TWIF
	else if (module == &TWIF) {
    1c28:	80 3b       	cpi	r24, 0xB0	; 176
    1c2a:	94 40       	sbci	r25, 0x04	; 4
    1c2c:	21 f4       	brne	.+8      	; 0x1c36 <sysclk_enable_peripheral_clock+0x2be>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TWI);
    1c2e:	60 e4       	ldi	r22, 0x40	; 64
    1c30:	86 e0       	ldi	r24, 0x06	; 6
    1c32:	0c 94 69 04 	jmp	0x8d2	; 0x8d2 <sysclk_enable_module>
    1c36:	08 95       	ret

00001c38 <flightStateZero>:

/*******************************************************************************************/
						/* Flight State methods */

/* PRE-LAUNCH (FS0) */
 void flightStateZero(void){
    1c38:	cf 92       	push	r12
    1c3a:	df 92       	push	r13
    1c3c:	ef 92       	push	r14
    1c3e:	ff 92       	push	r15
    1c40:	0f 93       	push	r16
    1c42:	1f 93       	push	r17
    1c44:	cf 93       	push	r28
    1c46:	df 93       	push	r29
	TCD0.CTRLA = 0b00000111; //prescalar 1024
    1c48:	87 e0       	ldi	r24, 0x07	; 7
    1c4a:	80 93 00 09 	sts	0x0900, r24	; 0x800900 <__TEXT_REGION_LENGTH__+0x700900>
	LED(62500,5);//Set LED to .5Hz, 5% DC.
    1c4e:	65 e0       	ldi	r22, 0x05	; 5
    1c50:	84 e2       	ldi	r24, 0x24	; 36
    1c52:	94 ef       	ldi	r25, 0xF4	; 244
    1c54:	0e 94 15 04 	call	0x82a	; 0x82a <LED>

	nvm_eeprom_write_byte(EP_address,0); //indicates the flight state.
    1c58:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    1c5c:	60 e0       	ldi	r22, 0x00	; 0
    1c5e:	90 e0       	ldi	r25, 0x00	; 0
    1c60:	80 d8       	rcall	.-3840   	; 0xd62 <nvm_eeprom_write_byte>
	EP_address++;
    1c62:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    1c66:	8f 5f       	subi	r24, 0xFF	; 255
    1c68:	80 93 3e 20 	sts	0x203E, r24	; 0x80203e <EP_address>

	alt = (float)getAltitude() - initAlt;; //find our altitude before we enter the while loop
    1c6c:	0e 94 76 02 	call	0x4ec	; 0x4ec <getAltitude>
    1c70:	20 91 43 20 	lds	r18, 0x2043	; 0x802043 <initAlt>
    1c74:	30 91 44 20 	lds	r19, 0x2044	; 0x802044 <initAlt+0x1>
    1c78:	40 91 45 20 	lds	r20, 0x2045	; 0x802045 <initAlt+0x2>
    1c7c:	50 91 46 20 	lds	r21, 0x2046	; 0x802046 <initAlt+0x3>
    1c80:	69 d2       	rcall	.+1234   	; 0x2154 <__subsf3>
    1c82:	60 93 3f 20 	sts	0x203F, r22	; 0x80203f <alt>
    1c86:	70 93 40 20 	sts	0x2040, r23	; 0x802040 <alt+0x1>
    1c8a:	80 93 41 20 	sts	0x2041, r24	; 0x802041 <alt+0x2>
    1c8e:	90 93 42 20 	sts	0x2042, r25	; 0x802042 <alt+0x3>
	while(alt < 35.052){ //until we reach target altitude
		alt = (float)getAltitude() - initAlt;; //find our altitude
    1c92:	0a ea       	ldi	r16, 0xAA	; 170
    1c94:	11 e1       	ldi	r17, 0x11	; 17
    1c96:	d4 e0       	ldi	r29, 0x04	; 4
    1c98:	c0 e0       	ldi	r28, 0x00	; 0

	nvm_eeprom_write_byte(EP_address,0); //indicates the flight state.
	EP_address++;

	alt = (float)getAltitude() - initAlt;; //find our altitude before we enter the while loop
	while(alt < 35.052){ //until we reach target altitude
    1c9a:	1b c0       	rjmp	.+54     	; 0x1cd2 <flightStateZero+0x9a>
		alt = (float)getAltitude() - initAlt;; //find our altitude
    1c9c:	0e 94 76 02 	call	0x4ec	; 0x4ec <getAltitude>
    1ca0:	20 91 43 20 	lds	r18, 0x2043	; 0x802043 <initAlt>
    1ca4:	30 91 44 20 	lds	r19, 0x2044	; 0x802044 <initAlt+0x1>
    1ca8:	40 91 45 20 	lds	r20, 0x2045	; 0x802045 <initAlt+0x2>
    1cac:	50 91 46 20 	lds	r21, 0x2046	; 0x802046 <initAlt+0x3>
    1cb0:	51 d2       	rcall	.+1186   	; 0x2154 <__subsf3>
    1cb2:	60 93 3f 20 	sts	0x203F, r22	; 0x80203f <alt>
    1cb6:	70 93 40 20 	sts	0x2040, r23	; 0x802040 <alt+0x1>
    1cba:	80 93 41 20 	sts	0x2041, r24	; 0x802041 <alt+0x2>
    1cbe:	90 93 42 20 	sts	0x2042, r25	; 0x802042 <alt+0x3>
    1cc2:	80 2f       	mov	r24, r16
    1cc4:	91 2f       	mov	r25, r17
    1cc6:	ad 2f       	mov	r26, r29
    1cc8:	bc 2f       	mov	r27, r28
    1cca:	01 97       	sbiw	r24, 0x01	; 1
    1ccc:	a1 09       	sbc	r26, r1
    1cce:	b1 09       	sbc	r27, r1
    1cd0:	e1 f7       	brne	.-8      	; 0x1cca <flightStateZero+0x92>

	nvm_eeprom_write_byte(EP_address,0); //indicates the flight state.
	EP_address++;

	alt = (float)getAltitude() - initAlt;; //find our altitude before we enter the while loop
	while(alt < 35.052){ //until we reach target altitude
    1cd2:	c0 90 3f 20 	lds	r12, 0x203F	; 0x80203f <alt>
    1cd6:	d0 90 40 20 	lds	r13, 0x2040	; 0x802040 <alt+0x1>
    1cda:	e0 90 41 20 	lds	r14, 0x2041	; 0x802041 <alt+0x2>
    1cde:	f0 90 42 20 	lds	r15, 0x2042	; 0x802042 <alt+0x3>
    1ce2:	2f e3       	ldi	r18, 0x3F	; 63
    1ce4:	35 e3       	ldi	r19, 0x35	; 53
    1ce6:	4c e0       	ldi	r20, 0x0C	; 12
    1ce8:	52 e4       	ldi	r21, 0x42	; 66
    1cea:	c7 01       	movw	r24, r14
    1cec:	b6 01       	movw	r22, r12
    1cee:	97 d2       	rcall	.+1326   	; 0x221e <__cmpsf2>
    1cf0:	88 23       	and	r24, r24
    1cf2:	a4 f2       	brlt	.-88     	; 0x1c9c <flightStateZero+0x64>
		alt = (float)getAltitude() - initAlt;; //find our altitude
		delay_ms(50); //delay 50ms so we don't trip over our own shoelaces.
	}
		nvm_eeprom_write_byte(EP_address,(uint8_t)(alt/0.3048)); //write the altitude (in meters) that caused us to exit flight state 0.
    1cf4:	2f eb       	ldi	r18, 0xBF	; 191
    1cf6:	3e e0       	ldi	r19, 0x0E	; 14
    1cf8:	4c e9       	ldi	r20, 0x9C	; 156
    1cfa:	5e e3       	ldi	r21, 0x3E	; 62
    1cfc:	c7 01       	movw	r24, r14
    1cfe:	b6 01       	movw	r22, r12
    1d00:	92 d2       	rcall	.+1316   	; 0x2226 <__divsf3>
    1d02:	f9 d2       	rcall	.+1522   	; 0x22f6 <__fixunssfsi>
    1d04:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    1d08:	90 e0       	ldi	r25, 0x00	; 0
    1d0a:	2b d8       	rcall	.-4010   	; 0xd62 <nvm_eeprom_write_byte>
		EP_address++;
    1d0c:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    1d10:	8f 5f       	subi	r24, 0xFF	; 255
    1d12:	80 93 3e 20 	sts	0x203E, r24	; 0x80203e <EP_address>
 }
    1d16:	df 91       	pop	r29
    1d18:	cf 91       	pop	r28
    1d1a:	1f 91       	pop	r17
    1d1c:	0f 91       	pop	r16
    1d1e:	ff 90       	pop	r15
    1d20:	ef 90       	pop	r14
    1d22:	df 90       	pop	r13
    1d24:	cf 90       	pop	r12
    1d26:	08 95       	ret

00001d28 <flightStateOne>:

 /* ASCENT (FS1) */
 void flightStateOne(void){
    1d28:	cf 92       	push	r12
    1d2a:	df 92       	push	r13
    1d2c:	ef 92       	push	r14
    1d2e:	ff 92       	push	r15
    1d30:	0f 93       	push	r16
    1d32:	1f 93       	push	r17
    1d34:	cf 93       	push	r28
    1d36:	df 93       	push	r29
	TCD0.CTRLA = 0b00000111; //prescalar 1024
    1d38:	87 e0       	ldi	r24, 0x07	; 7
    1d3a:	80 93 00 09 	sts	0x0900, r24	; 0x800900 <__TEXT_REGION_LENGTH__+0x700900>
	LED(24999,10);//Set LED to 5Hz, 10% DC.
    1d3e:	6a e0       	ldi	r22, 0x0A	; 10
    1d40:	87 ea       	ldi	r24, 0xA7	; 167
    1d42:	91 e6       	ldi	r25, 0x61	; 97
    1d44:	0e 94 15 04 	call	0x82a	; 0x82a <LED>

	nvm_eeprom_write_byte(EP_address,1); //indicates the flight state.
    1d48:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    1d4c:	61 e0       	ldi	r22, 0x01	; 1
    1d4e:	90 e0       	ldi	r25, 0x00	; 0
    1d50:	08 d8       	rcall	.-4080   	; 0xd62 <nvm_eeprom_write_byte>

	alt = (float)getAltitude() - initAlt;; //find our altitude before we enter the while loop
    1d52:	0e 94 76 02 	call	0x4ec	; 0x4ec <getAltitude>
    1d56:	20 91 43 20 	lds	r18, 0x2043	; 0x802043 <initAlt>
    1d5a:	30 91 44 20 	lds	r19, 0x2044	; 0x802044 <initAlt+0x1>
    1d5e:	40 91 45 20 	lds	r20, 0x2045	; 0x802045 <initAlt+0x2>
    1d62:	50 91 46 20 	lds	r21, 0x2046	; 0x802046 <initAlt+0x3>
    1d66:	f6 d1       	rcall	.+1004   	; 0x2154 <__subsf3>
    1d68:	6b 01       	movw	r12, r22
    1d6a:	7c 01       	movw	r14, r24
    1d6c:	60 93 3f 20 	sts	0x203F, r22	; 0x80203f <alt>
    1d70:	70 93 40 20 	sts	0x2040, r23	; 0x802040 <alt+0x1>
    1d74:	80 93 41 20 	sts	0x2041, r24	; 0x802041 <alt+0x2>
    1d78:	90 93 42 20 	sts	0x2042, r25	; 0x802042 <alt+0x3>
	while(alt < 213.36){
    1d7c:	29 e2       	ldi	r18, 0x29	; 41
    1d7e:	3c e5       	ldi	r19, 0x5C	; 92
    1d80:	45 e5       	ldi	r20, 0x55	; 85
    1d82:	53 e4       	ldi	r21, 0x43	; 67
    1d84:	4c d2       	rcall	.+1176   	; 0x221e <__cmpsf2>
    1d86:	88 23       	and	r24, r24
    1d88:	0c f0       	brlt	.+2      	; 0x1d8c <flightStateOne+0x64>
    1d8a:	3a c0       	rjmp	.+116    	; 0x1e00 <flightStateOne+0xd8>
		nvm_eeprom_write_byte(EP_address,(uint8_t)(alt/0.3048)); //save our altitude (in meters)
		EP_address++;
    1d8c:	05 e5       	ldi	r16, 0x55	; 85
    1d8e:	18 e5       	ldi	r17, 0x58	; 88
    1d90:	d4 e1       	ldi	r29, 0x14	; 20
    1d92:	c0 e0       	ldi	r28, 0x00	; 0

	nvm_eeprom_write_byte(EP_address,1); //indicates the flight state.

	alt = (float)getAltitude() - initAlt;; //find our altitude before we enter the while loop
	while(alt < 213.36){
		nvm_eeprom_write_byte(EP_address,(uint8_t)(alt/0.3048)); //save our altitude (in meters)
    1d94:	2f eb       	ldi	r18, 0xBF	; 191
    1d96:	3e e0       	ldi	r19, 0x0E	; 14
    1d98:	4c e9       	ldi	r20, 0x9C	; 156
    1d9a:	5e e3       	ldi	r21, 0x3E	; 62
    1d9c:	c7 01       	movw	r24, r14
    1d9e:	b6 01       	movw	r22, r12
    1da0:	42 d2       	rcall	.+1156   	; 0x2226 <__divsf3>
    1da2:	a9 d2       	rcall	.+1362   	; 0x22f6 <__fixunssfsi>
    1da4:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    1da8:	90 e0       	ldi	r25, 0x00	; 0
    1daa:	0e 94 b1 06 	call	0xd62	; 0xd62 <nvm_eeprom_write_byte>
		EP_address++;
    1dae:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    1db2:	8f 5f       	subi	r24, 0xFF	; 255
    1db4:	80 93 3e 20 	sts	0x203E, r24	; 0x80203e <EP_address>
    1db8:	80 2f       	mov	r24, r16
    1dba:	91 2f       	mov	r25, r17
    1dbc:	ad 2f       	mov	r26, r29
    1dbe:	bc 2f       	mov	r27, r28
    1dc0:	01 97       	sbiw	r24, 0x01	; 1
    1dc2:	a1 09       	sbc	r26, r1
    1dc4:	b1 09       	sbc	r27, r1
    1dc6:	e1 f7       	brne	.-8      	; 0x1dc0 <flightStateOne+0x98>
		if(EP_address >= 2047) //Loops back around if we run out of addresses.
			EP_address = 0;

		delay_ms(250); //Find & save data every quarter sec.			
		alt = (float)getAltitude() - initAlt;; //find our altitude
    1dc8:	0e 94 76 02 	call	0x4ec	; 0x4ec <getAltitude>
    1dcc:	20 91 43 20 	lds	r18, 0x2043	; 0x802043 <initAlt>
    1dd0:	30 91 44 20 	lds	r19, 0x2044	; 0x802044 <initAlt+0x1>
    1dd4:	40 91 45 20 	lds	r20, 0x2045	; 0x802045 <initAlt+0x2>
    1dd8:	50 91 46 20 	lds	r21, 0x2046	; 0x802046 <initAlt+0x3>
    1ddc:	bb d1       	rcall	.+886    	; 0x2154 <__subsf3>
    1dde:	6b 01       	movw	r12, r22
    1de0:	7c 01       	movw	r14, r24
    1de2:	60 93 3f 20 	sts	0x203F, r22	; 0x80203f <alt>
    1de6:	70 93 40 20 	sts	0x2040, r23	; 0x802040 <alt+0x1>
    1dea:	80 93 41 20 	sts	0x2041, r24	; 0x802041 <alt+0x2>
    1dee:	90 93 42 20 	sts	0x2042, r25	; 0x802042 <alt+0x3>
	LED(24999,10);//Set LED to 5Hz, 10% DC.

	nvm_eeprom_write_byte(EP_address,1); //indicates the flight state.

	alt = (float)getAltitude() - initAlt;; //find our altitude before we enter the while loop
	while(alt < 213.36){
    1df2:	29 e2       	ldi	r18, 0x29	; 41
    1df4:	3c e5       	ldi	r19, 0x5C	; 92
    1df6:	45 e5       	ldi	r20, 0x55	; 85
    1df8:	53 e4       	ldi	r21, 0x43	; 67
    1dfa:	11 d2       	rcall	.+1058   	; 0x221e <__cmpsf2>
    1dfc:	88 23       	and	r24, r24
    1dfe:	54 f2       	brlt	.-108    	; 0x1d94 <flightStateOne+0x6c>
			EP_address = 0;

		delay_ms(250); //Find & save data every quarter sec.			
		alt = (float)getAltitude() - initAlt;; //find our altitude
	 }
	 nvm_eeprom_write_byte(EP_address,(uint8_t)(alt/0.3048)); //save the altitude (in meters) that caused us to exit flight state 1.
    1e00:	2f eb       	ldi	r18, 0xBF	; 191
    1e02:	3e e0       	ldi	r19, 0x0E	; 14
    1e04:	4c e9       	ldi	r20, 0x9C	; 156
    1e06:	5e e3       	ldi	r21, 0x3E	; 62
    1e08:	c7 01       	movw	r24, r14
    1e0a:	b6 01       	movw	r22, r12
    1e0c:	0c d2       	rcall	.+1048   	; 0x2226 <__divsf3>
    1e0e:	73 d2       	rcall	.+1254   	; 0x22f6 <__fixunssfsi>
    1e10:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    1e14:	90 e0       	ldi	r25, 0x00	; 0
    1e16:	0e 94 b1 06 	call	0xd62	; 0xd62 <nvm_eeprom_write_byte>
	 EP_address++;
    1e1a:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    1e1e:	8f 5f       	subi	r24, 0xFF	; 255
    1e20:	80 93 3e 20 	sts	0x203E, r24	; 0x80203e <EP_address>
 }
    1e24:	df 91       	pop	r29
    1e26:	cf 91       	pop	r28
    1e28:	1f 91       	pop	r17
    1e2a:	0f 91       	pop	r16
    1e2c:	ff 90       	pop	r15
    1e2e:	ef 90       	pop	r14
    1e30:	df 90       	pop	r13
    1e32:	cf 90       	pop	r12
    1e34:	08 95       	ret

00001e36 <flightStateThree>:
	EP_address++;
 }

 /* TOUCHDOWN (FS3) */
 void flightStateThree(void){
	TCD0.CTRLA = 0b00000111; //prescalar 1024
    1e36:	87 e0       	ldi	r24, 0x07	; 7
    1e38:	80 93 00 09 	sts	0x0900, r24	; 0x800900 <__TEXT_REGION_LENGTH__+0x700900>
	LED(31250,10); //Set LED to 1Hz, 10% DC.
    1e3c:	6a e0       	ldi	r22, 0x0A	; 10
    1e3e:	82 e1       	ldi	r24, 0x12	; 18
    1e40:	9a e7       	ldi	r25, 0x7A	; 122
    1e42:	0e 94 15 04 	call	0x82a	; 0x82a <LED>
	buzzer(124);//buzzer @ period of 124
    1e46:	8c e7       	ldi	r24, 0x7C	; 124
    1e48:	90 e0       	ldi	r25, 0x00	; 0
    1e4a:	0e 94 01 04 	call	0x802	; 0x802 <buzzer>

	nvm_eeprom_write_byte(EP_address,3); //indicates the flight state.
    1e4e:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    1e52:	63 e0       	ldi	r22, 0x03	; 3
    1e54:	90 e0       	ldi	r25, 0x00	; 0
    1e56:	0e 94 b1 06 	call	0xd62	; 0xd62 <nvm_eeprom_write_byte>

	alt = (float)getAltitude() - initAlt;; //find our altitude before we enter the for loop
    1e5a:	0e 94 76 02 	call	0x4ec	; 0x4ec <getAltitude>
    1e5e:	20 91 43 20 	lds	r18, 0x2043	; 0x802043 <initAlt>
    1e62:	30 91 44 20 	lds	r19, 0x2044	; 0x802044 <initAlt+0x1>
    1e66:	40 91 45 20 	lds	r20, 0x2045	; 0x802045 <initAlt+0x2>
    1e6a:	50 91 46 20 	lds	r21, 0x2046	; 0x802046 <initAlt+0x3>
    1e6e:	72 d1       	rcall	.+740    	; 0x2154 <__subsf3>
    1e70:	60 93 3f 20 	sts	0x203F, r22	; 0x80203f <alt>
    1e74:	70 93 40 20 	sts	0x2040, r23	; 0x802040 <alt+0x1>
    1e78:	80 93 41 20 	sts	0x2041, r24	; 0x802041 <alt+0x2>
    1e7c:	90 93 42 20 	sts	0x2042, r25	; 0x802042 <alt+0x3>
    1e80:	c3 e0       	ldi	r28, 0x03	; 3
    1e82:	d0 e0       	ldi	r29, 0x00	; 0
	for(int i = 0; i < 3; i++){ //save data only three times, this flight state is kinda boring.
		nvm_eeprom_write_byte(EP_address,alt);
		EP_address++;
    1e84:	68 94       	set
    1e86:	ee 24       	eor	r14, r14
    1e88:	e7 f8       	bld	r14, 7
    1e8a:	0f 2e       	mov	r0, r31
    1e8c:	ff e0       	ldi	r31, 0x0F	; 15
    1e8e:	ff 2e       	mov	r15, r31
    1e90:	f0 2d       	mov	r31, r0
    1e92:	0e e5       	ldi	r16, 0x5E	; 94
    1e94:	1f e5       	ldi	r17, 0x5F	; 95

	nvm_eeprom_write_byte(EP_address,3); //indicates the flight state.

	alt = (float)getAltitude() - initAlt;; //find our altitude before we enter the for loop
	for(int i = 0; i < 3; i++){ //save data only three times, this flight state is kinda boring.
		nvm_eeprom_write_byte(EP_address,alt);
    1e96:	60 91 3f 20 	lds	r22, 0x203F	; 0x80203f <alt>
    1e9a:	70 91 40 20 	lds	r23, 0x2040	; 0x802040 <alt+0x1>
    1e9e:	80 91 41 20 	lds	r24, 0x2041	; 0x802041 <alt+0x2>
    1ea2:	90 91 42 20 	lds	r25, 0x2042	; 0x802042 <alt+0x3>
    1ea6:	27 d2       	rcall	.+1102   	; 0x22f6 <__fixunssfsi>
    1ea8:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    1eac:	90 e0       	ldi	r25, 0x00	; 0
    1eae:	0e 94 b1 06 	call	0xd62	; 0xd62 <nvm_eeprom_write_byte>
		EP_address++;
    1eb2:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    1eb6:	8f 5f       	subi	r24, 0xFF	; 255
    1eb8:	80 93 3e 20 	sts	0x203E, r24	; 0x80203e <EP_address>
    1ebc:	8e 2d       	mov	r24, r14
    1ebe:	9f 2d       	mov	r25, r15
    1ec0:	a0 2f       	mov	r26, r16
    1ec2:	b1 2f       	mov	r27, r17
    1ec4:	01 97       	sbiw	r24, 0x01	; 1
    1ec6:	a1 09       	sbc	r26, r1
    1ec8:	b1 09       	sbc	r27, r1
    1eca:	e1 f7       	brne	.-8      	; 0x1ec4 <flightStateThree+0x8e>

		if(EP_address >= 2047) //Loops back around if we run out of addresses.
			EP_address = 0;
		delay_ms(300000); //Save data every 5 minutes.
		alt = (float)getAltitude() - initAlt;; //find our altitude
    1ecc:	0e 94 76 02 	call	0x4ec	; 0x4ec <getAltitude>
    1ed0:	20 91 43 20 	lds	r18, 0x2043	; 0x802043 <initAlt>
    1ed4:	30 91 44 20 	lds	r19, 0x2044	; 0x802044 <initAlt+0x1>
    1ed8:	40 91 45 20 	lds	r20, 0x2045	; 0x802045 <initAlt+0x2>
    1edc:	50 91 46 20 	lds	r21, 0x2046	; 0x802046 <initAlt+0x3>
    1ee0:	39 d1       	rcall	.+626    	; 0x2154 <__subsf3>
    1ee2:	60 93 3f 20 	sts	0x203F, r22	; 0x80203f <alt>
    1ee6:	70 93 40 20 	sts	0x2040, r23	; 0x802040 <alt+0x1>
    1eea:	80 93 41 20 	sts	0x2041, r24	; 0x802041 <alt+0x2>
    1eee:	90 93 42 20 	sts	0x2042, r25	; 0x802042 <alt+0x3>
    1ef2:	21 97       	sbiw	r28, 0x01	; 1
	buzzer(124);//buzzer @ period of 124

	nvm_eeprom_write_byte(EP_address,3); //indicates the flight state.

	alt = (float)getAltitude() - initAlt;; //find our altitude before we enter the for loop
	for(int i = 0; i < 3; i++){ //save data only three times, this flight state is kinda boring.
    1ef4:	81 f6       	brne	.-96     	; 0x1e96 <flightStateThree+0x60>
		if(EP_address >= 2047) //Loops back around if we run out of addresses.
			EP_address = 0;
		delay_ms(300000); //Save data every 5 minutes.
		alt = (float)getAltitude() - initAlt;; //find our altitude
	}
	while(1);
    1ef6:	ff cf       	rjmp	.-2      	; 0x1ef6 <flightStateThree+0xc0>

00001ef8 <deployParachute>:
 }

/* EMERGENCY PARACHUTE DEPLOY */
 void deployParachute(void){
	 if(deployedParachute){
    1ef8:	80 91 47 20 	lds	r24, 0x2047	; 0x802047 <deployedParachute>
    1efc:	88 23       	and	r24, r24
    1efe:	79 f0       	breq	.+30     	; 0x1f1e <deployParachute+0x26>
		 PORTF.OUT = 0b00000001; //Turn parachute hotwire (2) on.
    1f00:	81 e0       	ldi	r24, 0x01	; 1
    1f02:	80 93 a4 06 	sts	0x06A4, r24	; 0x8006a4 <__TEXT_REGION_LENGTH__+0x7006a4>
    1f06:	8b ea       	ldi	r24, 0xAB	; 171
    1f08:	92 ec       	ldi	r25, 0xC2	; 194
    1f0a:	a2 ea       	ldi	r26, 0xA2	; 162
    1f0c:	b0 e0       	ldi	r27, 0x00	; 0
    1f0e:	01 97       	sbiw	r24, 0x01	; 1
    1f10:	a1 09       	sbc	r26, r1
    1f12:	b1 09       	sbc	r27, r1
    1f14:	e1 f7       	brne	.-8      	; 0x1f0e <deployParachute+0x16>
		 delay_ms(2000);
		 PORTF.OUT = 0b00000000; //Hotwire (2) off.
    1f16:	10 92 a4 06 	sts	0x06A4, r1	; 0x8006a4 <__TEXT_REGION_LENGTH__+0x7006a4>
		 deployedParachute = 0;
    1f1a:	10 92 47 20 	sts	0x2047, r1	; 0x802047 <deployedParachute>
    1f1e:	08 95       	ret

00001f20 <flightStateTwo>:
	 nvm_eeprom_write_byte(EP_address,(uint8_t)(alt/0.3048)); //save the altitude (in meters) that caused us to exit flight state 1.
	 EP_address++;
 }

 /* DESCENT (FS2) */
 void flightStateTwo(void){
    1f20:	cf 92       	push	r12
    1f22:	df 92       	push	r13
    1f24:	ef 92       	push	r14
    1f26:	ff 92       	push	r15
    1f28:	0f 93       	push	r16
    1f2a:	1f 93       	push	r17
    1f2c:	cf 93       	push	r28
    1f2e:	df 93       	push	r29
	TCD0.CTRLA = 0b00000110; //prescalar 256
    1f30:	86 e0       	ldi	r24, 0x06	; 6
    1f32:	80 93 00 09 	sts	0x0900, r24	; 0x800900 <__TEXT_REGION_LENGTH__+0x700900>
	LED(12499,10);//Set LED to 10Hz, 10% DC.
    1f36:	6a e0       	ldi	r22, 0x0A	; 10
    1f38:	83 ed       	ldi	r24, 0xD3	; 211
    1f3a:	90 e3       	ldi	r25, 0x30	; 48
    1f3c:	0e 94 15 04 	call	0x82a	; 0x82a <LED>
	motor(12499); //turn motor on
    1f40:	83 ed       	ldi	r24, 0xD3	; 211
    1f42:	90 e3       	ldi	r25, 0x30	; 48
    1f44:	0e 94 2b 04 	call	0x856	; 0x856 <motor>
    1f48:	8b ea       	ldi	r24, 0xAB	; 171
    1f4a:	92 ec       	ldi	r25, 0xC2	; 194
    1f4c:	a2 ea       	ldi	r26, 0xA2	; 162
    1f4e:	b0 e0       	ldi	r27, 0x00	; 0
    1f50:	01 97       	sbiw	r24, 0x01	; 1
    1f52:	a1 09       	sbc	r26, r1
    1f54:	b1 09       	sbc	r27, r1
    1f56:	e1 f7       	brne	.-8      	; 0x1f50 <flightStateTwo+0x30>

	delay_s(2); //wait a couple seconds
	PORTF.OUT = 0b00000010; //Turn balloon-line hotwire (1) on.
    1f58:	82 e0       	ldi	r24, 0x02	; 2
    1f5a:	80 93 a4 06 	sts	0x06A4, r24	; 0x8006a4 <__TEXT_REGION_LENGTH__+0x7006a4>
    1f5e:	85 e5       	ldi	r24, 0x55	; 85
    1f60:	91 e6       	ldi	r25, 0x61	; 97
    1f62:	a1 e5       	ldi	r26, 0x51	; 81
    1f64:	b0 e0       	ldi	r27, 0x00	; 0
    1f66:	01 97       	sbiw	r24, 0x01	; 1
    1f68:	a1 09       	sbc	r26, r1
    1f6a:	b1 09       	sbc	r27, r1
    1f6c:	e1 f7       	brne	.-8      	; 0x1f66 <flightStateTwo+0x46>
	delay_ms(1000); //hotwire is on 1 second
	PORTF.OUT = 0b00000000; //hotwire off.
    1f6e:	10 92 a4 06 	sts	0x06A4, r1	; 0x8006a4 <__TEXT_REGION_LENGTH__+0x7006a4>

	nvm_eeprom_write_byte(EP_address,2); //indicates the flight state.
    1f72:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    1f76:	62 e0       	ldi	r22, 0x02	; 2
    1f78:	90 e0       	ldi	r25, 0x00	; 0
    1f7a:	0e 94 b1 06 	call	0xd62	; 0xd62 <nvm_eeprom_write_byte>

	alt = (float)getAltitude() - initAlt;; //find our altitude before we enter the while loop
    1f7e:	0e 94 76 02 	call	0x4ec	; 0x4ec <getAltitude>
    1f82:	20 91 43 20 	lds	r18, 0x2043	; 0x802043 <initAlt>
    1f86:	30 91 44 20 	lds	r19, 0x2044	; 0x802044 <initAlt+0x1>
    1f8a:	40 91 45 20 	lds	r20, 0x2045	; 0x802045 <initAlt+0x2>
    1f8e:	50 91 46 20 	lds	r21, 0x2046	; 0x802046 <initAlt+0x3>
    1f92:	e0 d0       	rcall	.+448    	; 0x2154 <__subsf3>
    1f94:	6b 01       	movw	r12, r22
    1f96:	7c 01       	movw	r14, r24
    1f98:	60 93 3f 20 	sts	0x203F, r22	; 0x80203f <alt>
    1f9c:	70 93 40 20 	sts	0x2040, r23	; 0x802040 <alt+0x1>
    1fa0:	80 93 41 20 	sts	0x2041, r24	; 0x802041 <alt+0x2>
    1fa4:	90 93 42 20 	sts	0x2042, r25	; 0x802042 <alt+0x3>
	while(alt < 33.528){
    1fa8:	2c ea       	ldi	r18, 0xAC	; 172
    1faa:	3c e1       	ldi	r19, 0x1C	; 28
    1fac:	46 e0       	ldi	r20, 0x06	; 6
    1fae:	52 e4       	ldi	r21, 0x42	; 66
    1fb0:	36 d1       	rcall	.+620    	; 0x221e <__cmpsf2>
    1fb2:	88 23       	and	r24, r24
    1fb4:	0c f0       	brlt	.+2      	; 0x1fb8 <flightStateTwo+0x98>
    1fb6:	4b c0       	rjmp	.+150    	; 0x204e <flightStateTwo+0x12e>
		if (getVelocity() < -24.384) //rough estimate for what velocity we want to deploy the parachute at
			deployParachute();

		nvm_eeprom_write_byte(EP_address,(uint8_t)(alt/0.3048)); //save our altitude (in meters)
		EP_address++;
    1fb8:	05 e5       	ldi	r16, 0x55	; 85
    1fba:	18 e5       	ldi	r17, 0x58	; 88
    1fbc:	d4 e1       	ldi	r29, 0x14	; 20
    1fbe:	c0 e0       	ldi	r28, 0x00	; 0

	nvm_eeprom_write_byte(EP_address,2); //indicates the flight state.

	alt = (float)getAltitude() - initAlt;; //find our altitude before we enter the while loop
	while(alt < 33.528){
		if (getVelocity() < -24.384) //rough estimate for what velocity we want to deploy the parachute at
    1fc0:	0e 94 ac 02 	call	0x558	; 0x558 <getVelocity>
    1fc4:	2f e6       	ldi	r18, 0x6F	; 111
    1fc6:	32 e1       	ldi	r19, 0x12	; 18
    1fc8:	43 ec       	ldi	r20, 0xC3	; 195
    1fca:	51 ec       	ldi	r21, 0xC1	; 193
    1fcc:	28 d1       	rcall	.+592    	; 0x221e <__cmpsf2>
    1fce:	88 23       	and	r24, r24
    1fd0:	0c f4       	brge	.+2      	; 0x1fd4 <flightStateTwo+0xb4>
			deployParachute();
    1fd2:	92 df       	rcall	.-220    	; 0x1ef8 <deployParachute>

		nvm_eeprom_write_byte(EP_address,(uint8_t)(alt/0.3048)); //save our altitude (in meters)
    1fd4:	2f eb       	ldi	r18, 0xBF	; 191
    1fd6:	3e e0       	ldi	r19, 0x0E	; 14
    1fd8:	4c e9       	ldi	r20, 0x9C	; 156
    1fda:	5e e3       	ldi	r21, 0x3E	; 62
    1fdc:	60 91 3f 20 	lds	r22, 0x203F	; 0x80203f <alt>
    1fe0:	70 91 40 20 	lds	r23, 0x2040	; 0x802040 <alt+0x1>
    1fe4:	80 91 41 20 	lds	r24, 0x2041	; 0x802041 <alt+0x2>
    1fe8:	90 91 42 20 	lds	r25, 0x2042	; 0x802042 <alt+0x3>
    1fec:	1c d1       	rcall	.+568    	; 0x2226 <__divsf3>
    1fee:	83 d1       	rcall	.+774    	; 0x22f6 <__fixunssfsi>
    1ff0:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    1ff4:	90 e0       	ldi	r25, 0x00	; 0
    1ff6:	0e 94 b1 06 	call	0xd62	; 0xd62 <nvm_eeprom_write_byte>
		EP_address++;
    1ffa:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    1ffe:	8f 5f       	subi	r24, 0xFF	; 255
    2000:	80 93 3e 20 	sts	0x203E, r24	; 0x80203e <EP_address>
    2004:	80 2f       	mov	r24, r16
    2006:	91 2f       	mov	r25, r17
    2008:	ad 2f       	mov	r26, r29
    200a:	bc 2f       	mov	r27, r28
    200c:	01 97       	sbiw	r24, 0x01	; 1
    200e:	a1 09       	sbc	r26, r1
    2010:	b1 09       	sbc	r27, r1
    2012:	e1 f7       	brne	.-8      	; 0x200c <flightStateTwo+0xec>
		if(EP_address >= 2047) //Loops back around if we run out of addresses.
			EP_address = 0;

		delay_ms(250); //Find & save data every quarter sec.
		alt = (float)getAltitude() - initAlt;; //find our altitude
    2014:	0e 94 76 02 	call	0x4ec	; 0x4ec <getAltitude>
    2018:	20 91 43 20 	lds	r18, 0x2043	; 0x802043 <initAlt>
    201c:	30 91 44 20 	lds	r19, 0x2044	; 0x802044 <initAlt+0x1>
    2020:	40 91 45 20 	lds	r20, 0x2045	; 0x802045 <initAlt+0x2>
    2024:	50 91 46 20 	lds	r21, 0x2046	; 0x802046 <initAlt+0x3>
    2028:	95 d0       	rcall	.+298    	; 0x2154 <__subsf3>
    202a:	6b 01       	movw	r12, r22
    202c:	7c 01       	movw	r14, r24
    202e:	60 93 3f 20 	sts	0x203F, r22	; 0x80203f <alt>
    2032:	70 93 40 20 	sts	0x2040, r23	; 0x802040 <alt+0x1>
    2036:	80 93 41 20 	sts	0x2041, r24	; 0x802041 <alt+0x2>
    203a:	90 93 42 20 	sts	0x2042, r25	; 0x802042 <alt+0x3>
	PORTF.OUT = 0b00000000; //hotwire off.

	nvm_eeprom_write_byte(EP_address,2); //indicates the flight state.

	alt = (float)getAltitude() - initAlt;; //find our altitude before we enter the while loop
	while(alt < 33.528){
    203e:	2c ea       	ldi	r18, 0xAC	; 172
    2040:	3c e1       	ldi	r19, 0x1C	; 28
    2042:	46 e0       	ldi	r20, 0x06	; 6
    2044:	52 e4       	ldi	r21, 0x42	; 66
    2046:	eb d0       	rcall	.+470    	; 0x221e <__cmpsf2>
    2048:	88 23       	and	r24, r24
    204a:	0c f4       	brge	.+2      	; 0x204e <flightStateTwo+0x12e>
    204c:	b9 cf       	rjmp	.-142    	; 0x1fc0 <flightStateTwo+0xa0>

		delay_ms(250); //Find & save data every quarter sec.
		alt = (float)getAltitude() - initAlt;; //find our altitude
	}
	//turn motor off
	nvm_eeprom_write_byte(EP_address,(uint8_t)(alt/0.3048)); //save the altitude (in meters) that caused us to exit flight state 2.
    204e:	2f eb       	ldi	r18, 0xBF	; 191
    2050:	3e e0       	ldi	r19, 0x0E	; 14
    2052:	4c e9       	ldi	r20, 0x9C	; 156
    2054:	5e e3       	ldi	r21, 0x3E	; 62
    2056:	c7 01       	movw	r24, r14
    2058:	b6 01       	movw	r22, r12
    205a:	e5 d0       	rcall	.+458    	; 0x2226 <__divsf3>
    205c:	4c d1       	rcall	.+664    	; 0x22f6 <__fixunssfsi>
    205e:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    2062:	90 e0       	ldi	r25, 0x00	; 0
    2064:	0e 94 b1 06 	call	0xd62	; 0xd62 <nvm_eeprom_write_byte>
	EP_address++;
    2068:	80 91 3e 20 	lds	r24, 0x203E	; 0x80203e <EP_address>
    206c:	8f 5f       	subi	r24, 0xFF	; 255
    206e:	80 93 3e 20 	sts	0x203E, r24	; 0x80203e <EP_address>
 }
    2072:	df 91       	pop	r29
    2074:	cf 91       	pop	r28
    2076:	1f 91       	pop	r17
    2078:	0f 91       	pop	r16
    207a:	ff 90       	pop	r15
    207c:	ef 90       	pop	r14
    207e:	df 90       	pop	r13
    2080:	cf 90       	pop	r12
    2082:	08 95       	ret

00002084 <main>:

/*******************************************************************************************/
									/* Main method */
int main (void)
{
	sysclk_init(); //Initialize the system clock, 32MHz, this also turns off all peripheral clocks.
    2084:	0e 94 3f 04 	call	0x87e	; 0x87e <sysclk_init>

	/* Peripheral clock initializations*/
	sysclk_enable_peripheral_clock(&USARTC0); //UART communications
    2088:	80 ea       	ldi	r24, 0xA0	; 160
    208a:	98 e0       	ldi	r25, 0x08	; 8
    208c:	75 dc       	rcall	.-1814   	; 0x1978 <sysclk_enable_peripheral_clock>
	sysclk_enable_peripheral_clock(&ADCA); //Analog to Digital Converter
    208e:	80 e0       	ldi	r24, 0x00	; 0
    2090:	92 e0       	ldi	r25, 0x02	; 2
    2092:	72 dc       	rcall	.-1820   	; 0x1978 <sysclk_enable_peripheral_clock>
	sysclk_enable_peripheral_clock(&TCE0); //Timer Counter E
    2094:	80 e0       	ldi	r24, 0x00	; 0
    2096:	9a e0       	ldi	r25, 0x0A	; 10
    2098:	6f dc       	rcall	.-1826   	; 0x1978 <sysclk_enable_peripheral_clock>
	sysclk_enable_peripheral_clock(&TCD0); //Timer Counter D
    209a:	80 e0       	ldi	r24, 0x00	; 0
    209c:	99 e0       	ldi	r25, 0x09	; 9
    209e:	6c dc       	rcall	.-1832   	; 0x1978 <sysclk_enable_peripheral_clock>
	sysclk_enable_peripheral_clock(&TCC0); //Timer Counter C
    20a0:	80 e0       	ldi	r24, 0x00	; 0
    20a2:	98 e0       	ldi	r25, 0x08	; 8
    20a4:	69 dc       	rcall	.-1838   	; 0x1978 <sysclk_enable_peripheral_clock>
	sysclk_enable_peripheral_clock(&TCF0); //Timer Counter F
    20a6:	80 e0       	ldi	r24, 0x00	; 0
    20a8:	9b e0       	ldi	r25, 0x0B	; 11
    20aa:	66 dc       	rcall	.-1844   	; 0x1978 <sysclk_enable_peripheral_clock>
	sysclk_enable_peripheral_clock(&SPIC); //Serial Port Interface initialization.
    20ac:	80 ec       	ldi	r24, 0xC0	; 192
    20ae:	98 e0       	ldi	r25, 0x08	; 8
    20b0:	63 dc       	rcall	.-1850   	; 0x1978 <sysclk_enable_peripheral_clock>

	sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_HIRES); //Must have this line for every timer counter due to a flaw in the design of the chip.
    20b2:	64 e0       	ldi	r22, 0x04	; 4
    20b4:	85 e0       	ldi	r24, 0x05	; 5
    20b6:	0e 94 69 04 	call	0x8d2	; 0x8d2 <sysclk_enable_module>
	sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_HIRES);
    20ba:	64 e0       	ldi	r22, 0x04	; 4
    20bc:	84 e0       	ldi	r24, 0x04	; 4
    20be:	0e 94 69 04 	call	0x8d2	; 0x8d2 <sysclk_enable_module>
	sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_HIRES);
    20c2:	64 e0       	ldi	r22, 0x04	; 4
    20c4:	86 e0       	ldi	r24, 0x06	; 6
    20c6:	0e 94 69 04 	call	0x8d2	; 0x8d2 <sysclk_enable_module>
	sysclk_enable_module(SYSCLK_PORT_C,PR_SPI_bm);
    20ca:	68 e0       	ldi	r22, 0x08	; 8
    20cc:	83 e0       	ldi	r24, 0x03	; 3
    20ce:	0e 94 69 04 	call	0x8d2	; 0x8d2 <sysclk_enable_module>
	
	/* Input/Output Initializations */
	UART_Comms_Init();
    20d2:	0c dc       	rcall	.-2024   	; 0x18ec <UART_Comms_Init>
	SPI_init();
    20d4:	bb d9       	rcall	.-3210   	; 0x144c <SPI_init>
	TCD0_init();
    20d6:	ea db       	rcall	.-2092   	; 0x18ac <TCD0_init>
	TCF0_init();
    20d8:	f3 db       	rcall	.-2074   	; 0x18c0 <TCF0_init>
	ADC_init();
    20da:	fa d8       	rcall	.-3596   	; 0x12d0 <ADC_init>

	/* Variable Initializations */
	EP_address = 0;
    20dc:	10 92 3e 20 	sts	0x203E, r1	; 0x80203e <EP_address>
	alt = 0;
    20e0:	10 92 3f 20 	sts	0x203F, r1	; 0x80203f <alt>
    20e4:	10 92 40 20 	sts	0x2040, r1	; 0x802040 <alt+0x1>
    20e8:	10 92 41 20 	sts	0x2041, r1	; 0x802041 <alt+0x2>
    20ec:	10 92 42 20 	sts	0x2042, r1	; 0x802042 <alt+0x3>
	t = 0;
    20f0:	10 92 3a 20 	sts	0x203A, r1	; 0x80203a <t>
    20f4:	10 92 3b 20 	sts	0x203B, r1	; 0x80203b <t+0x1>
    20f8:	10 92 3c 20 	sts	0x203C, r1	; 0x80203c <t+0x2>
    20fc:	10 92 3d 20 	sts	0x203D, r1	; 0x80203d <t+0x3>
	initAlt = 0;
    2100:	10 92 43 20 	sts	0x2043, r1	; 0x802043 <initAlt>
    2104:	10 92 44 20 	sts	0x2044, r1	; 0x802044 <initAlt+0x1>
    2108:	10 92 45 20 	sts	0x2045, r1	; 0x802045 <initAlt+0x2>
    210c:	10 92 46 20 	sts	0x2046, r1	; 0x802046 <initAlt+0x3>
	deployedParachute = 0;
    2110:	10 92 47 20 	sts	0x2047, r1	; 0x802047 <deployedParachute>

	/* Port Initializations */
	PORTD.DIR = 0b11111111;
    2114:	8f ef       	ldi	r24, 0xFF	; 255
    2116:	80 93 60 06 	sts	0x0660, r24	; 0x800660 <__TEXT_REGION_LENGTH__+0x700660>
	PORTE.DIR = 0b11111111;
    211a:	e0 e8       	ldi	r30, 0x80	; 128
    211c:	f6 e0       	ldi	r31, 0x06	; 6
    211e:	80 83       	st	Z, r24
	PORTF.DIR = 0b00000011;
    2120:	83 e0       	ldi	r24, 0x03	; 3
    2122:	80 93 a0 06 	sts	0x06A0, r24	; 0x8006a0 <__TEXT_REGION_LENGTH__+0x7006a0>
	PORTE.OUT = 0b00000000;
    2126:	14 82       	std	Z+4, r1	; 0x04
    2128:	8a ea       	ldi	r24, 0xAA	; 170
    212a:	96 ee       	ldi	r25, 0xE6	; 230
    212c:	a6 e9       	ldi	r26, 0x96	; 150
    212e:	b1 e0       	ldi	r27, 0x01	; 1
    2130:	01 97       	sbiw	r24, 0x01	; 1
    2132:	a1 09       	sbc	r26, r1
    2134:	b1 09       	sbc	r27, r1
    2136:	e1 f7       	brne	.-8      	; 0x2130 <main+0xac>
	
	/* Delay for 5 seconds, then get our initial altitude */
	delay_s(5);
	initAlt = (float)getAltitude(); //typecast to float cause we don't want to mess stuff up.
    2138:	0e 94 76 02 	call	0x4ec	; 0x4ec <getAltitude>
    213c:	60 93 43 20 	sts	0x2043, r22	; 0x802043 <initAlt>
    2140:	70 93 44 20 	sts	0x2044, r23	; 0x802044 <initAlt+0x1>
    2144:	80 93 45 20 	sts	0x2045, r24	; 0x802045 <initAlt+0x2>
    2148:	90 93 46 20 	sts	0x2046, r25	; 0x802046 <initAlt+0x3>
		delay_ms(250);
	}
*/	

	/* FLIGHT CODE */
	flightStateZero(); //Main will cycle through flight states, each flight state completes when target altitude is reached.
    214c:	75 dd       	rcall	.-1302   	; 0x1c38 <flightStateZero>
	flightStateOne();
    214e:	ec dd       	rcall	.-1064   	; 0x1d28 <flightStateOne>
	flightStateTwo();
    2150:	e7 de       	rcall	.-562    	; 0x1f20 <flightStateTwo>
	flightStateThree(); //Flight State 3 has an infinite loop.
    2152:	71 de       	rcall	.-798    	; 0x1e36 <flightStateThree>

00002154 <__subsf3>:
    2154:	50 58       	subi	r21, 0x80	; 128

00002156 <__addsf3>:
    2156:	bb 27       	eor	r27, r27
    2158:	aa 27       	eor	r26, r26
    215a:	0e d0       	rcall	.+28     	; 0x2178 <__addsf3x>
    215c:	70 c1       	rjmp	.+736    	; 0x243e <__fp_round>
    215e:	61 d1       	rcall	.+706    	; 0x2422 <__fp_pscA>
    2160:	30 f0       	brcs	.+12     	; 0x216e <__addsf3+0x18>
    2162:	66 d1       	rcall	.+716    	; 0x2430 <__fp_pscB>
    2164:	20 f0       	brcs	.+8      	; 0x216e <__addsf3+0x18>
    2166:	31 f4       	brne	.+12     	; 0x2174 <__addsf3+0x1e>
    2168:	9f 3f       	cpi	r25, 0xFF	; 255
    216a:	11 f4       	brne	.+4      	; 0x2170 <__addsf3+0x1a>
    216c:	1e f4       	brtc	.+6      	; 0x2174 <__addsf3+0x1e>
    216e:	56 c1       	rjmp	.+684    	; 0x241c <__fp_nan>
    2170:	0e f4       	brtc	.+2      	; 0x2174 <__addsf3+0x1e>
    2172:	e0 95       	com	r30
    2174:	e7 fb       	bst	r30, 7
    2176:	4c c1       	rjmp	.+664    	; 0x2410 <__fp_inf>

00002178 <__addsf3x>:
    2178:	e9 2f       	mov	r30, r25
    217a:	72 d1       	rcall	.+740    	; 0x2460 <__fp_split3>
    217c:	80 f3       	brcs	.-32     	; 0x215e <__addsf3+0x8>
    217e:	ba 17       	cp	r27, r26
    2180:	62 07       	cpc	r22, r18
    2182:	73 07       	cpc	r23, r19
    2184:	84 07       	cpc	r24, r20
    2186:	95 07       	cpc	r25, r21
    2188:	18 f0       	brcs	.+6      	; 0x2190 <__addsf3x+0x18>
    218a:	71 f4       	brne	.+28     	; 0x21a8 <__addsf3x+0x30>
    218c:	9e f5       	brtc	.+102    	; 0x21f4 <__addsf3x+0x7c>
    218e:	8a c1       	rjmp	.+788    	; 0x24a4 <__fp_zero>
    2190:	0e f4       	brtc	.+2      	; 0x2194 <__addsf3x+0x1c>
    2192:	e0 95       	com	r30
    2194:	0b 2e       	mov	r0, r27
    2196:	ba 2f       	mov	r27, r26
    2198:	a0 2d       	mov	r26, r0
    219a:	0b 01       	movw	r0, r22
    219c:	b9 01       	movw	r22, r18
    219e:	90 01       	movw	r18, r0
    21a0:	0c 01       	movw	r0, r24
    21a2:	ca 01       	movw	r24, r20
    21a4:	a0 01       	movw	r20, r0
    21a6:	11 24       	eor	r1, r1
    21a8:	ff 27       	eor	r31, r31
    21aa:	59 1b       	sub	r21, r25
    21ac:	99 f0       	breq	.+38     	; 0x21d4 <__addsf3x+0x5c>
    21ae:	59 3f       	cpi	r21, 0xF9	; 249
    21b0:	50 f4       	brcc	.+20     	; 0x21c6 <__addsf3x+0x4e>
    21b2:	50 3e       	cpi	r21, 0xE0	; 224
    21b4:	68 f1       	brcs	.+90     	; 0x2210 <__addsf3x+0x98>
    21b6:	1a 16       	cp	r1, r26
    21b8:	f0 40       	sbci	r31, 0x00	; 0
    21ba:	a2 2f       	mov	r26, r18
    21bc:	23 2f       	mov	r18, r19
    21be:	34 2f       	mov	r19, r20
    21c0:	44 27       	eor	r20, r20
    21c2:	58 5f       	subi	r21, 0xF8	; 248
    21c4:	f3 cf       	rjmp	.-26     	; 0x21ac <__addsf3x+0x34>
    21c6:	46 95       	lsr	r20
    21c8:	37 95       	ror	r19
    21ca:	27 95       	ror	r18
    21cc:	a7 95       	ror	r26
    21ce:	f0 40       	sbci	r31, 0x00	; 0
    21d0:	53 95       	inc	r21
    21d2:	c9 f7       	brne	.-14     	; 0x21c6 <__addsf3x+0x4e>
    21d4:	7e f4       	brtc	.+30     	; 0x21f4 <__addsf3x+0x7c>
    21d6:	1f 16       	cp	r1, r31
    21d8:	ba 0b       	sbc	r27, r26
    21da:	62 0b       	sbc	r22, r18
    21dc:	73 0b       	sbc	r23, r19
    21de:	84 0b       	sbc	r24, r20
    21e0:	ba f0       	brmi	.+46     	; 0x2210 <__addsf3x+0x98>
    21e2:	91 50       	subi	r25, 0x01	; 1
    21e4:	a1 f0       	breq	.+40     	; 0x220e <__addsf3x+0x96>
    21e6:	ff 0f       	add	r31, r31
    21e8:	bb 1f       	adc	r27, r27
    21ea:	66 1f       	adc	r22, r22
    21ec:	77 1f       	adc	r23, r23
    21ee:	88 1f       	adc	r24, r24
    21f0:	c2 f7       	brpl	.-16     	; 0x21e2 <__addsf3x+0x6a>
    21f2:	0e c0       	rjmp	.+28     	; 0x2210 <__addsf3x+0x98>
    21f4:	ba 0f       	add	r27, r26
    21f6:	62 1f       	adc	r22, r18
    21f8:	73 1f       	adc	r23, r19
    21fa:	84 1f       	adc	r24, r20
    21fc:	48 f4       	brcc	.+18     	; 0x2210 <__addsf3x+0x98>
    21fe:	87 95       	ror	r24
    2200:	77 95       	ror	r23
    2202:	67 95       	ror	r22
    2204:	b7 95       	ror	r27
    2206:	f7 95       	ror	r31
    2208:	9e 3f       	cpi	r25, 0xFE	; 254
    220a:	08 f0       	brcs	.+2      	; 0x220e <__addsf3x+0x96>
    220c:	b3 cf       	rjmp	.-154    	; 0x2174 <__addsf3+0x1e>
    220e:	93 95       	inc	r25
    2210:	88 0f       	add	r24, r24
    2212:	08 f0       	brcs	.+2      	; 0x2216 <__addsf3x+0x9e>
    2214:	99 27       	eor	r25, r25
    2216:	ee 0f       	add	r30, r30
    2218:	97 95       	ror	r25
    221a:	87 95       	ror	r24
    221c:	08 95       	ret

0000221e <__cmpsf2>:
    221e:	d4 d0       	rcall	.+424    	; 0x23c8 <__fp_cmp>
    2220:	08 f4       	brcc	.+2      	; 0x2224 <__cmpsf2+0x6>
    2222:	81 e0       	ldi	r24, 0x01	; 1
    2224:	08 95       	ret

00002226 <__divsf3>:
    2226:	0c d0       	rcall	.+24     	; 0x2240 <__divsf3x>
    2228:	0a c1       	rjmp	.+532    	; 0x243e <__fp_round>
    222a:	02 d1       	rcall	.+516    	; 0x2430 <__fp_pscB>
    222c:	40 f0       	brcs	.+16     	; 0x223e <__divsf3+0x18>
    222e:	f9 d0       	rcall	.+498    	; 0x2422 <__fp_pscA>
    2230:	30 f0       	brcs	.+12     	; 0x223e <__divsf3+0x18>
    2232:	21 f4       	brne	.+8      	; 0x223c <__divsf3+0x16>
    2234:	5f 3f       	cpi	r21, 0xFF	; 255
    2236:	19 f0       	breq	.+6      	; 0x223e <__divsf3+0x18>
    2238:	eb c0       	rjmp	.+470    	; 0x2410 <__fp_inf>
    223a:	51 11       	cpse	r21, r1
    223c:	34 c1       	rjmp	.+616    	; 0x24a6 <__fp_szero>
    223e:	ee c0       	rjmp	.+476    	; 0x241c <__fp_nan>

00002240 <__divsf3x>:
    2240:	0f d1       	rcall	.+542    	; 0x2460 <__fp_split3>
    2242:	98 f3       	brcs	.-26     	; 0x222a <__divsf3+0x4>

00002244 <__divsf3_pse>:
    2244:	99 23       	and	r25, r25
    2246:	c9 f3       	breq	.-14     	; 0x223a <__divsf3+0x14>
    2248:	55 23       	and	r21, r21
    224a:	b1 f3       	breq	.-20     	; 0x2238 <__divsf3+0x12>
    224c:	95 1b       	sub	r25, r21
    224e:	55 0b       	sbc	r21, r21
    2250:	bb 27       	eor	r27, r27
    2252:	aa 27       	eor	r26, r26
    2254:	62 17       	cp	r22, r18
    2256:	73 07       	cpc	r23, r19
    2258:	84 07       	cpc	r24, r20
    225a:	38 f0       	brcs	.+14     	; 0x226a <__divsf3_pse+0x26>
    225c:	9f 5f       	subi	r25, 0xFF	; 255
    225e:	5f 4f       	sbci	r21, 0xFF	; 255
    2260:	22 0f       	add	r18, r18
    2262:	33 1f       	adc	r19, r19
    2264:	44 1f       	adc	r20, r20
    2266:	aa 1f       	adc	r26, r26
    2268:	a9 f3       	breq	.-22     	; 0x2254 <__divsf3_pse+0x10>
    226a:	33 d0       	rcall	.+102    	; 0x22d2 <__divsf3_pse+0x8e>
    226c:	0e 2e       	mov	r0, r30
    226e:	3a f0       	brmi	.+14     	; 0x227e <__divsf3_pse+0x3a>
    2270:	e0 e8       	ldi	r30, 0x80	; 128
    2272:	30 d0       	rcall	.+96     	; 0x22d4 <__divsf3_pse+0x90>
    2274:	91 50       	subi	r25, 0x01	; 1
    2276:	50 40       	sbci	r21, 0x00	; 0
    2278:	e6 95       	lsr	r30
    227a:	00 1c       	adc	r0, r0
    227c:	ca f7       	brpl	.-14     	; 0x2270 <__divsf3_pse+0x2c>
    227e:	29 d0       	rcall	.+82     	; 0x22d2 <__divsf3_pse+0x8e>
    2280:	fe 2f       	mov	r31, r30
    2282:	27 d0       	rcall	.+78     	; 0x22d2 <__divsf3_pse+0x8e>
    2284:	66 0f       	add	r22, r22
    2286:	77 1f       	adc	r23, r23
    2288:	88 1f       	adc	r24, r24
    228a:	bb 1f       	adc	r27, r27
    228c:	26 17       	cp	r18, r22
    228e:	37 07       	cpc	r19, r23
    2290:	48 07       	cpc	r20, r24
    2292:	ab 07       	cpc	r26, r27
    2294:	b0 e8       	ldi	r27, 0x80	; 128
    2296:	09 f0       	breq	.+2      	; 0x229a <__divsf3_pse+0x56>
    2298:	bb 0b       	sbc	r27, r27
    229a:	80 2d       	mov	r24, r0
    229c:	bf 01       	movw	r22, r30
    229e:	ff 27       	eor	r31, r31
    22a0:	93 58       	subi	r25, 0x83	; 131
    22a2:	5f 4f       	sbci	r21, 0xFF	; 255
    22a4:	2a f0       	brmi	.+10     	; 0x22b0 <__divsf3_pse+0x6c>
    22a6:	9e 3f       	cpi	r25, 0xFE	; 254
    22a8:	51 05       	cpc	r21, r1
    22aa:	68 f0       	brcs	.+26     	; 0x22c6 <__divsf3_pse+0x82>
    22ac:	b1 c0       	rjmp	.+354    	; 0x2410 <__fp_inf>
    22ae:	fb c0       	rjmp	.+502    	; 0x24a6 <__fp_szero>
    22b0:	5f 3f       	cpi	r21, 0xFF	; 255
    22b2:	ec f3       	brlt	.-6      	; 0x22ae <__divsf3_pse+0x6a>
    22b4:	98 3e       	cpi	r25, 0xE8	; 232
    22b6:	dc f3       	brlt	.-10     	; 0x22ae <__divsf3_pse+0x6a>
    22b8:	86 95       	lsr	r24
    22ba:	77 95       	ror	r23
    22bc:	67 95       	ror	r22
    22be:	b7 95       	ror	r27
    22c0:	f7 95       	ror	r31
    22c2:	9f 5f       	subi	r25, 0xFF	; 255
    22c4:	c9 f7       	brne	.-14     	; 0x22b8 <__divsf3_pse+0x74>
    22c6:	88 0f       	add	r24, r24
    22c8:	91 1d       	adc	r25, r1
    22ca:	96 95       	lsr	r25
    22cc:	87 95       	ror	r24
    22ce:	97 f9       	bld	r25, 7
    22d0:	08 95       	ret
    22d2:	e1 e0       	ldi	r30, 0x01	; 1
    22d4:	66 0f       	add	r22, r22
    22d6:	77 1f       	adc	r23, r23
    22d8:	88 1f       	adc	r24, r24
    22da:	bb 1f       	adc	r27, r27
    22dc:	62 17       	cp	r22, r18
    22de:	73 07       	cpc	r23, r19
    22e0:	84 07       	cpc	r24, r20
    22e2:	ba 07       	cpc	r27, r26
    22e4:	20 f0       	brcs	.+8      	; 0x22ee <__divsf3_pse+0xaa>
    22e6:	62 1b       	sub	r22, r18
    22e8:	73 0b       	sbc	r23, r19
    22ea:	84 0b       	sbc	r24, r20
    22ec:	ba 0b       	sbc	r27, r26
    22ee:	ee 1f       	adc	r30, r30
    22f0:	88 f7       	brcc	.-30     	; 0x22d4 <__divsf3_pse+0x90>
    22f2:	e0 95       	com	r30
    22f4:	08 95       	ret

000022f6 <__fixunssfsi>:
    22f6:	bc d0       	rcall	.+376    	; 0x2470 <__fp_splitA>
    22f8:	88 f0       	brcs	.+34     	; 0x231c <__fixunssfsi+0x26>
    22fa:	9f 57       	subi	r25, 0x7F	; 127
    22fc:	90 f0       	brcs	.+36     	; 0x2322 <__fixunssfsi+0x2c>
    22fe:	b9 2f       	mov	r27, r25
    2300:	99 27       	eor	r25, r25
    2302:	b7 51       	subi	r27, 0x17	; 23
    2304:	a0 f0       	brcs	.+40     	; 0x232e <__fixunssfsi+0x38>
    2306:	d1 f0       	breq	.+52     	; 0x233c <__fixunssfsi+0x46>
    2308:	66 0f       	add	r22, r22
    230a:	77 1f       	adc	r23, r23
    230c:	88 1f       	adc	r24, r24
    230e:	99 1f       	adc	r25, r25
    2310:	1a f0       	brmi	.+6      	; 0x2318 <__fixunssfsi+0x22>
    2312:	ba 95       	dec	r27
    2314:	c9 f7       	brne	.-14     	; 0x2308 <__fixunssfsi+0x12>
    2316:	12 c0       	rjmp	.+36     	; 0x233c <__fixunssfsi+0x46>
    2318:	b1 30       	cpi	r27, 0x01	; 1
    231a:	81 f0       	breq	.+32     	; 0x233c <__fixunssfsi+0x46>
    231c:	c3 d0       	rcall	.+390    	; 0x24a4 <__fp_zero>
    231e:	b1 e0       	ldi	r27, 0x01	; 1
    2320:	08 95       	ret
    2322:	c0 c0       	rjmp	.+384    	; 0x24a4 <__fp_zero>
    2324:	67 2f       	mov	r22, r23
    2326:	78 2f       	mov	r23, r24
    2328:	88 27       	eor	r24, r24
    232a:	b8 5f       	subi	r27, 0xF8	; 248
    232c:	39 f0       	breq	.+14     	; 0x233c <__fixunssfsi+0x46>
    232e:	b9 3f       	cpi	r27, 0xF9	; 249
    2330:	cc f3       	brlt	.-14     	; 0x2324 <__fixunssfsi+0x2e>
    2332:	86 95       	lsr	r24
    2334:	77 95       	ror	r23
    2336:	67 95       	ror	r22
    2338:	b3 95       	inc	r27
    233a:	d9 f7       	brne	.-10     	; 0x2332 <__fixunssfsi+0x3c>
    233c:	3e f4       	brtc	.+14     	; 0x234c <__fixunssfsi+0x56>
    233e:	90 95       	com	r25
    2340:	80 95       	com	r24
    2342:	70 95       	com	r23
    2344:	61 95       	neg	r22
    2346:	7f 4f       	sbci	r23, 0xFF	; 255
    2348:	8f 4f       	sbci	r24, 0xFF	; 255
    234a:	9f 4f       	sbci	r25, 0xFF	; 255
    234c:	08 95       	ret

0000234e <__floatunsisf>:
    234e:	e8 94       	clt
    2350:	09 c0       	rjmp	.+18     	; 0x2364 <__floatsisf+0x12>

00002352 <__floatsisf>:
    2352:	97 fb       	bst	r25, 7
    2354:	3e f4       	brtc	.+14     	; 0x2364 <__floatsisf+0x12>
    2356:	90 95       	com	r25
    2358:	80 95       	com	r24
    235a:	70 95       	com	r23
    235c:	61 95       	neg	r22
    235e:	7f 4f       	sbci	r23, 0xFF	; 255
    2360:	8f 4f       	sbci	r24, 0xFF	; 255
    2362:	9f 4f       	sbci	r25, 0xFF	; 255
    2364:	99 23       	and	r25, r25
    2366:	a9 f0       	breq	.+42     	; 0x2392 <__floatsisf+0x40>
    2368:	f9 2f       	mov	r31, r25
    236a:	96 e9       	ldi	r25, 0x96	; 150
    236c:	bb 27       	eor	r27, r27
    236e:	93 95       	inc	r25
    2370:	f6 95       	lsr	r31
    2372:	87 95       	ror	r24
    2374:	77 95       	ror	r23
    2376:	67 95       	ror	r22
    2378:	b7 95       	ror	r27
    237a:	f1 11       	cpse	r31, r1
    237c:	f8 cf       	rjmp	.-16     	; 0x236e <__floatsisf+0x1c>
    237e:	fa f4       	brpl	.+62     	; 0x23be <__floatsisf+0x6c>
    2380:	bb 0f       	add	r27, r27
    2382:	11 f4       	brne	.+4      	; 0x2388 <__floatsisf+0x36>
    2384:	60 ff       	sbrs	r22, 0
    2386:	1b c0       	rjmp	.+54     	; 0x23be <__floatsisf+0x6c>
    2388:	6f 5f       	subi	r22, 0xFF	; 255
    238a:	7f 4f       	sbci	r23, 0xFF	; 255
    238c:	8f 4f       	sbci	r24, 0xFF	; 255
    238e:	9f 4f       	sbci	r25, 0xFF	; 255
    2390:	16 c0       	rjmp	.+44     	; 0x23be <__floatsisf+0x6c>
    2392:	88 23       	and	r24, r24
    2394:	11 f0       	breq	.+4      	; 0x239a <__floatsisf+0x48>
    2396:	96 e9       	ldi	r25, 0x96	; 150
    2398:	11 c0       	rjmp	.+34     	; 0x23bc <__floatsisf+0x6a>
    239a:	77 23       	and	r23, r23
    239c:	21 f0       	breq	.+8      	; 0x23a6 <__floatsisf+0x54>
    239e:	9e e8       	ldi	r25, 0x8E	; 142
    23a0:	87 2f       	mov	r24, r23
    23a2:	76 2f       	mov	r23, r22
    23a4:	05 c0       	rjmp	.+10     	; 0x23b0 <__floatsisf+0x5e>
    23a6:	66 23       	and	r22, r22
    23a8:	71 f0       	breq	.+28     	; 0x23c6 <__floatsisf+0x74>
    23aa:	96 e8       	ldi	r25, 0x86	; 134
    23ac:	86 2f       	mov	r24, r22
    23ae:	70 e0       	ldi	r23, 0x00	; 0
    23b0:	60 e0       	ldi	r22, 0x00	; 0
    23b2:	2a f0       	brmi	.+10     	; 0x23be <__floatsisf+0x6c>
    23b4:	9a 95       	dec	r25
    23b6:	66 0f       	add	r22, r22
    23b8:	77 1f       	adc	r23, r23
    23ba:	88 1f       	adc	r24, r24
    23bc:	da f7       	brpl	.-10     	; 0x23b4 <__floatsisf+0x62>
    23be:	88 0f       	add	r24, r24
    23c0:	96 95       	lsr	r25
    23c2:	87 95       	ror	r24
    23c4:	97 f9       	bld	r25, 7
    23c6:	08 95       	ret

000023c8 <__fp_cmp>:
    23c8:	99 0f       	add	r25, r25
    23ca:	00 08       	sbc	r0, r0
    23cc:	55 0f       	add	r21, r21
    23ce:	aa 0b       	sbc	r26, r26
    23d0:	e0 e8       	ldi	r30, 0x80	; 128
    23d2:	fe ef       	ldi	r31, 0xFE	; 254
    23d4:	16 16       	cp	r1, r22
    23d6:	17 06       	cpc	r1, r23
    23d8:	e8 07       	cpc	r30, r24
    23da:	f9 07       	cpc	r31, r25
    23dc:	c0 f0       	brcs	.+48     	; 0x240e <__fp_cmp+0x46>
    23de:	12 16       	cp	r1, r18
    23e0:	13 06       	cpc	r1, r19
    23e2:	e4 07       	cpc	r30, r20
    23e4:	f5 07       	cpc	r31, r21
    23e6:	98 f0       	brcs	.+38     	; 0x240e <__fp_cmp+0x46>
    23e8:	62 1b       	sub	r22, r18
    23ea:	73 0b       	sbc	r23, r19
    23ec:	84 0b       	sbc	r24, r20
    23ee:	95 0b       	sbc	r25, r21
    23f0:	39 f4       	brne	.+14     	; 0x2400 <__fp_cmp+0x38>
    23f2:	0a 26       	eor	r0, r26
    23f4:	61 f0       	breq	.+24     	; 0x240e <__fp_cmp+0x46>
    23f6:	23 2b       	or	r18, r19
    23f8:	24 2b       	or	r18, r20
    23fa:	25 2b       	or	r18, r21
    23fc:	21 f4       	brne	.+8      	; 0x2406 <__fp_cmp+0x3e>
    23fe:	08 95       	ret
    2400:	0a 26       	eor	r0, r26
    2402:	09 f4       	brne	.+2      	; 0x2406 <__fp_cmp+0x3e>
    2404:	a1 40       	sbci	r26, 0x01	; 1
    2406:	a6 95       	lsr	r26
    2408:	8f ef       	ldi	r24, 0xFF	; 255
    240a:	81 1d       	adc	r24, r1
    240c:	81 1d       	adc	r24, r1
    240e:	08 95       	ret

00002410 <__fp_inf>:
    2410:	97 f9       	bld	r25, 7
    2412:	9f 67       	ori	r25, 0x7F	; 127
    2414:	80 e8       	ldi	r24, 0x80	; 128
    2416:	70 e0       	ldi	r23, 0x00	; 0
    2418:	60 e0       	ldi	r22, 0x00	; 0
    241a:	08 95       	ret

0000241c <__fp_nan>:
    241c:	9f ef       	ldi	r25, 0xFF	; 255
    241e:	80 ec       	ldi	r24, 0xC0	; 192
    2420:	08 95       	ret

00002422 <__fp_pscA>:
    2422:	00 24       	eor	r0, r0
    2424:	0a 94       	dec	r0
    2426:	16 16       	cp	r1, r22
    2428:	17 06       	cpc	r1, r23
    242a:	18 06       	cpc	r1, r24
    242c:	09 06       	cpc	r0, r25
    242e:	08 95       	ret

00002430 <__fp_pscB>:
    2430:	00 24       	eor	r0, r0
    2432:	0a 94       	dec	r0
    2434:	12 16       	cp	r1, r18
    2436:	13 06       	cpc	r1, r19
    2438:	14 06       	cpc	r1, r20
    243a:	05 06       	cpc	r0, r21
    243c:	08 95       	ret

0000243e <__fp_round>:
    243e:	09 2e       	mov	r0, r25
    2440:	03 94       	inc	r0
    2442:	00 0c       	add	r0, r0
    2444:	11 f4       	brne	.+4      	; 0x244a <__fp_round+0xc>
    2446:	88 23       	and	r24, r24
    2448:	52 f0       	brmi	.+20     	; 0x245e <__fp_round+0x20>
    244a:	bb 0f       	add	r27, r27
    244c:	40 f4       	brcc	.+16     	; 0x245e <__fp_round+0x20>
    244e:	bf 2b       	or	r27, r31
    2450:	11 f4       	brne	.+4      	; 0x2456 <__fp_round+0x18>
    2452:	60 ff       	sbrs	r22, 0
    2454:	04 c0       	rjmp	.+8      	; 0x245e <__fp_round+0x20>
    2456:	6f 5f       	subi	r22, 0xFF	; 255
    2458:	7f 4f       	sbci	r23, 0xFF	; 255
    245a:	8f 4f       	sbci	r24, 0xFF	; 255
    245c:	9f 4f       	sbci	r25, 0xFF	; 255
    245e:	08 95       	ret

00002460 <__fp_split3>:
    2460:	57 fd       	sbrc	r21, 7
    2462:	90 58       	subi	r25, 0x80	; 128
    2464:	44 0f       	add	r20, r20
    2466:	55 1f       	adc	r21, r21
    2468:	59 f0       	breq	.+22     	; 0x2480 <__fp_splitA+0x10>
    246a:	5f 3f       	cpi	r21, 0xFF	; 255
    246c:	71 f0       	breq	.+28     	; 0x248a <__fp_splitA+0x1a>
    246e:	47 95       	ror	r20

00002470 <__fp_splitA>:
    2470:	88 0f       	add	r24, r24
    2472:	97 fb       	bst	r25, 7
    2474:	99 1f       	adc	r25, r25
    2476:	61 f0       	breq	.+24     	; 0x2490 <__fp_splitA+0x20>
    2478:	9f 3f       	cpi	r25, 0xFF	; 255
    247a:	79 f0       	breq	.+30     	; 0x249a <__fp_splitA+0x2a>
    247c:	87 95       	ror	r24
    247e:	08 95       	ret
    2480:	12 16       	cp	r1, r18
    2482:	13 06       	cpc	r1, r19
    2484:	14 06       	cpc	r1, r20
    2486:	55 1f       	adc	r21, r21
    2488:	f2 cf       	rjmp	.-28     	; 0x246e <__fp_split3+0xe>
    248a:	46 95       	lsr	r20
    248c:	f1 df       	rcall	.-30     	; 0x2470 <__fp_splitA>
    248e:	08 c0       	rjmp	.+16     	; 0x24a0 <__fp_splitA+0x30>
    2490:	16 16       	cp	r1, r22
    2492:	17 06       	cpc	r1, r23
    2494:	18 06       	cpc	r1, r24
    2496:	99 1f       	adc	r25, r25
    2498:	f1 cf       	rjmp	.-30     	; 0x247c <__fp_splitA+0xc>
    249a:	86 95       	lsr	r24
    249c:	71 05       	cpc	r23, r1
    249e:	61 05       	cpc	r22, r1
    24a0:	08 94       	sec
    24a2:	08 95       	ret

000024a4 <__fp_zero>:
    24a4:	e8 94       	clt

000024a6 <__fp_szero>:
    24a6:	bb 27       	eor	r27, r27
    24a8:	66 27       	eor	r22, r22
    24aa:	77 27       	eor	r23, r23
    24ac:	cb 01       	movw	r24, r22
    24ae:	97 f9       	bld	r25, 7
    24b0:	08 95       	ret
    24b2:	0e f0       	brts	.+2      	; 0x24b6 <__fp_szero+0x10>
    24b4:	a6 c0       	rjmp	.+332    	; 0x2602 <__fp_mpack>
    24b6:	b2 cf       	rjmp	.-156    	; 0x241c <__fp_nan>
    24b8:	68 94       	set
    24ba:	aa cf       	rjmp	.-172    	; 0x2410 <__fp_inf>

000024bc <log>:
    24bc:	d9 df       	rcall	.-78     	; 0x2470 <__fp_splitA>
    24be:	c8 f3       	brcs	.-14     	; 0x24b2 <__fp_szero+0xc>
    24c0:	99 23       	and	r25, r25
    24c2:	d1 f3       	breq	.-12     	; 0x24b8 <__fp_szero+0x12>
    24c4:	c6 f3       	brts	.-16     	; 0x24b6 <__fp_szero+0x10>
    24c6:	df 93       	push	r29
    24c8:	cf 93       	push	r28
    24ca:	1f 93       	push	r17
    24cc:	0f 93       	push	r16
    24ce:	ff 92       	push	r15
    24d0:	c9 2f       	mov	r28, r25
    24d2:	dd 27       	eor	r29, r29
    24d4:	88 23       	and	r24, r24
    24d6:	2a f0       	brmi	.+10     	; 0x24e2 <log+0x26>
    24d8:	21 97       	sbiw	r28, 0x01	; 1
    24da:	66 0f       	add	r22, r22
    24dc:	77 1f       	adc	r23, r23
    24de:	88 1f       	adc	r24, r24
    24e0:	da f7       	brpl	.-10     	; 0x24d8 <log+0x1c>
    24e2:	20 e0       	ldi	r18, 0x00	; 0
    24e4:	30 e0       	ldi	r19, 0x00	; 0
    24e6:	40 e8       	ldi	r20, 0x80	; 128
    24e8:	5f eb       	ldi	r21, 0xBF	; 191
    24ea:	9f e3       	ldi	r25, 0x3F	; 63
    24ec:	88 39       	cpi	r24, 0x98	; 152
    24ee:	20 f0       	brcs	.+8      	; 0x24f8 <log+0x3c>
    24f0:	80 3e       	cpi	r24, 0xE0	; 224
    24f2:	30 f0       	brcs	.+12     	; 0x2500 <log+0x44>
    24f4:	21 96       	adiw	r28, 0x01	; 1
    24f6:	8f 77       	andi	r24, 0x7F	; 127
    24f8:	2e de       	rcall	.-932    	; 0x2156 <__addsf3>
    24fa:	e4 ef       	ldi	r30, 0xF4	; 244
    24fc:	f1 e0       	ldi	r31, 0x01	; 1
    24fe:	03 c0       	rjmp	.+6      	; 0x2506 <log+0x4a>
    2500:	2a de       	rcall	.-940    	; 0x2156 <__addsf3>
    2502:	e1 e2       	ldi	r30, 0x21	; 33
    2504:	f2 e0       	ldi	r31, 0x02	; 2
    2506:	8b d0       	rcall	.+278    	; 0x261e <__fp_powser>
    2508:	8b 01       	movw	r16, r22
    250a:	be 01       	movw	r22, r28
    250c:	ec 01       	movw	r28, r24
    250e:	fb 2e       	mov	r15, r27
    2510:	6f 57       	subi	r22, 0x7F	; 127
    2512:	71 09       	sbc	r23, r1
    2514:	75 95       	asr	r23
    2516:	77 1f       	adc	r23, r23
    2518:	88 0b       	sbc	r24, r24
    251a:	99 0b       	sbc	r25, r25
    251c:	1a df       	rcall	.-460    	; 0x2352 <__floatsisf>
    251e:	28 e1       	ldi	r18, 0x18	; 24
    2520:	32 e7       	ldi	r19, 0x72	; 114
    2522:	41 e3       	ldi	r20, 0x31	; 49
    2524:	5f e3       	ldi	r21, 0x3F	; 63
    2526:	16 d0       	rcall	.+44     	; 0x2554 <__mulsf3x>
    2528:	af 2d       	mov	r26, r15
    252a:	98 01       	movw	r18, r16
    252c:	ae 01       	movw	r20, r28
    252e:	ff 90       	pop	r15
    2530:	0f 91       	pop	r16
    2532:	1f 91       	pop	r17
    2534:	cf 91       	pop	r28
    2536:	df 91       	pop	r29
    2538:	1f de       	rcall	.-962    	; 0x2178 <__addsf3x>
    253a:	81 cf       	rjmp	.-254    	; 0x243e <__fp_round>

0000253c <__mulsf3>:
    253c:	0b d0       	rcall	.+22     	; 0x2554 <__mulsf3x>
    253e:	7f cf       	rjmp	.-258    	; 0x243e <__fp_round>
    2540:	70 df       	rcall	.-288    	; 0x2422 <__fp_pscA>
    2542:	28 f0       	brcs	.+10     	; 0x254e <__mulsf3+0x12>
    2544:	75 df       	rcall	.-278    	; 0x2430 <__fp_pscB>
    2546:	18 f0       	brcs	.+6      	; 0x254e <__mulsf3+0x12>
    2548:	95 23       	and	r25, r21
    254a:	09 f0       	breq	.+2      	; 0x254e <__mulsf3+0x12>
    254c:	61 cf       	rjmp	.-318    	; 0x2410 <__fp_inf>
    254e:	66 cf       	rjmp	.-308    	; 0x241c <__fp_nan>
    2550:	11 24       	eor	r1, r1
    2552:	a9 cf       	rjmp	.-174    	; 0x24a6 <__fp_szero>

00002554 <__mulsf3x>:
    2554:	85 df       	rcall	.-246    	; 0x2460 <__fp_split3>
    2556:	a0 f3       	brcs	.-24     	; 0x2540 <__mulsf3+0x4>

00002558 <__mulsf3_pse>:
    2558:	95 9f       	mul	r25, r21
    255a:	d1 f3       	breq	.-12     	; 0x2550 <__mulsf3+0x14>
    255c:	95 0f       	add	r25, r21
    255e:	50 e0       	ldi	r21, 0x00	; 0
    2560:	55 1f       	adc	r21, r21
    2562:	62 9f       	mul	r22, r18
    2564:	f0 01       	movw	r30, r0
    2566:	72 9f       	mul	r23, r18
    2568:	bb 27       	eor	r27, r27
    256a:	f0 0d       	add	r31, r0
    256c:	b1 1d       	adc	r27, r1
    256e:	63 9f       	mul	r22, r19
    2570:	aa 27       	eor	r26, r26
    2572:	f0 0d       	add	r31, r0
    2574:	b1 1d       	adc	r27, r1
    2576:	aa 1f       	adc	r26, r26
    2578:	64 9f       	mul	r22, r20
    257a:	66 27       	eor	r22, r22
    257c:	b0 0d       	add	r27, r0
    257e:	a1 1d       	adc	r26, r1
    2580:	66 1f       	adc	r22, r22
    2582:	82 9f       	mul	r24, r18
    2584:	22 27       	eor	r18, r18
    2586:	b0 0d       	add	r27, r0
    2588:	a1 1d       	adc	r26, r1
    258a:	62 1f       	adc	r22, r18
    258c:	73 9f       	mul	r23, r19
    258e:	b0 0d       	add	r27, r0
    2590:	a1 1d       	adc	r26, r1
    2592:	62 1f       	adc	r22, r18
    2594:	83 9f       	mul	r24, r19
    2596:	a0 0d       	add	r26, r0
    2598:	61 1d       	adc	r22, r1
    259a:	22 1f       	adc	r18, r18
    259c:	74 9f       	mul	r23, r20
    259e:	33 27       	eor	r19, r19
    25a0:	a0 0d       	add	r26, r0
    25a2:	61 1d       	adc	r22, r1
    25a4:	23 1f       	adc	r18, r19
    25a6:	84 9f       	mul	r24, r20
    25a8:	60 0d       	add	r22, r0
    25aa:	21 1d       	adc	r18, r1
    25ac:	82 2f       	mov	r24, r18
    25ae:	76 2f       	mov	r23, r22
    25b0:	6a 2f       	mov	r22, r26
    25b2:	11 24       	eor	r1, r1
    25b4:	9f 57       	subi	r25, 0x7F	; 127
    25b6:	50 40       	sbci	r21, 0x00	; 0
    25b8:	8a f0       	brmi	.+34     	; 0x25dc <__mulsf3_pse+0x84>
    25ba:	e1 f0       	breq	.+56     	; 0x25f4 <__mulsf3_pse+0x9c>
    25bc:	88 23       	and	r24, r24
    25be:	4a f0       	brmi	.+18     	; 0x25d2 <__mulsf3_pse+0x7a>
    25c0:	ee 0f       	add	r30, r30
    25c2:	ff 1f       	adc	r31, r31
    25c4:	bb 1f       	adc	r27, r27
    25c6:	66 1f       	adc	r22, r22
    25c8:	77 1f       	adc	r23, r23
    25ca:	88 1f       	adc	r24, r24
    25cc:	91 50       	subi	r25, 0x01	; 1
    25ce:	50 40       	sbci	r21, 0x00	; 0
    25d0:	a9 f7       	brne	.-22     	; 0x25bc <__mulsf3_pse+0x64>
    25d2:	9e 3f       	cpi	r25, 0xFE	; 254
    25d4:	51 05       	cpc	r21, r1
    25d6:	70 f0       	brcs	.+28     	; 0x25f4 <__mulsf3_pse+0x9c>
    25d8:	1b cf       	rjmp	.-458    	; 0x2410 <__fp_inf>
    25da:	65 cf       	rjmp	.-310    	; 0x24a6 <__fp_szero>
    25dc:	5f 3f       	cpi	r21, 0xFF	; 255
    25de:	ec f3       	brlt	.-6      	; 0x25da <__mulsf3_pse+0x82>
    25e0:	98 3e       	cpi	r25, 0xE8	; 232
    25e2:	dc f3       	brlt	.-10     	; 0x25da <__mulsf3_pse+0x82>
    25e4:	86 95       	lsr	r24
    25e6:	77 95       	ror	r23
    25e8:	67 95       	ror	r22
    25ea:	b7 95       	ror	r27
    25ec:	f7 95       	ror	r31
    25ee:	e7 95       	ror	r30
    25f0:	9f 5f       	subi	r25, 0xFF	; 255
    25f2:	c1 f7       	brne	.-16     	; 0x25e4 <__mulsf3_pse+0x8c>
    25f4:	fe 2b       	or	r31, r30
    25f6:	88 0f       	add	r24, r24
    25f8:	91 1d       	adc	r25, r1
    25fa:	96 95       	lsr	r25
    25fc:	87 95       	ror	r24
    25fe:	97 f9       	bld	r25, 7
    2600:	08 95       	ret

00002602 <__fp_mpack>:
    2602:	9f 3f       	cpi	r25, 0xFF	; 255
    2604:	31 f0       	breq	.+12     	; 0x2612 <__fp_mpack_finite+0xc>

00002606 <__fp_mpack_finite>:
    2606:	91 50       	subi	r25, 0x01	; 1
    2608:	20 f4       	brcc	.+8      	; 0x2612 <__fp_mpack_finite+0xc>
    260a:	87 95       	ror	r24
    260c:	77 95       	ror	r23
    260e:	67 95       	ror	r22
    2610:	b7 95       	ror	r27
    2612:	88 0f       	add	r24, r24
    2614:	91 1d       	adc	r25, r1
    2616:	96 95       	lsr	r25
    2618:	87 95       	ror	r24
    261a:	97 f9       	bld	r25, 7
    261c:	08 95       	ret

0000261e <__fp_powser>:
    261e:	df 93       	push	r29
    2620:	cf 93       	push	r28
    2622:	1f 93       	push	r17
    2624:	0f 93       	push	r16
    2626:	ff 92       	push	r15
    2628:	ef 92       	push	r14
    262a:	df 92       	push	r13
    262c:	7b 01       	movw	r14, r22
    262e:	8c 01       	movw	r16, r24
    2630:	68 94       	set
    2632:	05 c0       	rjmp	.+10     	; 0x263e <__fp_powser+0x20>
    2634:	da 2e       	mov	r13, r26
    2636:	ef 01       	movw	r28, r30
    2638:	8d df       	rcall	.-230    	; 0x2554 <__mulsf3x>
    263a:	fe 01       	movw	r30, r28
    263c:	e8 94       	clt
    263e:	a5 91       	lpm	r26, Z+
    2640:	25 91       	lpm	r18, Z+
    2642:	35 91       	lpm	r19, Z+
    2644:	45 91       	lpm	r20, Z+
    2646:	55 91       	lpm	r21, Z+
    2648:	ae f3       	brts	.-22     	; 0x2634 <__fp_powser+0x16>
    264a:	ef 01       	movw	r28, r30
    264c:	95 dd       	rcall	.-1238   	; 0x2178 <__addsf3x>
    264e:	fe 01       	movw	r30, r28
    2650:	97 01       	movw	r18, r14
    2652:	a8 01       	movw	r20, r16
    2654:	da 94       	dec	r13
    2656:	79 f7       	brne	.-34     	; 0x2636 <__fp_powser+0x18>
    2658:	df 90       	pop	r13
    265a:	ef 90       	pop	r14
    265c:	ff 90       	pop	r15
    265e:	0f 91       	pop	r16
    2660:	1f 91       	pop	r17
    2662:	cf 91       	pop	r28
    2664:	df 91       	pop	r29
    2666:	08 95       	ret

00002668 <vfprintf>:
    2668:	2f 92       	push	r2
    266a:	3f 92       	push	r3
    266c:	4f 92       	push	r4
    266e:	5f 92       	push	r5
    2670:	6f 92       	push	r6
    2672:	7f 92       	push	r7
    2674:	8f 92       	push	r8
    2676:	9f 92       	push	r9
    2678:	af 92       	push	r10
    267a:	bf 92       	push	r11
    267c:	cf 92       	push	r12
    267e:	df 92       	push	r13
    2680:	ef 92       	push	r14
    2682:	ff 92       	push	r15
    2684:	0f 93       	push	r16
    2686:	1f 93       	push	r17
    2688:	cf 93       	push	r28
    268a:	df 93       	push	r29
    268c:	cd b7       	in	r28, 0x3d	; 61
    268e:	de b7       	in	r29, 0x3e	; 62
    2690:	63 97       	sbiw	r28, 0x13	; 19
    2692:	cd bf       	out	0x3d, r28	; 61
    2694:	de bf       	out	0x3e, r29	; 62
    2696:	6c 01       	movw	r12, r24
    2698:	4b 01       	movw	r8, r22
    269a:	2a 01       	movw	r4, r20
    269c:	fc 01       	movw	r30, r24
    269e:	16 82       	std	Z+6, r1	; 0x06
    26a0:	17 82       	std	Z+7, r1	; 0x07
    26a2:	83 81       	ldd	r24, Z+3	; 0x03
    26a4:	81 ff       	sbrs	r24, 1
    26a6:	29 c3       	rjmp	.+1618   	; 0x2cfa <vfprintf+0x692>
    26a8:	ae 01       	movw	r20, r28
    26aa:	4f 5f       	subi	r20, 0xFF	; 255
    26ac:	5f 4f       	sbci	r21, 0xFF	; 255
    26ae:	3a 01       	movw	r6, r20
    26b0:	f6 01       	movw	r30, r12
    26b2:	93 81       	ldd	r25, Z+3	; 0x03
    26b4:	f4 01       	movw	r30, r8
    26b6:	93 fd       	sbrc	r25, 3
    26b8:	85 91       	lpm	r24, Z+
    26ba:	93 ff       	sbrs	r25, 3
    26bc:	81 91       	ld	r24, Z+
    26be:	4f 01       	movw	r8, r30
    26c0:	88 23       	and	r24, r24
    26c2:	09 f4       	brne	.+2      	; 0x26c6 <vfprintf+0x5e>
    26c4:	16 c3       	rjmp	.+1580   	; 0x2cf2 <vfprintf+0x68a>
    26c6:	85 32       	cpi	r24, 0x25	; 37
    26c8:	39 f4       	brne	.+14     	; 0x26d8 <vfprintf+0x70>
    26ca:	93 fd       	sbrc	r25, 3
    26cc:	85 91       	lpm	r24, Z+
    26ce:	93 ff       	sbrs	r25, 3
    26d0:	81 91       	ld	r24, Z+
    26d2:	4f 01       	movw	r8, r30
    26d4:	85 32       	cpi	r24, 0x25	; 37
    26d6:	31 f4       	brne	.+12     	; 0x26e4 <vfprintf+0x7c>
    26d8:	b6 01       	movw	r22, r12
    26da:	90 e0       	ldi	r25, 0x00	; 0
    26dc:	80 d5       	rcall	.+2816   	; 0x31de <fputc>
    26de:	52 01       	movw	r10, r4
    26e0:	25 01       	movw	r4, r10
    26e2:	e6 cf       	rjmp	.-52     	; 0x26b0 <vfprintf+0x48>
    26e4:	10 e0       	ldi	r17, 0x00	; 0
    26e6:	f1 2c       	mov	r15, r1
    26e8:	20 e0       	ldi	r18, 0x00	; 0
    26ea:	20 32       	cpi	r18, 0x20	; 32
    26ec:	a0 f4       	brcc	.+40     	; 0x2716 <vfprintf+0xae>
    26ee:	8b 32       	cpi	r24, 0x2B	; 43
    26f0:	69 f0       	breq	.+26     	; 0x270c <vfprintf+0xa4>
    26f2:	30 f4       	brcc	.+12     	; 0x2700 <vfprintf+0x98>
    26f4:	80 32       	cpi	r24, 0x20	; 32
    26f6:	59 f0       	breq	.+22     	; 0x270e <vfprintf+0xa6>
    26f8:	83 32       	cpi	r24, 0x23	; 35
    26fa:	69 f4       	brne	.+26     	; 0x2716 <vfprintf+0xae>
    26fc:	20 61       	ori	r18, 0x10	; 16
    26fe:	2c c0       	rjmp	.+88     	; 0x2758 <vfprintf+0xf0>
    2700:	8d 32       	cpi	r24, 0x2D	; 45
    2702:	39 f0       	breq	.+14     	; 0x2712 <vfprintf+0xaa>
    2704:	80 33       	cpi	r24, 0x30	; 48
    2706:	39 f4       	brne	.+14     	; 0x2716 <vfprintf+0xae>
    2708:	21 60       	ori	r18, 0x01	; 1
    270a:	26 c0       	rjmp	.+76     	; 0x2758 <vfprintf+0xf0>
    270c:	22 60       	ori	r18, 0x02	; 2
    270e:	24 60       	ori	r18, 0x04	; 4
    2710:	23 c0       	rjmp	.+70     	; 0x2758 <vfprintf+0xf0>
    2712:	28 60       	ori	r18, 0x08	; 8
    2714:	21 c0       	rjmp	.+66     	; 0x2758 <vfprintf+0xf0>
    2716:	27 fd       	sbrc	r18, 7
    2718:	27 c0       	rjmp	.+78     	; 0x2768 <vfprintf+0x100>
    271a:	30 ed       	ldi	r19, 0xD0	; 208
    271c:	38 0f       	add	r19, r24
    271e:	3a 30       	cpi	r19, 0x0A	; 10
    2720:	78 f4       	brcc	.+30     	; 0x2740 <vfprintf+0xd8>
    2722:	26 ff       	sbrs	r18, 6
    2724:	06 c0       	rjmp	.+12     	; 0x2732 <vfprintf+0xca>
    2726:	fa e0       	ldi	r31, 0x0A	; 10
    2728:	1f 9f       	mul	r17, r31
    272a:	30 0d       	add	r19, r0
    272c:	11 24       	eor	r1, r1
    272e:	13 2f       	mov	r17, r19
    2730:	13 c0       	rjmp	.+38     	; 0x2758 <vfprintf+0xf0>
    2732:	4a e0       	ldi	r20, 0x0A	; 10
    2734:	f4 9e       	mul	r15, r20
    2736:	30 0d       	add	r19, r0
    2738:	11 24       	eor	r1, r1
    273a:	f3 2e       	mov	r15, r19
    273c:	20 62       	ori	r18, 0x20	; 32
    273e:	0c c0       	rjmp	.+24     	; 0x2758 <vfprintf+0xf0>
    2740:	8e 32       	cpi	r24, 0x2E	; 46
    2742:	21 f4       	brne	.+8      	; 0x274c <vfprintf+0xe4>
    2744:	26 fd       	sbrc	r18, 6
    2746:	d5 c2       	rjmp	.+1450   	; 0x2cf2 <vfprintf+0x68a>
    2748:	20 64       	ori	r18, 0x40	; 64
    274a:	06 c0       	rjmp	.+12     	; 0x2758 <vfprintf+0xf0>
    274c:	8c 36       	cpi	r24, 0x6C	; 108
    274e:	11 f4       	brne	.+4      	; 0x2754 <vfprintf+0xec>
    2750:	20 68       	ori	r18, 0x80	; 128
    2752:	02 c0       	rjmp	.+4      	; 0x2758 <vfprintf+0xf0>
    2754:	88 36       	cpi	r24, 0x68	; 104
    2756:	41 f4       	brne	.+16     	; 0x2768 <vfprintf+0x100>
    2758:	f4 01       	movw	r30, r8
    275a:	93 fd       	sbrc	r25, 3
    275c:	85 91       	lpm	r24, Z+
    275e:	93 ff       	sbrs	r25, 3
    2760:	81 91       	ld	r24, Z+
    2762:	4f 01       	movw	r8, r30
    2764:	81 11       	cpse	r24, r1
    2766:	c1 cf       	rjmp	.-126    	; 0x26ea <vfprintf+0x82>
    2768:	9b eb       	ldi	r25, 0xBB	; 187
    276a:	98 0f       	add	r25, r24
    276c:	93 30       	cpi	r25, 0x03	; 3
    276e:	18 f4       	brcc	.+6      	; 0x2776 <vfprintf+0x10e>
    2770:	20 61       	ori	r18, 0x10	; 16
    2772:	80 5e       	subi	r24, 0xE0	; 224
    2774:	06 c0       	rjmp	.+12     	; 0x2782 <vfprintf+0x11a>
    2776:	9b e9       	ldi	r25, 0x9B	; 155
    2778:	98 0f       	add	r25, r24
    277a:	93 30       	cpi	r25, 0x03	; 3
    277c:	08 f0       	brcs	.+2      	; 0x2780 <vfprintf+0x118>
    277e:	64 c1       	rjmp	.+712    	; 0x2a48 <vfprintf+0x3e0>
    2780:	2f 7e       	andi	r18, 0xEF	; 239
    2782:	26 ff       	sbrs	r18, 6
    2784:	16 e0       	ldi	r17, 0x06	; 6
    2786:	2f 73       	andi	r18, 0x3F	; 63
    2788:	32 2e       	mov	r3, r18
    278a:	85 36       	cpi	r24, 0x65	; 101
    278c:	19 f4       	brne	.+6      	; 0x2794 <vfprintf+0x12c>
    278e:	20 64       	ori	r18, 0x40	; 64
    2790:	32 2e       	mov	r3, r18
    2792:	08 c0       	rjmp	.+16     	; 0x27a4 <vfprintf+0x13c>
    2794:	86 36       	cpi	r24, 0x66	; 102
    2796:	21 f4       	brne	.+8      	; 0x27a0 <vfprintf+0x138>
    2798:	f2 2f       	mov	r31, r18
    279a:	f0 68       	ori	r31, 0x80	; 128
    279c:	3f 2e       	mov	r3, r31
    279e:	02 c0       	rjmp	.+4      	; 0x27a4 <vfprintf+0x13c>
    27a0:	11 11       	cpse	r17, r1
    27a2:	11 50       	subi	r17, 0x01	; 1
    27a4:	37 fe       	sbrs	r3, 7
    27a6:	07 c0       	rjmp	.+14     	; 0x27b6 <vfprintf+0x14e>
    27a8:	1c 33       	cpi	r17, 0x3C	; 60
    27aa:	50 f4       	brcc	.+20     	; 0x27c0 <vfprintf+0x158>
    27ac:	ee 24       	eor	r14, r14
    27ae:	e3 94       	inc	r14
    27b0:	e1 0e       	add	r14, r17
    27b2:	27 e0       	ldi	r18, 0x07	; 7
    27b4:	0b c0       	rjmp	.+22     	; 0x27cc <vfprintf+0x164>
    27b6:	18 30       	cpi	r17, 0x08	; 8
    27b8:	38 f0       	brcs	.+14     	; 0x27c8 <vfprintf+0x160>
    27ba:	27 e0       	ldi	r18, 0x07	; 7
    27bc:	17 e0       	ldi	r17, 0x07	; 7
    27be:	05 c0       	rjmp	.+10     	; 0x27ca <vfprintf+0x162>
    27c0:	27 e0       	ldi	r18, 0x07	; 7
    27c2:	4c e3       	ldi	r20, 0x3C	; 60
    27c4:	e4 2e       	mov	r14, r20
    27c6:	02 c0       	rjmp	.+4      	; 0x27cc <vfprintf+0x164>
    27c8:	21 2f       	mov	r18, r17
    27ca:	e1 2c       	mov	r14, r1
    27cc:	52 01       	movw	r10, r4
    27ce:	44 e0       	ldi	r20, 0x04	; 4
    27d0:	a4 0e       	add	r10, r20
    27d2:	b1 1c       	adc	r11, r1
    27d4:	f2 01       	movw	r30, r4
    27d6:	60 81       	ld	r22, Z
    27d8:	71 81       	ldd	r23, Z+1	; 0x01
    27da:	82 81       	ldd	r24, Z+2	; 0x02
    27dc:	93 81       	ldd	r25, Z+3	; 0x03
    27de:	0e 2d       	mov	r16, r14
    27e0:	a3 01       	movw	r20, r6
    27e2:	c5 d3       	rcall	.+1930   	; 0x2f6e <__ftoa_engine>
    27e4:	2c 01       	movw	r4, r24
    27e6:	09 81       	ldd	r16, Y+1	; 0x01
    27e8:	00 ff       	sbrs	r16, 0
    27ea:	02 c0       	rjmp	.+4      	; 0x27f0 <vfprintf+0x188>
    27ec:	03 ff       	sbrs	r16, 3
    27ee:	07 c0       	rjmp	.+14     	; 0x27fe <vfprintf+0x196>
    27f0:	31 fc       	sbrc	r3, 1
    27f2:	08 c0       	rjmp	.+16     	; 0x2804 <vfprintf+0x19c>
    27f4:	32 fe       	sbrs	r3, 2
    27f6:	09 c0       	rjmp	.+18     	; 0x280a <vfprintf+0x1a2>
    27f8:	30 e2       	ldi	r19, 0x20	; 32
    27fa:	23 2e       	mov	r2, r19
    27fc:	07 c0       	rjmp	.+14     	; 0x280c <vfprintf+0x1a4>
    27fe:	2d e2       	ldi	r18, 0x2D	; 45
    2800:	22 2e       	mov	r2, r18
    2802:	04 c0       	rjmp	.+8      	; 0x280c <vfprintf+0x1a4>
    2804:	9b e2       	ldi	r25, 0x2B	; 43
    2806:	29 2e       	mov	r2, r25
    2808:	01 c0       	rjmp	.+2      	; 0x280c <vfprintf+0x1a4>
    280a:	21 2c       	mov	r2, r1
    280c:	80 2f       	mov	r24, r16
    280e:	8c 70       	andi	r24, 0x0C	; 12
    2810:	19 f0       	breq	.+6      	; 0x2818 <vfprintf+0x1b0>
    2812:	21 10       	cpse	r2, r1
    2814:	51 c2       	rjmp	.+1186   	; 0x2cb8 <vfprintf+0x650>
    2816:	8d c2       	rjmp	.+1306   	; 0x2d32 <vfprintf+0x6ca>
    2818:	37 fe       	sbrs	r3, 7
    281a:	0f c0       	rjmp	.+30     	; 0x283a <vfprintf+0x1d2>
    281c:	e4 0c       	add	r14, r4
    281e:	04 ff       	sbrs	r16, 4
    2820:	04 c0       	rjmp	.+8      	; 0x282a <vfprintf+0x1c2>
    2822:	8a 81       	ldd	r24, Y+2	; 0x02
    2824:	81 33       	cpi	r24, 0x31	; 49
    2826:	09 f4       	brne	.+2      	; 0x282a <vfprintf+0x1c2>
    2828:	ea 94       	dec	r14
    282a:	1e 14       	cp	r1, r14
    282c:	74 f5       	brge	.+92     	; 0x288a <vfprintf+0x222>
    282e:	f8 e0       	ldi	r31, 0x08	; 8
    2830:	fe 15       	cp	r31, r14
    2832:	78 f5       	brcc	.+94     	; 0x2892 <vfprintf+0x22a>
    2834:	88 e0       	ldi	r24, 0x08	; 8
    2836:	e8 2e       	mov	r14, r24
    2838:	2c c0       	rjmp	.+88     	; 0x2892 <vfprintf+0x22a>
    283a:	36 fc       	sbrc	r3, 6
    283c:	2a c0       	rjmp	.+84     	; 0x2892 <vfprintf+0x22a>
    283e:	81 2f       	mov	r24, r17
    2840:	90 e0       	ldi	r25, 0x00	; 0
    2842:	84 15       	cp	r24, r4
    2844:	95 05       	cpc	r25, r5
    2846:	9c f0       	brlt	.+38     	; 0x286e <vfprintf+0x206>
    2848:	2c ef       	ldi	r18, 0xFC	; 252
    284a:	42 16       	cp	r4, r18
    284c:	2f ef       	ldi	r18, 0xFF	; 255
    284e:	52 06       	cpc	r5, r18
    2850:	74 f0       	brlt	.+28     	; 0x286e <vfprintf+0x206>
    2852:	43 2d       	mov	r20, r3
    2854:	40 68       	ori	r20, 0x80	; 128
    2856:	34 2e       	mov	r3, r20
    2858:	0a c0       	rjmp	.+20     	; 0x286e <vfprintf+0x206>
    285a:	e2 e0       	ldi	r30, 0x02	; 2
    285c:	f0 e0       	ldi	r31, 0x00	; 0
    285e:	ec 0f       	add	r30, r28
    2860:	fd 1f       	adc	r31, r29
    2862:	e1 0f       	add	r30, r17
    2864:	f1 1d       	adc	r31, r1
    2866:	80 81       	ld	r24, Z
    2868:	80 33       	cpi	r24, 0x30	; 48
    286a:	19 f4       	brne	.+6      	; 0x2872 <vfprintf+0x20a>
    286c:	11 50       	subi	r17, 0x01	; 1
    286e:	11 11       	cpse	r17, r1
    2870:	f4 cf       	rjmp	.-24     	; 0x285a <vfprintf+0x1f2>
    2872:	37 fe       	sbrs	r3, 7
    2874:	0e c0       	rjmp	.+28     	; 0x2892 <vfprintf+0x22a>
    2876:	ee 24       	eor	r14, r14
    2878:	e3 94       	inc	r14
    287a:	e1 0e       	add	r14, r17
    287c:	81 2f       	mov	r24, r17
    287e:	90 e0       	ldi	r25, 0x00	; 0
    2880:	48 16       	cp	r4, r24
    2882:	59 06       	cpc	r5, r25
    2884:	2c f4       	brge	.+10     	; 0x2890 <vfprintf+0x228>
    2886:	14 19       	sub	r17, r4
    2888:	04 c0       	rjmp	.+8      	; 0x2892 <vfprintf+0x22a>
    288a:	ee 24       	eor	r14, r14
    288c:	e3 94       	inc	r14
    288e:	01 c0       	rjmp	.+2      	; 0x2892 <vfprintf+0x22a>
    2890:	10 e0       	ldi	r17, 0x00	; 0
    2892:	37 fe       	sbrs	r3, 7
    2894:	06 c0       	rjmp	.+12     	; 0x28a2 <vfprintf+0x23a>
    2896:	14 14       	cp	r1, r4
    2898:	15 04       	cpc	r1, r5
    289a:	34 f4       	brge	.+12     	; 0x28a8 <vfprintf+0x240>
    289c:	c2 01       	movw	r24, r4
    289e:	01 96       	adiw	r24, 0x01	; 1
    28a0:	05 c0       	rjmp	.+10     	; 0x28ac <vfprintf+0x244>
    28a2:	85 e0       	ldi	r24, 0x05	; 5
    28a4:	90 e0       	ldi	r25, 0x00	; 0
    28a6:	02 c0       	rjmp	.+4      	; 0x28ac <vfprintf+0x244>
    28a8:	81 e0       	ldi	r24, 0x01	; 1
    28aa:	90 e0       	ldi	r25, 0x00	; 0
    28ac:	21 10       	cpse	r2, r1
    28ae:	01 96       	adiw	r24, 0x01	; 1
    28b0:	11 23       	and	r17, r17
    28b2:	31 f0       	breq	.+12     	; 0x28c0 <vfprintf+0x258>
    28b4:	21 2f       	mov	r18, r17
    28b6:	30 e0       	ldi	r19, 0x00	; 0
    28b8:	2f 5f       	subi	r18, 0xFF	; 255
    28ba:	3f 4f       	sbci	r19, 0xFF	; 255
    28bc:	82 0f       	add	r24, r18
    28be:	93 1f       	adc	r25, r19
    28c0:	2f 2d       	mov	r18, r15
    28c2:	30 e0       	ldi	r19, 0x00	; 0
    28c4:	82 17       	cp	r24, r18
    28c6:	93 07       	cpc	r25, r19
    28c8:	14 f4       	brge	.+4      	; 0x28ce <vfprintf+0x266>
    28ca:	f8 1a       	sub	r15, r24
    28cc:	01 c0       	rjmp	.+2      	; 0x28d0 <vfprintf+0x268>
    28ce:	f1 2c       	mov	r15, r1
    28d0:	83 2d       	mov	r24, r3
    28d2:	89 70       	andi	r24, 0x09	; 9
    28d4:	41 f4       	brne	.+16     	; 0x28e6 <vfprintf+0x27e>
    28d6:	ff 20       	and	r15, r15
    28d8:	31 f0       	breq	.+12     	; 0x28e6 <vfprintf+0x27e>
    28da:	b6 01       	movw	r22, r12
    28dc:	80 e2       	ldi	r24, 0x20	; 32
    28de:	90 e0       	ldi	r25, 0x00	; 0
    28e0:	7e d4       	rcall	.+2300   	; 0x31de <fputc>
    28e2:	fa 94       	dec	r15
    28e4:	f8 cf       	rjmp	.-16     	; 0x28d6 <vfprintf+0x26e>
    28e6:	22 20       	and	r2, r2
    28e8:	21 f0       	breq	.+8      	; 0x28f2 <vfprintf+0x28a>
    28ea:	b6 01       	movw	r22, r12
    28ec:	82 2d       	mov	r24, r2
    28ee:	90 e0       	ldi	r25, 0x00	; 0
    28f0:	76 d4       	rcall	.+2284   	; 0x31de <fputc>
    28f2:	33 fc       	sbrc	r3, 3
    28f4:	08 c0       	rjmp	.+16     	; 0x2906 <vfprintf+0x29e>
    28f6:	ff 20       	and	r15, r15
    28f8:	31 f0       	breq	.+12     	; 0x2906 <vfprintf+0x29e>
    28fa:	b6 01       	movw	r22, r12
    28fc:	80 e3       	ldi	r24, 0x30	; 48
    28fe:	90 e0       	ldi	r25, 0x00	; 0
    2900:	6e d4       	rcall	.+2268   	; 0x31de <fputc>
    2902:	fa 94       	dec	r15
    2904:	f8 cf       	rjmp	.-16     	; 0x28f6 <vfprintf+0x28e>
    2906:	37 fe       	sbrs	r3, 7
    2908:	58 c0       	rjmp	.+176    	; 0x29ba <vfprintf+0x352>
    290a:	94 2d       	mov	r25, r4
    290c:	85 2d       	mov	r24, r5
    290e:	57 fe       	sbrs	r5, 7
    2910:	02 c0       	rjmp	.+4      	; 0x2916 <vfprintf+0x2ae>
    2912:	90 e0       	ldi	r25, 0x00	; 0
    2914:	80 e0       	ldi	r24, 0x00	; 0
    2916:	29 2e       	mov	r2, r25
    2918:	38 2e       	mov	r3, r24
    291a:	20 e0       	ldi	r18, 0x00	; 0
    291c:	30 e0       	ldi	r19, 0x00	; 0
    291e:	a2 01       	movw	r20, r4
    2920:	4e 19       	sub	r20, r14
    2922:	51 09       	sbc	r21, r1
    2924:	4c 87       	std	Y+12, r20	; 0x0c
    2926:	5d 87       	std	Y+13, r21	; 0x0d
    2928:	a2 01       	movw	r20, r4
    292a:	42 19       	sub	r20, r2
    292c:	53 09       	sbc	r21, r3
    292e:	4e 87       	std	Y+14, r20	; 0x0e
    2930:	5f 87       	std	Y+15, r21	; 0x0f
    2932:	61 2f       	mov	r22, r17
    2934:	70 e0       	ldi	r23, 0x00	; 0
    2936:	44 27       	eor	r20, r20
    2938:	55 27       	eor	r21, r21
    293a:	46 1b       	sub	r20, r22
    293c:	57 0b       	sbc	r21, r23
    293e:	48 8b       	std	Y+16, r20	; 0x10
    2940:	59 8b       	std	Y+17, r21	; 0x11
    2942:	5f ef       	ldi	r21, 0xFF	; 255
    2944:	25 16       	cp	r2, r21
    2946:	35 06       	cpc	r3, r21
    2948:	41 f4       	brne	.+16     	; 0x295a <vfprintf+0x2f2>
    294a:	b6 01       	movw	r22, r12
    294c:	8e e2       	ldi	r24, 0x2E	; 46
    294e:	90 e0       	ldi	r25, 0x00	; 0
    2950:	2a 8b       	std	Y+18, r18	; 0x12
    2952:	3b 8b       	std	Y+19, r19	; 0x13
    2954:	44 d4       	rcall	.+2184   	; 0x31de <fputc>
    2956:	3b 89       	ldd	r19, Y+19	; 0x13
    2958:	2a 89       	ldd	r18, Y+18	; 0x12
    295a:	42 14       	cp	r4, r2
    295c:	53 04       	cpc	r5, r3
    295e:	6c f0       	brlt	.+26     	; 0x297a <vfprintf+0x312>
    2960:	4c 85       	ldd	r20, Y+12	; 0x0c
    2962:	5d 85       	ldd	r21, Y+13	; 0x0d
    2964:	42 15       	cp	r20, r2
    2966:	53 05       	cpc	r21, r3
    2968:	44 f4       	brge	.+16     	; 0x297a <vfprintf+0x312>
    296a:	ee 85       	ldd	r30, Y+14	; 0x0e
    296c:	ff 85       	ldd	r31, Y+15	; 0x0f
    296e:	e2 0f       	add	r30, r18
    2970:	f3 1f       	adc	r31, r19
    2972:	e6 0d       	add	r30, r6
    2974:	f7 1d       	adc	r31, r7
    2976:	81 81       	ldd	r24, Z+1	; 0x01
    2978:	01 c0       	rjmp	.+2      	; 0x297c <vfprintf+0x314>
    297a:	80 e3       	ldi	r24, 0x30	; 48
    297c:	51 e0       	ldi	r21, 0x01	; 1
    297e:	25 1a       	sub	r2, r21
    2980:	31 08       	sbc	r3, r1
    2982:	2f 5f       	subi	r18, 0xFF	; 255
    2984:	3f 4f       	sbci	r19, 0xFF	; 255
    2986:	48 89       	ldd	r20, Y+16	; 0x10
    2988:	59 89       	ldd	r21, Y+17	; 0x11
    298a:	24 16       	cp	r2, r20
    298c:	35 06       	cpc	r3, r21
    298e:	44 f0       	brlt	.+16     	; 0x29a0 <vfprintf+0x338>
    2990:	b6 01       	movw	r22, r12
    2992:	90 e0       	ldi	r25, 0x00	; 0
    2994:	2a 8b       	std	Y+18, r18	; 0x12
    2996:	3b 8b       	std	Y+19, r19	; 0x13
    2998:	22 d4       	rcall	.+2116   	; 0x31de <fputc>
    299a:	2a 89       	ldd	r18, Y+18	; 0x12
    299c:	3b 89       	ldd	r19, Y+19	; 0x13
    299e:	d1 cf       	rjmp	.-94     	; 0x2942 <vfprintf+0x2da>
    29a0:	24 14       	cp	r2, r4
    29a2:	35 04       	cpc	r3, r5
    29a4:	39 f4       	brne	.+14     	; 0x29b4 <vfprintf+0x34c>
    29a6:	9a 81       	ldd	r25, Y+2	; 0x02
    29a8:	96 33       	cpi	r25, 0x36	; 54
    29aa:	18 f4       	brcc	.+6      	; 0x29b2 <vfprintf+0x34a>
    29ac:	95 33       	cpi	r25, 0x35	; 53
    29ae:	11 f4       	brne	.+4      	; 0x29b4 <vfprintf+0x34c>
    29b0:	04 ff       	sbrs	r16, 4
    29b2:	81 e3       	ldi	r24, 0x31	; 49
    29b4:	b6 01       	movw	r22, r12
    29b6:	90 e0       	ldi	r25, 0x00	; 0
    29b8:	45 c0       	rjmp	.+138    	; 0x2a44 <vfprintf+0x3dc>
    29ba:	8a 81       	ldd	r24, Y+2	; 0x02
    29bc:	81 33       	cpi	r24, 0x31	; 49
    29be:	09 f0       	breq	.+2      	; 0x29c2 <vfprintf+0x35a>
    29c0:	0f 7e       	andi	r16, 0xEF	; 239
    29c2:	b6 01       	movw	r22, r12
    29c4:	90 e0       	ldi	r25, 0x00	; 0
    29c6:	0b d4       	rcall	.+2070   	; 0x31de <fputc>
    29c8:	11 11       	cpse	r17, r1
    29ca:	05 c0       	rjmp	.+10     	; 0x29d6 <vfprintf+0x36e>
    29cc:	34 fc       	sbrc	r3, 4
    29ce:	16 c0       	rjmp	.+44     	; 0x29fc <vfprintf+0x394>
    29d0:	85 e6       	ldi	r24, 0x65	; 101
    29d2:	90 e0       	ldi	r25, 0x00	; 0
    29d4:	15 c0       	rjmp	.+42     	; 0x2a00 <vfprintf+0x398>
    29d6:	b6 01       	movw	r22, r12
    29d8:	8e e2       	ldi	r24, 0x2E	; 46
    29da:	90 e0       	ldi	r25, 0x00	; 0
    29dc:	00 d4       	rcall	.+2048   	; 0x31de <fputc>
    29de:	82 e0       	ldi	r24, 0x02	; 2
    29e0:	ee 24       	eor	r14, r14
    29e2:	e3 94       	inc	r14
    29e4:	e8 0e       	add	r14, r24
    29e6:	f3 01       	movw	r30, r6
    29e8:	e8 0f       	add	r30, r24
    29ea:	f1 1d       	adc	r31, r1
    29ec:	80 81       	ld	r24, Z
    29ee:	b6 01       	movw	r22, r12
    29f0:	90 e0       	ldi	r25, 0x00	; 0
    29f2:	f5 d3       	rcall	.+2026   	; 0x31de <fputc>
    29f4:	11 50       	subi	r17, 0x01	; 1
    29f6:	8e 2d       	mov	r24, r14
    29f8:	99 f7       	brne	.-26     	; 0x29e0 <vfprintf+0x378>
    29fa:	e8 cf       	rjmp	.-48     	; 0x29cc <vfprintf+0x364>
    29fc:	85 e4       	ldi	r24, 0x45	; 69
    29fe:	90 e0       	ldi	r25, 0x00	; 0
    2a00:	b6 01       	movw	r22, r12
    2a02:	ed d3       	rcall	.+2010   	; 0x31de <fputc>
    2a04:	57 fc       	sbrc	r5, 7
    2a06:	05 c0       	rjmp	.+10     	; 0x2a12 <vfprintf+0x3aa>
    2a08:	41 14       	cp	r4, r1
    2a0a:	51 04       	cpc	r5, r1
    2a0c:	39 f4       	brne	.+14     	; 0x2a1c <vfprintf+0x3b4>
    2a0e:	04 ff       	sbrs	r16, 4
    2a10:	05 c0       	rjmp	.+10     	; 0x2a1c <vfprintf+0x3b4>
    2a12:	51 94       	neg	r5
    2a14:	41 94       	neg	r4
    2a16:	51 08       	sbc	r5, r1
    2a18:	8d e2       	ldi	r24, 0x2D	; 45
    2a1a:	01 c0       	rjmp	.+2      	; 0x2a1e <vfprintf+0x3b6>
    2a1c:	8b e2       	ldi	r24, 0x2B	; 43
    2a1e:	b6 01       	movw	r22, r12
    2a20:	90 e0       	ldi	r25, 0x00	; 0
    2a22:	dd d3       	rcall	.+1978   	; 0x31de <fputc>
    2a24:	80 e3       	ldi	r24, 0x30	; 48
    2a26:	9a e0       	ldi	r25, 0x0A	; 10
    2a28:	49 16       	cp	r4, r25
    2a2a:	51 04       	cpc	r5, r1
    2a2c:	2c f0       	brlt	.+10     	; 0x2a38 <vfprintf+0x3d0>
    2a2e:	8f 5f       	subi	r24, 0xFF	; 255
    2a30:	5a e0       	ldi	r21, 0x0A	; 10
    2a32:	45 1a       	sub	r4, r21
    2a34:	51 08       	sbc	r5, r1
    2a36:	f7 cf       	rjmp	.-18     	; 0x2a26 <vfprintf+0x3be>
    2a38:	b6 01       	movw	r22, r12
    2a3a:	90 e0       	ldi	r25, 0x00	; 0
    2a3c:	d0 d3       	rcall	.+1952   	; 0x31de <fputc>
    2a3e:	b6 01       	movw	r22, r12
    2a40:	c2 01       	movw	r24, r4
    2a42:	c0 96       	adiw	r24, 0x30	; 48
    2a44:	cc d3       	rcall	.+1944   	; 0x31de <fputc>
    2a46:	4c c1       	rjmp	.+664    	; 0x2ce0 <vfprintf+0x678>
    2a48:	83 36       	cpi	r24, 0x63	; 99
    2a4a:	31 f0       	breq	.+12     	; 0x2a58 <vfprintf+0x3f0>
    2a4c:	83 37       	cpi	r24, 0x73	; 115
    2a4e:	79 f0       	breq	.+30     	; 0x2a6e <vfprintf+0x406>
    2a50:	83 35       	cpi	r24, 0x53	; 83
    2a52:	09 f0       	breq	.+2      	; 0x2a56 <vfprintf+0x3ee>
    2a54:	54 c0       	rjmp	.+168    	; 0x2afe <vfprintf+0x496>
    2a56:	20 c0       	rjmp	.+64     	; 0x2a98 <vfprintf+0x430>
    2a58:	52 01       	movw	r10, r4
    2a5a:	e2 e0       	ldi	r30, 0x02	; 2
    2a5c:	ae 0e       	add	r10, r30
    2a5e:	b1 1c       	adc	r11, r1
    2a60:	f2 01       	movw	r30, r4
    2a62:	80 81       	ld	r24, Z
    2a64:	89 83       	std	Y+1, r24	; 0x01
    2a66:	01 e0       	ldi	r16, 0x01	; 1
    2a68:	10 e0       	ldi	r17, 0x00	; 0
    2a6a:	23 01       	movw	r4, r6
    2a6c:	13 c0       	rjmp	.+38     	; 0x2a94 <vfprintf+0x42c>
    2a6e:	52 01       	movw	r10, r4
    2a70:	f2 e0       	ldi	r31, 0x02	; 2
    2a72:	af 0e       	add	r10, r31
    2a74:	b1 1c       	adc	r11, r1
    2a76:	f2 01       	movw	r30, r4
    2a78:	40 80       	ld	r4, Z
    2a7a:	51 80       	ldd	r5, Z+1	; 0x01
    2a7c:	26 ff       	sbrs	r18, 6
    2a7e:	03 c0       	rjmp	.+6      	; 0x2a86 <vfprintf+0x41e>
    2a80:	61 2f       	mov	r22, r17
    2a82:	70 e0       	ldi	r23, 0x00	; 0
    2a84:	02 c0       	rjmp	.+4      	; 0x2a8a <vfprintf+0x422>
    2a86:	6f ef       	ldi	r22, 0xFF	; 255
    2a88:	7f ef       	ldi	r23, 0xFF	; 255
    2a8a:	c2 01       	movw	r24, r4
    2a8c:	2a 8b       	std	Y+18, r18	; 0x12
    2a8e:	52 d3       	rcall	.+1700   	; 0x3134 <strnlen>
    2a90:	8c 01       	movw	r16, r24
    2a92:	2a 89       	ldd	r18, Y+18	; 0x12
    2a94:	2f 77       	andi	r18, 0x7F	; 127
    2a96:	14 c0       	rjmp	.+40     	; 0x2ac0 <vfprintf+0x458>
    2a98:	52 01       	movw	r10, r4
    2a9a:	f2 e0       	ldi	r31, 0x02	; 2
    2a9c:	af 0e       	add	r10, r31
    2a9e:	b1 1c       	adc	r11, r1
    2aa0:	f2 01       	movw	r30, r4
    2aa2:	40 80       	ld	r4, Z
    2aa4:	51 80       	ldd	r5, Z+1	; 0x01
    2aa6:	26 ff       	sbrs	r18, 6
    2aa8:	03 c0       	rjmp	.+6      	; 0x2ab0 <vfprintf+0x448>
    2aaa:	61 2f       	mov	r22, r17
    2aac:	70 e0       	ldi	r23, 0x00	; 0
    2aae:	02 c0       	rjmp	.+4      	; 0x2ab4 <vfprintf+0x44c>
    2ab0:	6f ef       	ldi	r22, 0xFF	; 255
    2ab2:	7f ef       	ldi	r23, 0xFF	; 255
    2ab4:	c2 01       	movw	r24, r4
    2ab6:	2a 8b       	std	Y+18, r18	; 0x12
    2ab8:	32 d3       	rcall	.+1636   	; 0x311e <strnlen_P>
    2aba:	8c 01       	movw	r16, r24
    2abc:	2a 89       	ldd	r18, Y+18	; 0x12
    2abe:	20 68       	ori	r18, 0x80	; 128
    2ac0:	32 2e       	mov	r3, r18
    2ac2:	23 fd       	sbrc	r18, 3
    2ac4:	18 c0       	rjmp	.+48     	; 0x2af6 <vfprintf+0x48e>
    2ac6:	8f 2d       	mov	r24, r15
    2ac8:	90 e0       	ldi	r25, 0x00	; 0
    2aca:	08 17       	cp	r16, r24
    2acc:	19 07       	cpc	r17, r25
    2ace:	98 f4       	brcc	.+38     	; 0x2af6 <vfprintf+0x48e>
    2ad0:	b6 01       	movw	r22, r12
    2ad2:	80 e2       	ldi	r24, 0x20	; 32
    2ad4:	90 e0       	ldi	r25, 0x00	; 0
    2ad6:	83 d3       	rcall	.+1798   	; 0x31de <fputc>
    2ad8:	fa 94       	dec	r15
    2ada:	f5 cf       	rjmp	.-22     	; 0x2ac6 <vfprintf+0x45e>
    2adc:	f2 01       	movw	r30, r4
    2ade:	37 fc       	sbrc	r3, 7
    2ae0:	85 91       	lpm	r24, Z+
    2ae2:	37 fe       	sbrs	r3, 7
    2ae4:	81 91       	ld	r24, Z+
    2ae6:	2f 01       	movw	r4, r30
    2ae8:	b6 01       	movw	r22, r12
    2aea:	90 e0       	ldi	r25, 0x00	; 0
    2aec:	78 d3       	rcall	.+1776   	; 0x31de <fputc>
    2aee:	f1 10       	cpse	r15, r1
    2af0:	fa 94       	dec	r15
    2af2:	01 50       	subi	r16, 0x01	; 1
    2af4:	11 09       	sbc	r17, r1
    2af6:	01 15       	cp	r16, r1
    2af8:	11 05       	cpc	r17, r1
    2afa:	81 f7       	brne	.-32     	; 0x2adc <vfprintf+0x474>
    2afc:	f1 c0       	rjmp	.+482    	; 0x2ce0 <vfprintf+0x678>
    2afe:	84 36       	cpi	r24, 0x64	; 100
    2b00:	11 f0       	breq	.+4      	; 0x2b06 <vfprintf+0x49e>
    2b02:	89 36       	cpi	r24, 0x69	; 105
    2b04:	51 f5       	brne	.+84     	; 0x2b5a <vfprintf+0x4f2>
    2b06:	52 01       	movw	r10, r4
    2b08:	27 ff       	sbrs	r18, 7
    2b0a:	09 c0       	rjmp	.+18     	; 0x2b1e <vfprintf+0x4b6>
    2b0c:	f4 e0       	ldi	r31, 0x04	; 4
    2b0e:	af 0e       	add	r10, r31
    2b10:	b1 1c       	adc	r11, r1
    2b12:	f2 01       	movw	r30, r4
    2b14:	60 81       	ld	r22, Z
    2b16:	71 81       	ldd	r23, Z+1	; 0x01
    2b18:	82 81       	ldd	r24, Z+2	; 0x02
    2b1a:	93 81       	ldd	r25, Z+3	; 0x03
    2b1c:	0a c0       	rjmp	.+20     	; 0x2b32 <vfprintf+0x4ca>
    2b1e:	f2 e0       	ldi	r31, 0x02	; 2
    2b20:	af 0e       	add	r10, r31
    2b22:	b1 1c       	adc	r11, r1
    2b24:	f2 01       	movw	r30, r4
    2b26:	60 81       	ld	r22, Z
    2b28:	71 81       	ldd	r23, Z+1	; 0x01
    2b2a:	07 2e       	mov	r0, r23
    2b2c:	00 0c       	add	r0, r0
    2b2e:	88 0b       	sbc	r24, r24
    2b30:	99 0b       	sbc	r25, r25
    2b32:	2f 76       	andi	r18, 0x6F	; 111
    2b34:	32 2e       	mov	r3, r18
    2b36:	97 ff       	sbrs	r25, 7
    2b38:	09 c0       	rjmp	.+18     	; 0x2b4c <vfprintf+0x4e4>
    2b3a:	90 95       	com	r25
    2b3c:	80 95       	com	r24
    2b3e:	70 95       	com	r23
    2b40:	61 95       	neg	r22
    2b42:	7f 4f       	sbci	r23, 0xFF	; 255
    2b44:	8f 4f       	sbci	r24, 0xFF	; 255
    2b46:	9f 4f       	sbci	r25, 0xFF	; 255
    2b48:	20 68       	ori	r18, 0x80	; 128
    2b4a:	32 2e       	mov	r3, r18
    2b4c:	2a e0       	ldi	r18, 0x0A	; 10
    2b4e:	30 e0       	ldi	r19, 0x00	; 0
    2b50:	a3 01       	movw	r20, r6
    2b52:	90 d3       	rcall	.+1824   	; 0x3274 <__ultoa_invert>
    2b54:	e8 2e       	mov	r14, r24
    2b56:	e6 18       	sub	r14, r6
    2b58:	3e c0       	rjmp	.+124    	; 0x2bd6 <vfprintf+0x56e>
    2b5a:	02 2f       	mov	r16, r18
    2b5c:	85 37       	cpi	r24, 0x75	; 117
    2b5e:	21 f4       	brne	.+8      	; 0x2b68 <vfprintf+0x500>
    2b60:	0f 7e       	andi	r16, 0xEF	; 239
    2b62:	2a e0       	ldi	r18, 0x0A	; 10
    2b64:	30 e0       	ldi	r19, 0x00	; 0
    2b66:	1d c0       	rjmp	.+58     	; 0x2ba2 <vfprintf+0x53a>
    2b68:	09 7f       	andi	r16, 0xF9	; 249
    2b6a:	8f 36       	cpi	r24, 0x6F	; 111
    2b6c:	91 f0       	breq	.+36     	; 0x2b92 <vfprintf+0x52a>
    2b6e:	18 f4       	brcc	.+6      	; 0x2b76 <vfprintf+0x50e>
    2b70:	88 35       	cpi	r24, 0x58	; 88
    2b72:	59 f0       	breq	.+22     	; 0x2b8a <vfprintf+0x522>
    2b74:	be c0       	rjmp	.+380    	; 0x2cf2 <vfprintf+0x68a>
    2b76:	80 37       	cpi	r24, 0x70	; 112
    2b78:	19 f0       	breq	.+6      	; 0x2b80 <vfprintf+0x518>
    2b7a:	88 37       	cpi	r24, 0x78	; 120
    2b7c:	11 f0       	breq	.+4      	; 0x2b82 <vfprintf+0x51a>
    2b7e:	b9 c0       	rjmp	.+370    	; 0x2cf2 <vfprintf+0x68a>
    2b80:	00 61       	ori	r16, 0x10	; 16
    2b82:	04 ff       	sbrs	r16, 4
    2b84:	09 c0       	rjmp	.+18     	; 0x2b98 <vfprintf+0x530>
    2b86:	04 60       	ori	r16, 0x04	; 4
    2b88:	07 c0       	rjmp	.+14     	; 0x2b98 <vfprintf+0x530>
    2b8a:	24 ff       	sbrs	r18, 4
    2b8c:	08 c0       	rjmp	.+16     	; 0x2b9e <vfprintf+0x536>
    2b8e:	06 60       	ori	r16, 0x06	; 6
    2b90:	06 c0       	rjmp	.+12     	; 0x2b9e <vfprintf+0x536>
    2b92:	28 e0       	ldi	r18, 0x08	; 8
    2b94:	30 e0       	ldi	r19, 0x00	; 0
    2b96:	05 c0       	rjmp	.+10     	; 0x2ba2 <vfprintf+0x53a>
    2b98:	20 e1       	ldi	r18, 0x10	; 16
    2b9a:	30 e0       	ldi	r19, 0x00	; 0
    2b9c:	02 c0       	rjmp	.+4      	; 0x2ba2 <vfprintf+0x53a>
    2b9e:	20 e1       	ldi	r18, 0x10	; 16
    2ba0:	32 e0       	ldi	r19, 0x02	; 2
    2ba2:	52 01       	movw	r10, r4
    2ba4:	07 ff       	sbrs	r16, 7
    2ba6:	09 c0       	rjmp	.+18     	; 0x2bba <vfprintf+0x552>
    2ba8:	f4 e0       	ldi	r31, 0x04	; 4
    2baa:	af 0e       	add	r10, r31
    2bac:	b1 1c       	adc	r11, r1
    2bae:	f2 01       	movw	r30, r4
    2bb0:	60 81       	ld	r22, Z
    2bb2:	71 81       	ldd	r23, Z+1	; 0x01
    2bb4:	82 81       	ldd	r24, Z+2	; 0x02
    2bb6:	93 81       	ldd	r25, Z+3	; 0x03
    2bb8:	08 c0       	rjmp	.+16     	; 0x2bca <vfprintf+0x562>
    2bba:	f2 e0       	ldi	r31, 0x02	; 2
    2bbc:	af 0e       	add	r10, r31
    2bbe:	b1 1c       	adc	r11, r1
    2bc0:	f2 01       	movw	r30, r4
    2bc2:	60 81       	ld	r22, Z
    2bc4:	71 81       	ldd	r23, Z+1	; 0x01
    2bc6:	80 e0       	ldi	r24, 0x00	; 0
    2bc8:	90 e0       	ldi	r25, 0x00	; 0
    2bca:	a3 01       	movw	r20, r6
    2bcc:	53 d3       	rcall	.+1702   	; 0x3274 <__ultoa_invert>
    2bce:	e8 2e       	mov	r14, r24
    2bd0:	e6 18       	sub	r14, r6
    2bd2:	0f 77       	andi	r16, 0x7F	; 127
    2bd4:	30 2e       	mov	r3, r16
    2bd6:	36 fe       	sbrs	r3, 6
    2bd8:	0b c0       	rjmp	.+22     	; 0x2bf0 <vfprintf+0x588>
    2bda:	33 2d       	mov	r19, r3
    2bdc:	3e 7f       	andi	r19, 0xFE	; 254
    2bde:	e1 16       	cp	r14, r17
    2be0:	50 f4       	brcc	.+20     	; 0x2bf6 <vfprintf+0x58e>
    2be2:	34 fe       	sbrs	r3, 4
    2be4:	0a c0       	rjmp	.+20     	; 0x2bfa <vfprintf+0x592>
    2be6:	32 fc       	sbrc	r3, 2
    2be8:	08 c0       	rjmp	.+16     	; 0x2bfa <vfprintf+0x592>
    2bea:	33 2d       	mov	r19, r3
    2bec:	3e 7e       	andi	r19, 0xEE	; 238
    2bee:	05 c0       	rjmp	.+10     	; 0x2bfa <vfprintf+0x592>
    2bf0:	0e 2d       	mov	r16, r14
    2bf2:	33 2d       	mov	r19, r3
    2bf4:	03 c0       	rjmp	.+6      	; 0x2bfc <vfprintf+0x594>
    2bf6:	0e 2d       	mov	r16, r14
    2bf8:	01 c0       	rjmp	.+2      	; 0x2bfc <vfprintf+0x594>
    2bfa:	01 2f       	mov	r16, r17
    2bfc:	34 ff       	sbrs	r19, 4
    2bfe:	0c c0       	rjmp	.+24     	; 0x2c18 <vfprintf+0x5b0>
    2c00:	fe 01       	movw	r30, r28
    2c02:	ee 0d       	add	r30, r14
    2c04:	f1 1d       	adc	r31, r1
    2c06:	80 81       	ld	r24, Z
    2c08:	80 33       	cpi	r24, 0x30	; 48
    2c0a:	11 f4       	brne	.+4      	; 0x2c10 <vfprintf+0x5a8>
    2c0c:	39 7e       	andi	r19, 0xE9	; 233
    2c0e:	08 c0       	rjmp	.+16     	; 0x2c20 <vfprintf+0x5b8>
    2c10:	32 ff       	sbrs	r19, 2
    2c12:	05 c0       	rjmp	.+10     	; 0x2c1e <vfprintf+0x5b6>
    2c14:	0e 5f       	subi	r16, 0xFE	; 254
    2c16:	04 c0       	rjmp	.+8      	; 0x2c20 <vfprintf+0x5b8>
    2c18:	83 2f       	mov	r24, r19
    2c1a:	86 78       	andi	r24, 0x86	; 134
    2c1c:	09 f0       	breq	.+2      	; 0x2c20 <vfprintf+0x5b8>
    2c1e:	0f 5f       	subi	r16, 0xFF	; 255
    2c20:	33 fd       	sbrc	r19, 3
    2c22:	12 c0       	rjmp	.+36     	; 0x2c48 <vfprintf+0x5e0>
    2c24:	30 ff       	sbrs	r19, 0
    2c26:	06 c0       	rjmp	.+12     	; 0x2c34 <vfprintf+0x5cc>
    2c28:	1e 2d       	mov	r17, r14
    2c2a:	0f 15       	cp	r16, r15
    2c2c:	18 f4       	brcc	.+6      	; 0x2c34 <vfprintf+0x5cc>
    2c2e:	1f 0d       	add	r17, r15
    2c30:	10 1b       	sub	r17, r16
    2c32:	0f 2d       	mov	r16, r15
    2c34:	0f 15       	cp	r16, r15
    2c36:	60 f4       	brcc	.+24     	; 0x2c50 <vfprintf+0x5e8>
    2c38:	b6 01       	movw	r22, r12
    2c3a:	80 e2       	ldi	r24, 0x20	; 32
    2c3c:	90 e0       	ldi	r25, 0x00	; 0
    2c3e:	3b 8b       	std	Y+19, r19	; 0x13
    2c40:	ce d2       	rcall	.+1436   	; 0x31de <fputc>
    2c42:	0f 5f       	subi	r16, 0xFF	; 255
    2c44:	3b 89       	ldd	r19, Y+19	; 0x13
    2c46:	f6 cf       	rjmp	.-20     	; 0x2c34 <vfprintf+0x5cc>
    2c48:	0f 15       	cp	r16, r15
    2c4a:	10 f4       	brcc	.+4      	; 0x2c50 <vfprintf+0x5e8>
    2c4c:	f0 1a       	sub	r15, r16
    2c4e:	01 c0       	rjmp	.+2      	; 0x2c52 <vfprintf+0x5ea>
    2c50:	f1 2c       	mov	r15, r1
    2c52:	34 ff       	sbrs	r19, 4
    2c54:	11 c0       	rjmp	.+34     	; 0x2c78 <vfprintf+0x610>
    2c56:	b6 01       	movw	r22, r12
    2c58:	80 e3       	ldi	r24, 0x30	; 48
    2c5a:	90 e0       	ldi	r25, 0x00	; 0
    2c5c:	3b 8b       	std	Y+19, r19	; 0x13
    2c5e:	bf d2       	rcall	.+1406   	; 0x31de <fputc>
    2c60:	3b 89       	ldd	r19, Y+19	; 0x13
    2c62:	32 ff       	sbrs	r19, 2
    2c64:	16 c0       	rjmp	.+44     	; 0x2c92 <vfprintf+0x62a>
    2c66:	31 fd       	sbrc	r19, 1
    2c68:	03 c0       	rjmp	.+6      	; 0x2c70 <vfprintf+0x608>
    2c6a:	88 e7       	ldi	r24, 0x78	; 120
    2c6c:	90 e0       	ldi	r25, 0x00	; 0
    2c6e:	02 c0       	rjmp	.+4      	; 0x2c74 <vfprintf+0x60c>
    2c70:	88 e5       	ldi	r24, 0x58	; 88
    2c72:	90 e0       	ldi	r25, 0x00	; 0
    2c74:	b6 01       	movw	r22, r12
    2c76:	0c c0       	rjmp	.+24     	; 0x2c90 <vfprintf+0x628>
    2c78:	83 2f       	mov	r24, r19
    2c7a:	86 78       	andi	r24, 0x86	; 134
    2c7c:	51 f0       	breq	.+20     	; 0x2c92 <vfprintf+0x62a>
    2c7e:	31 ff       	sbrs	r19, 1
    2c80:	02 c0       	rjmp	.+4      	; 0x2c86 <vfprintf+0x61e>
    2c82:	8b e2       	ldi	r24, 0x2B	; 43
    2c84:	01 c0       	rjmp	.+2      	; 0x2c88 <vfprintf+0x620>
    2c86:	80 e2       	ldi	r24, 0x20	; 32
    2c88:	37 fd       	sbrc	r19, 7
    2c8a:	8d e2       	ldi	r24, 0x2D	; 45
    2c8c:	b6 01       	movw	r22, r12
    2c8e:	90 e0       	ldi	r25, 0x00	; 0
    2c90:	a6 d2       	rcall	.+1356   	; 0x31de <fputc>
    2c92:	e1 16       	cp	r14, r17
    2c94:	30 f4       	brcc	.+12     	; 0x2ca2 <vfprintf+0x63a>
    2c96:	b6 01       	movw	r22, r12
    2c98:	80 e3       	ldi	r24, 0x30	; 48
    2c9a:	90 e0       	ldi	r25, 0x00	; 0
    2c9c:	a0 d2       	rcall	.+1344   	; 0x31de <fputc>
    2c9e:	11 50       	subi	r17, 0x01	; 1
    2ca0:	f8 cf       	rjmp	.-16     	; 0x2c92 <vfprintf+0x62a>
    2ca2:	ea 94       	dec	r14
    2ca4:	f3 01       	movw	r30, r6
    2ca6:	ee 0d       	add	r30, r14
    2ca8:	f1 1d       	adc	r31, r1
    2caa:	80 81       	ld	r24, Z
    2cac:	b6 01       	movw	r22, r12
    2cae:	90 e0       	ldi	r25, 0x00	; 0
    2cb0:	96 d2       	rcall	.+1324   	; 0x31de <fputc>
    2cb2:	e1 10       	cpse	r14, r1
    2cb4:	f6 cf       	rjmp	.-20     	; 0x2ca2 <vfprintf+0x63a>
    2cb6:	14 c0       	rjmp	.+40     	; 0x2ce0 <vfprintf+0x678>
    2cb8:	f4 e0       	ldi	r31, 0x04	; 4
    2cba:	ff 15       	cp	r31, r15
    2cbc:	48 f5       	brcc	.+82     	; 0x2d10 <vfprintf+0x6a8>
    2cbe:	84 e0       	ldi	r24, 0x04	; 4
    2cc0:	f8 1a       	sub	r15, r24
    2cc2:	33 fe       	sbrs	r3, 3
    2cc4:	1d c0       	rjmp	.+58     	; 0x2d00 <vfprintf+0x698>
    2cc6:	21 10       	cpse	r2, r1
    2cc8:	24 c0       	rjmp	.+72     	; 0x2d12 <vfprintf+0x6aa>
    2cca:	03 ff       	sbrs	r16, 3
    2ccc:	27 c0       	rjmp	.+78     	; 0x2d1c <vfprintf+0x6b4>
    2cce:	0e e4       	ldi	r16, 0x4E	; 78
    2cd0:	12 e0       	ldi	r17, 0x02	; 2
    2cd2:	f3 2d       	mov	r31, r3
    2cd4:	f0 71       	andi	r31, 0x10	; 16
    2cd6:	3f 2e       	mov	r3, r31
    2cd8:	f8 01       	movw	r30, r16
    2cda:	84 91       	lpm	r24, Z
    2cdc:	81 11       	cpse	r24, r1
    2cde:	21 c0       	rjmp	.+66     	; 0x2d22 <vfprintf+0x6ba>
    2ce0:	ff 20       	and	r15, r15
    2ce2:	09 f4       	brne	.+2      	; 0x2ce6 <vfprintf+0x67e>
    2ce4:	fd cc       	rjmp	.-1542   	; 0x26e0 <vfprintf+0x78>
    2ce6:	b6 01       	movw	r22, r12
    2ce8:	80 e2       	ldi	r24, 0x20	; 32
    2cea:	90 e0       	ldi	r25, 0x00	; 0
    2cec:	78 d2       	rcall	.+1264   	; 0x31de <fputc>
    2cee:	fa 94       	dec	r15
    2cf0:	f7 cf       	rjmp	.-18     	; 0x2ce0 <vfprintf+0x678>
    2cf2:	f6 01       	movw	r30, r12
    2cf4:	86 81       	ldd	r24, Z+6	; 0x06
    2cf6:	97 81       	ldd	r25, Z+7	; 0x07
    2cf8:	23 c0       	rjmp	.+70     	; 0x2d40 <vfprintf+0x6d8>
    2cfa:	8f ef       	ldi	r24, 0xFF	; 255
    2cfc:	9f ef       	ldi	r25, 0xFF	; 255
    2cfe:	20 c0       	rjmp	.+64     	; 0x2d40 <vfprintf+0x6d8>
    2d00:	b6 01       	movw	r22, r12
    2d02:	80 e2       	ldi	r24, 0x20	; 32
    2d04:	90 e0       	ldi	r25, 0x00	; 0
    2d06:	6b d2       	rcall	.+1238   	; 0x31de <fputc>
    2d08:	fa 94       	dec	r15
    2d0a:	f1 10       	cpse	r15, r1
    2d0c:	f9 cf       	rjmp	.-14     	; 0x2d00 <vfprintf+0x698>
    2d0e:	db cf       	rjmp	.-74     	; 0x2cc6 <vfprintf+0x65e>
    2d10:	f1 2c       	mov	r15, r1
    2d12:	b6 01       	movw	r22, r12
    2d14:	82 2d       	mov	r24, r2
    2d16:	90 e0       	ldi	r25, 0x00	; 0
    2d18:	62 d2       	rcall	.+1220   	; 0x31de <fputc>
    2d1a:	d7 cf       	rjmp	.-82     	; 0x2cca <vfprintf+0x662>
    2d1c:	02 e5       	ldi	r16, 0x52	; 82
    2d1e:	12 e0       	ldi	r17, 0x02	; 2
    2d20:	d8 cf       	rjmp	.-80     	; 0x2cd2 <vfprintf+0x66a>
    2d22:	31 10       	cpse	r3, r1
    2d24:	80 52       	subi	r24, 0x20	; 32
    2d26:	b6 01       	movw	r22, r12
    2d28:	90 e0       	ldi	r25, 0x00	; 0
    2d2a:	59 d2       	rcall	.+1202   	; 0x31de <fputc>
    2d2c:	0f 5f       	subi	r16, 0xFF	; 255
    2d2e:	1f 4f       	sbci	r17, 0xFF	; 255
    2d30:	d3 cf       	rjmp	.-90     	; 0x2cd8 <vfprintf+0x670>
    2d32:	23 e0       	ldi	r18, 0x03	; 3
    2d34:	2f 15       	cp	r18, r15
    2d36:	10 f4       	brcc	.+4      	; 0x2d3c <vfprintf+0x6d4>
    2d38:	83 e0       	ldi	r24, 0x03	; 3
    2d3a:	c2 cf       	rjmp	.-124    	; 0x2cc0 <vfprintf+0x658>
    2d3c:	f1 2c       	mov	r15, r1
    2d3e:	c5 cf       	rjmp	.-118    	; 0x2cca <vfprintf+0x662>
    2d40:	63 96       	adiw	r28, 0x13	; 19
    2d42:	cd bf       	out	0x3d, r28	; 61
    2d44:	de bf       	out	0x3e, r29	; 62
    2d46:	df 91       	pop	r29
    2d48:	cf 91       	pop	r28
    2d4a:	1f 91       	pop	r17
    2d4c:	0f 91       	pop	r16
    2d4e:	ff 90       	pop	r15
    2d50:	ef 90       	pop	r14
    2d52:	df 90       	pop	r13
    2d54:	cf 90       	pop	r12
    2d56:	bf 90       	pop	r11
    2d58:	af 90       	pop	r10
    2d5a:	9f 90       	pop	r9
    2d5c:	8f 90       	pop	r8
    2d5e:	7f 90       	pop	r7
    2d60:	6f 90       	pop	r6
    2d62:	5f 90       	pop	r5
    2d64:	4f 90       	pop	r4
    2d66:	3f 90       	pop	r3
    2d68:	2f 90       	pop	r2
    2d6a:	08 95       	ret

00002d6c <__udivmodhi4>:
    2d6c:	aa 1b       	sub	r26, r26
    2d6e:	bb 1b       	sub	r27, r27
    2d70:	51 e1       	ldi	r21, 0x11	; 17
    2d72:	07 c0       	rjmp	.+14     	; 0x2d82 <__udivmodhi4_ep>

00002d74 <__udivmodhi4_loop>:
    2d74:	aa 1f       	adc	r26, r26
    2d76:	bb 1f       	adc	r27, r27
    2d78:	a6 17       	cp	r26, r22
    2d7a:	b7 07       	cpc	r27, r23
    2d7c:	10 f0       	brcs	.+4      	; 0x2d82 <__udivmodhi4_ep>
    2d7e:	a6 1b       	sub	r26, r22
    2d80:	b7 0b       	sbc	r27, r23

00002d82 <__udivmodhi4_ep>:
    2d82:	88 1f       	adc	r24, r24
    2d84:	99 1f       	adc	r25, r25
    2d86:	5a 95       	dec	r21
    2d88:	a9 f7       	brne	.-22     	; 0x2d74 <__udivmodhi4_loop>
    2d8a:	80 95       	com	r24
    2d8c:	90 95       	com	r25
    2d8e:	bc 01       	movw	r22, r24
    2d90:	cd 01       	movw	r24, r26
    2d92:	08 95       	ret

00002d94 <__udivmodsi4>:
    2d94:	a1 e2       	ldi	r26, 0x21	; 33
    2d96:	1a 2e       	mov	r1, r26
    2d98:	aa 1b       	sub	r26, r26
    2d9a:	bb 1b       	sub	r27, r27
    2d9c:	fd 01       	movw	r30, r26
    2d9e:	0d c0       	rjmp	.+26     	; 0x2dba <__udivmodsi4_ep>

00002da0 <__udivmodsi4_loop>:
    2da0:	aa 1f       	adc	r26, r26
    2da2:	bb 1f       	adc	r27, r27
    2da4:	ee 1f       	adc	r30, r30
    2da6:	ff 1f       	adc	r31, r31
    2da8:	a2 17       	cp	r26, r18
    2daa:	b3 07       	cpc	r27, r19
    2dac:	e4 07       	cpc	r30, r20
    2dae:	f5 07       	cpc	r31, r21
    2db0:	20 f0       	brcs	.+8      	; 0x2dba <__udivmodsi4_ep>
    2db2:	a2 1b       	sub	r26, r18
    2db4:	b3 0b       	sbc	r27, r19
    2db6:	e4 0b       	sbc	r30, r20
    2db8:	f5 0b       	sbc	r31, r21

00002dba <__udivmodsi4_ep>:
    2dba:	66 1f       	adc	r22, r22
    2dbc:	77 1f       	adc	r23, r23
    2dbe:	88 1f       	adc	r24, r24
    2dc0:	99 1f       	adc	r25, r25
    2dc2:	1a 94       	dec	r1
    2dc4:	69 f7       	brne	.-38     	; 0x2da0 <__udivmodsi4_loop>
    2dc6:	60 95       	com	r22
    2dc8:	70 95       	com	r23
    2dca:	80 95       	com	r24
    2dcc:	90 95       	com	r25
    2dce:	9b 01       	movw	r18, r22
    2dd0:	ac 01       	movw	r20, r24
    2dd2:	bd 01       	movw	r22, r26
    2dd4:	cf 01       	movw	r24, r30
    2dd6:	08 95       	ret

00002dd8 <__muluhisi3>:
    2dd8:	bb d0       	rcall	.+374    	; 0x2f50 <__umulhisi3>
    2dda:	a5 9f       	mul	r26, r21
    2ddc:	90 0d       	add	r25, r0
    2dde:	b4 9f       	mul	r27, r20
    2de0:	90 0d       	add	r25, r0
    2de2:	a4 9f       	mul	r26, r20
    2de4:	80 0d       	add	r24, r0
    2de6:	91 1d       	adc	r25, r1
    2de8:	11 24       	eor	r1, r1
    2dea:	08 95       	ret

00002dec <__muldi3>:
    2dec:	df 93       	push	r29
    2dee:	cf 93       	push	r28
    2df0:	1f 93       	push	r17
    2df2:	0f 93       	push	r16
    2df4:	9a 9d       	mul	r25, r10
    2df6:	f0 2d       	mov	r31, r0
    2df8:	21 9f       	mul	r18, r17
    2dfa:	f0 0d       	add	r31, r0
    2dfc:	8b 9d       	mul	r24, r11
    2dfe:	f0 0d       	add	r31, r0
    2e00:	8a 9d       	mul	r24, r10
    2e02:	e0 2d       	mov	r30, r0
    2e04:	f1 0d       	add	r31, r1
    2e06:	03 9f       	mul	r16, r19
    2e08:	f0 0d       	add	r31, r0
    2e0a:	02 9f       	mul	r16, r18
    2e0c:	e0 0d       	add	r30, r0
    2e0e:	f1 1d       	adc	r31, r1
    2e10:	4e 9d       	mul	r20, r14
    2e12:	e0 0d       	add	r30, r0
    2e14:	f1 1d       	adc	r31, r1
    2e16:	5e 9d       	mul	r21, r14
    2e18:	f0 0d       	add	r31, r0
    2e1a:	4f 9d       	mul	r20, r15
    2e1c:	f0 0d       	add	r31, r0
    2e1e:	7f 93       	push	r23
    2e20:	6f 93       	push	r22
    2e22:	bf 92       	push	r11
    2e24:	af 92       	push	r10
    2e26:	5f 93       	push	r21
    2e28:	4f 93       	push	r20
    2e2a:	d5 01       	movw	r26, r10
    2e2c:	91 d0       	rcall	.+290    	; 0x2f50 <__umulhisi3>
    2e2e:	8b 01       	movw	r16, r22
    2e30:	ac 01       	movw	r20, r24
    2e32:	d7 01       	movw	r26, r14
    2e34:	8d d0       	rcall	.+282    	; 0x2f50 <__umulhisi3>
    2e36:	eb 01       	movw	r28, r22
    2e38:	e8 0f       	add	r30, r24
    2e3a:	f9 1f       	adc	r31, r25
    2e3c:	d6 01       	movw	r26, r12
    2e3e:	1f d0       	rcall	.+62     	; 0x2e7e <__muldi3_6>
    2e40:	2f 91       	pop	r18
    2e42:	3f 91       	pop	r19
    2e44:	d6 01       	movw	r26, r12
    2e46:	84 d0       	rcall	.+264    	; 0x2f50 <__umulhisi3>
    2e48:	c6 0f       	add	r28, r22
    2e4a:	d7 1f       	adc	r29, r23
    2e4c:	e8 1f       	adc	r30, r24
    2e4e:	f9 1f       	adc	r31, r25
    2e50:	af 91       	pop	r26
    2e52:	bf 91       	pop	r27
    2e54:	14 d0       	rcall	.+40     	; 0x2e7e <__muldi3_6>
    2e56:	2f 91       	pop	r18
    2e58:	3f 91       	pop	r19
    2e5a:	7a d0       	rcall	.+244    	; 0x2f50 <__umulhisi3>
    2e5c:	c6 0f       	add	r28, r22
    2e5e:	d7 1f       	adc	r29, r23
    2e60:	e8 1f       	adc	r30, r24
    2e62:	f9 1f       	adc	r31, r25
    2e64:	d6 01       	movw	r26, r12
    2e66:	74 d0       	rcall	.+232    	; 0x2f50 <__umulhisi3>
    2e68:	e6 0f       	add	r30, r22
    2e6a:	f7 1f       	adc	r31, r23
    2e6c:	98 01       	movw	r18, r16
    2e6e:	be 01       	movw	r22, r28
    2e70:	cf 01       	movw	r24, r30
    2e72:	11 24       	eor	r1, r1
    2e74:	0f 91       	pop	r16
    2e76:	1f 91       	pop	r17
    2e78:	cf 91       	pop	r28
    2e7a:	df 91       	pop	r29
    2e7c:	08 95       	ret

00002e7e <__muldi3_6>:
    2e7e:	68 d0       	rcall	.+208    	; 0x2f50 <__umulhisi3>
    2e80:	46 0f       	add	r20, r22
    2e82:	57 1f       	adc	r21, r23
    2e84:	c8 1f       	adc	r28, r24
    2e86:	d9 1f       	adc	r29, r25
    2e88:	08 f4       	brcc	.+2      	; 0x2e8c <__muldi3_6+0xe>
    2e8a:	31 96       	adiw	r30, 0x01	; 1
    2e8c:	08 95       	ret

00002e8e <__ashldi3>:
    2e8e:	0f 93       	push	r16
    2e90:	08 30       	cpi	r16, 0x08	; 8
    2e92:	90 f0       	brcs	.+36     	; 0x2eb8 <__ashldi3+0x2a>
    2e94:	98 2f       	mov	r25, r24
    2e96:	87 2f       	mov	r24, r23
    2e98:	76 2f       	mov	r23, r22
    2e9a:	65 2f       	mov	r22, r21
    2e9c:	54 2f       	mov	r21, r20
    2e9e:	43 2f       	mov	r20, r19
    2ea0:	32 2f       	mov	r19, r18
    2ea2:	22 27       	eor	r18, r18
    2ea4:	08 50       	subi	r16, 0x08	; 8
    2ea6:	f4 cf       	rjmp	.-24     	; 0x2e90 <__ashldi3+0x2>
    2ea8:	22 0f       	add	r18, r18
    2eaa:	33 1f       	adc	r19, r19
    2eac:	44 1f       	adc	r20, r20
    2eae:	55 1f       	adc	r21, r21
    2eb0:	66 1f       	adc	r22, r22
    2eb2:	77 1f       	adc	r23, r23
    2eb4:	88 1f       	adc	r24, r24
    2eb6:	99 1f       	adc	r25, r25
    2eb8:	0a 95       	dec	r16
    2eba:	b2 f7       	brpl	.-20     	; 0x2ea8 <__ashldi3+0x1a>
    2ebc:	0f 91       	pop	r16
    2ebe:	08 95       	ret

00002ec0 <__ashrdi3>:
    2ec0:	97 fb       	bst	r25, 7
    2ec2:	10 f8       	bld	r1, 0

00002ec4 <__lshrdi3>:
    2ec4:	16 94       	lsr	r1
    2ec6:	00 08       	sbc	r0, r0
    2ec8:	0f 93       	push	r16
    2eca:	08 30       	cpi	r16, 0x08	; 8
    2ecc:	98 f0       	brcs	.+38     	; 0x2ef4 <__lshrdi3+0x30>
    2ece:	08 50       	subi	r16, 0x08	; 8
    2ed0:	23 2f       	mov	r18, r19
    2ed2:	34 2f       	mov	r19, r20
    2ed4:	45 2f       	mov	r20, r21
    2ed6:	56 2f       	mov	r21, r22
    2ed8:	67 2f       	mov	r22, r23
    2eda:	78 2f       	mov	r23, r24
    2edc:	89 2f       	mov	r24, r25
    2ede:	90 2d       	mov	r25, r0
    2ee0:	f4 cf       	rjmp	.-24     	; 0x2eca <__lshrdi3+0x6>
    2ee2:	05 94       	asr	r0
    2ee4:	97 95       	ror	r25
    2ee6:	87 95       	ror	r24
    2ee8:	77 95       	ror	r23
    2eea:	67 95       	ror	r22
    2eec:	57 95       	ror	r21
    2eee:	47 95       	ror	r20
    2ef0:	37 95       	ror	r19
    2ef2:	27 95       	ror	r18
    2ef4:	0a 95       	dec	r16
    2ef6:	aa f7       	brpl	.-22     	; 0x2ee2 <__lshrdi3+0x1e>
    2ef8:	0f 91       	pop	r16
    2efa:	08 95       	ret

00002efc <__adddi3>:
    2efc:	2a 0d       	add	r18, r10
    2efe:	3b 1d       	adc	r19, r11
    2f00:	4c 1d       	adc	r20, r12
    2f02:	5d 1d       	adc	r21, r13
    2f04:	6e 1d       	adc	r22, r14
    2f06:	7f 1d       	adc	r23, r15
    2f08:	80 1f       	adc	r24, r16
    2f0a:	91 1f       	adc	r25, r17
    2f0c:	08 95       	ret

00002f0e <__adddi3_s8>:
    2f0e:	00 24       	eor	r0, r0
    2f10:	a7 fd       	sbrc	r26, 7
    2f12:	00 94       	com	r0
    2f14:	2a 0f       	add	r18, r26
    2f16:	30 1d       	adc	r19, r0
    2f18:	40 1d       	adc	r20, r0
    2f1a:	50 1d       	adc	r21, r0
    2f1c:	60 1d       	adc	r22, r0
    2f1e:	70 1d       	adc	r23, r0
    2f20:	80 1d       	adc	r24, r0
    2f22:	90 1d       	adc	r25, r0
    2f24:	08 95       	ret

00002f26 <__subdi3>:
    2f26:	2a 19       	sub	r18, r10
    2f28:	3b 09       	sbc	r19, r11
    2f2a:	4c 09       	sbc	r20, r12
    2f2c:	5d 09       	sbc	r21, r13
    2f2e:	6e 09       	sbc	r22, r14
    2f30:	7f 09       	sbc	r23, r15
    2f32:	80 0b       	sbc	r24, r16
    2f34:	91 0b       	sbc	r25, r17
    2f36:	08 95       	ret

00002f38 <__cmpdi2_s8>:
    2f38:	00 24       	eor	r0, r0
    2f3a:	a7 fd       	sbrc	r26, 7
    2f3c:	00 94       	com	r0
    2f3e:	2a 17       	cp	r18, r26
    2f40:	30 05       	cpc	r19, r0
    2f42:	40 05       	cpc	r20, r0
    2f44:	50 05       	cpc	r21, r0
    2f46:	60 05       	cpc	r22, r0
    2f48:	70 05       	cpc	r23, r0
    2f4a:	80 05       	cpc	r24, r0
    2f4c:	90 05       	cpc	r25, r0
    2f4e:	08 95       	ret

00002f50 <__umulhisi3>:
    2f50:	a2 9f       	mul	r26, r18
    2f52:	b0 01       	movw	r22, r0
    2f54:	b3 9f       	mul	r27, r19
    2f56:	c0 01       	movw	r24, r0
    2f58:	a3 9f       	mul	r26, r19
    2f5a:	70 0d       	add	r23, r0
    2f5c:	81 1d       	adc	r24, r1
    2f5e:	11 24       	eor	r1, r1
    2f60:	91 1d       	adc	r25, r1
    2f62:	b2 9f       	mul	r27, r18
    2f64:	70 0d       	add	r23, r0
    2f66:	81 1d       	adc	r24, r1
    2f68:	11 24       	eor	r1, r1
    2f6a:	91 1d       	adc	r25, r1
    2f6c:	08 95       	ret

00002f6e <__ftoa_engine>:
    2f6e:	28 30       	cpi	r18, 0x08	; 8
    2f70:	08 f0       	brcs	.+2      	; 0x2f74 <__ftoa_engine+0x6>
    2f72:	27 e0       	ldi	r18, 0x07	; 7
    2f74:	33 27       	eor	r19, r19
    2f76:	da 01       	movw	r26, r20
    2f78:	99 0f       	add	r25, r25
    2f7a:	31 1d       	adc	r19, r1
    2f7c:	87 fd       	sbrc	r24, 7
    2f7e:	91 60       	ori	r25, 0x01	; 1
    2f80:	00 96       	adiw	r24, 0x00	; 0
    2f82:	61 05       	cpc	r22, r1
    2f84:	71 05       	cpc	r23, r1
    2f86:	39 f4       	brne	.+14     	; 0x2f96 <__ftoa_engine+0x28>
    2f88:	32 60       	ori	r19, 0x02	; 2
    2f8a:	2e 5f       	subi	r18, 0xFE	; 254
    2f8c:	3d 93       	st	X+, r19
    2f8e:	30 e3       	ldi	r19, 0x30	; 48
    2f90:	2a 95       	dec	r18
    2f92:	e1 f7       	brne	.-8      	; 0x2f8c <__ftoa_engine+0x1e>
    2f94:	08 95       	ret
    2f96:	9f 3f       	cpi	r25, 0xFF	; 255
    2f98:	30 f0       	brcs	.+12     	; 0x2fa6 <__ftoa_engine+0x38>
    2f9a:	80 38       	cpi	r24, 0x80	; 128
    2f9c:	71 05       	cpc	r23, r1
    2f9e:	61 05       	cpc	r22, r1
    2fa0:	09 f0       	breq	.+2      	; 0x2fa4 <__ftoa_engine+0x36>
    2fa2:	3c 5f       	subi	r19, 0xFC	; 252
    2fa4:	3c 5f       	subi	r19, 0xFC	; 252
    2fa6:	3d 93       	st	X+, r19
    2fa8:	91 30       	cpi	r25, 0x01	; 1
    2faa:	08 f0       	brcs	.+2      	; 0x2fae <__ftoa_engine+0x40>
    2fac:	80 68       	ori	r24, 0x80	; 128
    2fae:	91 1d       	adc	r25, r1
    2fb0:	df 93       	push	r29
    2fb2:	cf 93       	push	r28
    2fb4:	1f 93       	push	r17
    2fb6:	0f 93       	push	r16
    2fb8:	ff 92       	push	r15
    2fba:	ef 92       	push	r14
    2fbc:	19 2f       	mov	r17, r25
    2fbe:	98 7f       	andi	r25, 0xF8	; 248
    2fc0:	96 95       	lsr	r25
    2fc2:	e9 2f       	mov	r30, r25
    2fc4:	96 95       	lsr	r25
    2fc6:	96 95       	lsr	r25
    2fc8:	e9 0f       	add	r30, r25
    2fca:	ff 27       	eor	r31, r31
    2fcc:	e0 55       	subi	r30, 0x50	; 80
    2fce:	fd 4f       	sbci	r31, 0xFD	; 253
    2fd0:	99 27       	eor	r25, r25
    2fd2:	33 27       	eor	r19, r19
    2fd4:	ee 24       	eor	r14, r14
    2fd6:	ff 24       	eor	r15, r15
    2fd8:	a7 01       	movw	r20, r14
    2fda:	e7 01       	movw	r28, r14
    2fdc:	05 90       	lpm	r0, Z+
    2fde:	08 94       	sec
    2fe0:	07 94       	ror	r0
    2fe2:	28 f4       	brcc	.+10     	; 0x2fee <__ftoa_engine+0x80>
    2fe4:	36 0f       	add	r19, r22
    2fe6:	e7 1e       	adc	r14, r23
    2fe8:	f8 1e       	adc	r15, r24
    2fea:	49 1f       	adc	r20, r25
    2fec:	51 1d       	adc	r21, r1
    2fee:	66 0f       	add	r22, r22
    2ff0:	77 1f       	adc	r23, r23
    2ff2:	88 1f       	adc	r24, r24
    2ff4:	99 1f       	adc	r25, r25
    2ff6:	06 94       	lsr	r0
    2ff8:	a1 f7       	brne	.-24     	; 0x2fe2 <__ftoa_engine+0x74>
    2ffa:	05 90       	lpm	r0, Z+
    2ffc:	07 94       	ror	r0
    2ffe:	28 f4       	brcc	.+10     	; 0x300a <__ftoa_engine+0x9c>
    3000:	e7 0e       	add	r14, r23
    3002:	f8 1e       	adc	r15, r24
    3004:	49 1f       	adc	r20, r25
    3006:	56 1f       	adc	r21, r22
    3008:	c1 1d       	adc	r28, r1
    300a:	77 0f       	add	r23, r23
    300c:	88 1f       	adc	r24, r24
    300e:	99 1f       	adc	r25, r25
    3010:	66 1f       	adc	r22, r22
    3012:	06 94       	lsr	r0
    3014:	a1 f7       	brne	.-24     	; 0x2ffe <__ftoa_engine+0x90>
    3016:	05 90       	lpm	r0, Z+
    3018:	07 94       	ror	r0
    301a:	28 f4       	brcc	.+10     	; 0x3026 <__ftoa_engine+0xb8>
    301c:	f8 0e       	add	r15, r24
    301e:	49 1f       	adc	r20, r25
    3020:	56 1f       	adc	r21, r22
    3022:	c7 1f       	adc	r28, r23
    3024:	d1 1d       	adc	r29, r1
    3026:	88 0f       	add	r24, r24
    3028:	99 1f       	adc	r25, r25
    302a:	66 1f       	adc	r22, r22
    302c:	77 1f       	adc	r23, r23
    302e:	06 94       	lsr	r0
    3030:	a1 f7       	brne	.-24     	; 0x301a <__ftoa_engine+0xac>
    3032:	05 90       	lpm	r0, Z+
    3034:	07 94       	ror	r0
    3036:	20 f4       	brcc	.+8      	; 0x3040 <__ftoa_engine+0xd2>
    3038:	49 0f       	add	r20, r25
    303a:	56 1f       	adc	r21, r22
    303c:	c7 1f       	adc	r28, r23
    303e:	d8 1f       	adc	r29, r24
    3040:	99 0f       	add	r25, r25
    3042:	66 1f       	adc	r22, r22
    3044:	77 1f       	adc	r23, r23
    3046:	88 1f       	adc	r24, r24
    3048:	06 94       	lsr	r0
    304a:	a9 f7       	brne	.-22     	; 0x3036 <__ftoa_engine+0xc8>
    304c:	84 91       	lpm	r24, Z
    304e:	10 95       	com	r17
    3050:	17 70       	andi	r17, 0x07	; 7
    3052:	41 f0       	breq	.+16     	; 0x3064 <__ftoa_engine+0xf6>
    3054:	d6 95       	lsr	r29
    3056:	c7 95       	ror	r28
    3058:	57 95       	ror	r21
    305a:	47 95       	ror	r20
    305c:	f7 94       	ror	r15
    305e:	e7 94       	ror	r14
    3060:	1a 95       	dec	r17
    3062:	c1 f7       	brne	.-16     	; 0x3054 <__ftoa_engine+0xe6>
    3064:	e6 e5       	ldi	r30, 0x56	; 86
    3066:	f2 e0       	ldi	r31, 0x02	; 2
    3068:	68 94       	set
    306a:	15 90       	lpm	r1, Z+
    306c:	15 91       	lpm	r17, Z+
    306e:	35 91       	lpm	r19, Z+
    3070:	65 91       	lpm	r22, Z+
    3072:	95 91       	lpm	r25, Z+
    3074:	05 90       	lpm	r0, Z+
    3076:	7f e2       	ldi	r23, 0x2F	; 47
    3078:	73 95       	inc	r23
    307a:	e1 18       	sub	r14, r1
    307c:	f1 0a       	sbc	r15, r17
    307e:	43 0b       	sbc	r20, r19
    3080:	56 0b       	sbc	r21, r22
    3082:	c9 0b       	sbc	r28, r25
    3084:	d0 09       	sbc	r29, r0
    3086:	c0 f7       	brcc	.-16     	; 0x3078 <__ftoa_engine+0x10a>
    3088:	e1 0c       	add	r14, r1
    308a:	f1 1e       	adc	r15, r17
    308c:	43 1f       	adc	r20, r19
    308e:	56 1f       	adc	r21, r22
    3090:	c9 1f       	adc	r28, r25
    3092:	d0 1d       	adc	r29, r0
    3094:	7e f4       	brtc	.+30     	; 0x30b4 <__ftoa_engine+0x146>
    3096:	70 33       	cpi	r23, 0x30	; 48
    3098:	11 f4       	brne	.+4      	; 0x309e <__ftoa_engine+0x130>
    309a:	8a 95       	dec	r24
    309c:	e6 cf       	rjmp	.-52     	; 0x306a <__ftoa_engine+0xfc>
    309e:	e8 94       	clt
    30a0:	01 50       	subi	r16, 0x01	; 1
    30a2:	30 f0       	brcs	.+12     	; 0x30b0 <__ftoa_engine+0x142>
    30a4:	08 0f       	add	r16, r24
    30a6:	0a f4       	brpl	.+2      	; 0x30aa <__ftoa_engine+0x13c>
    30a8:	00 27       	eor	r16, r16
    30aa:	02 17       	cp	r16, r18
    30ac:	08 f4       	brcc	.+2      	; 0x30b0 <__ftoa_engine+0x142>
    30ae:	20 2f       	mov	r18, r16
    30b0:	23 95       	inc	r18
    30b2:	02 2f       	mov	r16, r18
    30b4:	7a 33       	cpi	r23, 0x3A	; 58
    30b6:	28 f0       	brcs	.+10     	; 0x30c2 <__ftoa_engine+0x154>
    30b8:	79 e3       	ldi	r23, 0x39	; 57
    30ba:	7d 93       	st	X+, r23
    30bc:	2a 95       	dec	r18
    30be:	e9 f7       	brne	.-6      	; 0x30ba <__ftoa_engine+0x14c>
    30c0:	10 c0       	rjmp	.+32     	; 0x30e2 <__ftoa_engine+0x174>
    30c2:	7d 93       	st	X+, r23
    30c4:	2a 95       	dec	r18
    30c6:	89 f6       	brne	.-94     	; 0x306a <__ftoa_engine+0xfc>
    30c8:	06 94       	lsr	r0
    30ca:	97 95       	ror	r25
    30cc:	67 95       	ror	r22
    30ce:	37 95       	ror	r19
    30d0:	17 95       	ror	r17
    30d2:	17 94       	ror	r1
    30d4:	e1 18       	sub	r14, r1
    30d6:	f1 0a       	sbc	r15, r17
    30d8:	43 0b       	sbc	r20, r19
    30da:	56 0b       	sbc	r21, r22
    30dc:	c9 0b       	sbc	r28, r25
    30de:	d0 09       	sbc	r29, r0
    30e0:	98 f0       	brcs	.+38     	; 0x3108 <__ftoa_engine+0x19a>
    30e2:	23 95       	inc	r18
    30e4:	7e 91       	ld	r23, -X
    30e6:	73 95       	inc	r23
    30e8:	7a 33       	cpi	r23, 0x3A	; 58
    30ea:	08 f0       	brcs	.+2      	; 0x30ee <__ftoa_engine+0x180>
    30ec:	70 e3       	ldi	r23, 0x30	; 48
    30ee:	7c 93       	st	X, r23
    30f0:	20 13       	cpse	r18, r16
    30f2:	b8 f7       	brcc	.-18     	; 0x30e2 <__ftoa_engine+0x174>
    30f4:	7e 91       	ld	r23, -X
    30f6:	70 61       	ori	r23, 0x10	; 16
    30f8:	7d 93       	st	X+, r23
    30fa:	30 f0       	brcs	.+12     	; 0x3108 <__ftoa_engine+0x19a>
    30fc:	83 95       	inc	r24
    30fe:	71 e3       	ldi	r23, 0x31	; 49
    3100:	7d 93       	st	X+, r23
    3102:	70 e3       	ldi	r23, 0x30	; 48
    3104:	2a 95       	dec	r18
    3106:	e1 f7       	brne	.-8      	; 0x3100 <__ftoa_engine+0x192>
    3108:	11 24       	eor	r1, r1
    310a:	ef 90       	pop	r14
    310c:	ff 90       	pop	r15
    310e:	0f 91       	pop	r16
    3110:	1f 91       	pop	r17
    3112:	cf 91       	pop	r28
    3114:	df 91       	pop	r29
    3116:	99 27       	eor	r25, r25
    3118:	87 fd       	sbrc	r24, 7
    311a:	90 95       	com	r25
    311c:	08 95       	ret

0000311e <strnlen_P>:
    311e:	fc 01       	movw	r30, r24
    3120:	05 90       	lpm	r0, Z+
    3122:	61 50       	subi	r22, 0x01	; 1
    3124:	70 40       	sbci	r23, 0x00	; 0
    3126:	01 10       	cpse	r0, r1
    3128:	d8 f7       	brcc	.-10     	; 0x3120 <strnlen_P+0x2>
    312a:	80 95       	com	r24
    312c:	90 95       	com	r25
    312e:	8e 0f       	add	r24, r30
    3130:	9f 1f       	adc	r25, r31
    3132:	08 95       	ret

00003134 <strnlen>:
    3134:	fc 01       	movw	r30, r24
    3136:	61 50       	subi	r22, 0x01	; 1
    3138:	70 40       	sbci	r23, 0x00	; 0
    313a:	01 90       	ld	r0, Z+
    313c:	01 10       	cpse	r0, r1
    313e:	d8 f7       	brcc	.-10     	; 0x3136 <strnlen+0x2>
    3140:	80 95       	com	r24
    3142:	90 95       	com	r25
    3144:	8e 0f       	add	r24, r30
    3146:	9f 1f       	adc	r25, r31
    3148:	08 95       	ret

0000314a <fdevopen>:
    314a:	0f 93       	push	r16
    314c:	1f 93       	push	r17
    314e:	cf 93       	push	r28
    3150:	df 93       	push	r29
    3152:	00 97       	sbiw	r24, 0x00	; 0
    3154:	31 f4       	brne	.+12     	; 0x3162 <fdevopen+0x18>
    3156:	61 15       	cp	r22, r1
    3158:	71 05       	cpc	r23, r1
    315a:	19 f4       	brne	.+6      	; 0x3162 <fdevopen+0x18>
    315c:	80 e0       	ldi	r24, 0x00	; 0
    315e:	90 e0       	ldi	r25, 0x00	; 0
    3160:	39 c0       	rjmp	.+114    	; 0x31d4 <fdevopen+0x8a>
    3162:	8b 01       	movw	r16, r22
    3164:	ec 01       	movw	r28, r24
    3166:	6e e0       	ldi	r22, 0x0E	; 14
    3168:	70 e0       	ldi	r23, 0x00	; 0
    316a:	81 e0       	ldi	r24, 0x01	; 1
    316c:	90 e0       	ldi	r25, 0x00	; 0
    316e:	e0 d0       	rcall	.+448    	; 0x3330 <calloc>
    3170:	fc 01       	movw	r30, r24
    3172:	89 2b       	or	r24, r25
    3174:	99 f3       	breq	.-26     	; 0x315c <fdevopen+0x12>
    3176:	80 e8       	ldi	r24, 0x80	; 128
    3178:	83 83       	std	Z+3, r24	; 0x03
    317a:	01 15       	cp	r16, r1
    317c:	11 05       	cpc	r17, r1
    317e:	71 f0       	breq	.+28     	; 0x319c <fdevopen+0x52>
    3180:	02 87       	std	Z+10, r16	; 0x0a
    3182:	13 87       	std	Z+11, r17	; 0x0b
    3184:	81 e8       	ldi	r24, 0x81	; 129
    3186:	83 83       	std	Z+3, r24	; 0x03
    3188:	80 91 48 20 	lds	r24, 0x2048	; 0x802048 <__iob>
    318c:	90 91 49 20 	lds	r25, 0x2049	; 0x802049 <__iob+0x1>
    3190:	89 2b       	or	r24, r25
    3192:	21 f4       	brne	.+8      	; 0x319c <fdevopen+0x52>
    3194:	e0 93 48 20 	sts	0x2048, r30	; 0x802048 <__iob>
    3198:	f0 93 49 20 	sts	0x2049, r31	; 0x802049 <__iob+0x1>
    319c:	20 97       	sbiw	r28, 0x00	; 0
    319e:	c9 f0       	breq	.+50     	; 0x31d2 <fdevopen+0x88>
    31a0:	c0 87       	std	Z+8, r28	; 0x08
    31a2:	d1 87       	std	Z+9, r29	; 0x09
    31a4:	83 81       	ldd	r24, Z+3	; 0x03
    31a6:	82 60       	ori	r24, 0x02	; 2
    31a8:	83 83       	std	Z+3, r24	; 0x03
    31aa:	80 91 4a 20 	lds	r24, 0x204A	; 0x80204a <__iob+0x2>
    31ae:	90 91 4b 20 	lds	r25, 0x204B	; 0x80204b <__iob+0x3>
    31b2:	89 2b       	or	r24, r25
    31b4:	71 f4       	brne	.+28     	; 0x31d2 <fdevopen+0x88>
    31b6:	e0 93 4a 20 	sts	0x204A, r30	; 0x80204a <__iob+0x2>
    31ba:	f0 93 4b 20 	sts	0x204B, r31	; 0x80204b <__iob+0x3>
    31be:	80 91 4c 20 	lds	r24, 0x204C	; 0x80204c <__iob+0x4>
    31c2:	90 91 4d 20 	lds	r25, 0x204D	; 0x80204d <__iob+0x5>
    31c6:	89 2b       	or	r24, r25
    31c8:	21 f4       	brne	.+8      	; 0x31d2 <fdevopen+0x88>
    31ca:	e0 93 4c 20 	sts	0x204C, r30	; 0x80204c <__iob+0x4>
    31ce:	f0 93 4d 20 	sts	0x204D, r31	; 0x80204d <__iob+0x5>
    31d2:	cf 01       	movw	r24, r30
    31d4:	df 91       	pop	r29
    31d6:	cf 91       	pop	r28
    31d8:	1f 91       	pop	r17
    31da:	0f 91       	pop	r16
    31dc:	08 95       	ret

000031de <fputc>:
    31de:	0f 93       	push	r16
    31e0:	1f 93       	push	r17
    31e2:	cf 93       	push	r28
    31e4:	df 93       	push	r29
    31e6:	fb 01       	movw	r30, r22
    31e8:	23 81       	ldd	r18, Z+3	; 0x03
    31ea:	21 fd       	sbrc	r18, 1
    31ec:	03 c0       	rjmp	.+6      	; 0x31f4 <fputc+0x16>
    31ee:	8f ef       	ldi	r24, 0xFF	; 255
    31f0:	9f ef       	ldi	r25, 0xFF	; 255
    31f2:	28 c0       	rjmp	.+80     	; 0x3244 <fputc+0x66>
    31f4:	22 ff       	sbrs	r18, 2
    31f6:	16 c0       	rjmp	.+44     	; 0x3224 <fputc+0x46>
    31f8:	46 81       	ldd	r20, Z+6	; 0x06
    31fa:	57 81       	ldd	r21, Z+7	; 0x07
    31fc:	24 81       	ldd	r18, Z+4	; 0x04
    31fe:	35 81       	ldd	r19, Z+5	; 0x05
    3200:	42 17       	cp	r20, r18
    3202:	53 07       	cpc	r21, r19
    3204:	44 f4       	brge	.+16     	; 0x3216 <fputc+0x38>
    3206:	a0 81       	ld	r26, Z
    3208:	b1 81       	ldd	r27, Z+1	; 0x01
    320a:	9d 01       	movw	r18, r26
    320c:	2f 5f       	subi	r18, 0xFF	; 255
    320e:	3f 4f       	sbci	r19, 0xFF	; 255
    3210:	20 83       	st	Z, r18
    3212:	31 83       	std	Z+1, r19	; 0x01
    3214:	8c 93       	st	X, r24
    3216:	26 81       	ldd	r18, Z+6	; 0x06
    3218:	37 81       	ldd	r19, Z+7	; 0x07
    321a:	2f 5f       	subi	r18, 0xFF	; 255
    321c:	3f 4f       	sbci	r19, 0xFF	; 255
    321e:	26 83       	std	Z+6, r18	; 0x06
    3220:	37 83       	std	Z+7, r19	; 0x07
    3222:	10 c0       	rjmp	.+32     	; 0x3244 <fputc+0x66>
    3224:	eb 01       	movw	r28, r22
    3226:	09 2f       	mov	r16, r25
    3228:	18 2f       	mov	r17, r24
    322a:	00 84       	ldd	r0, Z+8	; 0x08
    322c:	f1 85       	ldd	r31, Z+9	; 0x09
    322e:	e0 2d       	mov	r30, r0
    3230:	19 95       	eicall
    3232:	89 2b       	or	r24, r25
    3234:	e1 f6       	brne	.-72     	; 0x31ee <fputc+0x10>
    3236:	8e 81       	ldd	r24, Y+6	; 0x06
    3238:	9f 81       	ldd	r25, Y+7	; 0x07
    323a:	01 96       	adiw	r24, 0x01	; 1
    323c:	8e 83       	std	Y+6, r24	; 0x06
    323e:	9f 83       	std	Y+7, r25	; 0x07
    3240:	81 2f       	mov	r24, r17
    3242:	90 2f       	mov	r25, r16
    3244:	df 91       	pop	r29
    3246:	cf 91       	pop	r28
    3248:	1f 91       	pop	r17
    324a:	0f 91       	pop	r16
    324c:	08 95       	ret

0000324e <printf>:
    324e:	cf 93       	push	r28
    3250:	df 93       	push	r29
    3252:	cd b7       	in	r28, 0x3d	; 61
    3254:	de b7       	in	r29, 0x3e	; 62
    3256:	ae 01       	movw	r20, r28
    3258:	4a 5f       	subi	r20, 0xFA	; 250
    325a:	5f 4f       	sbci	r21, 0xFF	; 255
    325c:	fa 01       	movw	r30, r20
    325e:	61 91       	ld	r22, Z+
    3260:	71 91       	ld	r23, Z+
    3262:	af 01       	movw	r20, r30
    3264:	80 91 4a 20 	lds	r24, 0x204A	; 0x80204a <__iob+0x2>
    3268:	90 91 4b 20 	lds	r25, 0x204B	; 0x80204b <__iob+0x3>
    326c:	fd d9       	rcall	.-3078   	; 0x2668 <vfprintf>
    326e:	df 91       	pop	r29
    3270:	cf 91       	pop	r28
    3272:	08 95       	ret

00003274 <__ultoa_invert>:
    3274:	fa 01       	movw	r30, r20
    3276:	aa 27       	eor	r26, r26
    3278:	28 30       	cpi	r18, 0x08	; 8
    327a:	51 f1       	breq	.+84     	; 0x32d0 <__ultoa_invert+0x5c>
    327c:	20 31       	cpi	r18, 0x10	; 16
    327e:	81 f1       	breq	.+96     	; 0x32e0 <__ultoa_invert+0x6c>
    3280:	e8 94       	clt
    3282:	6f 93       	push	r22
    3284:	6e 7f       	andi	r22, 0xFE	; 254
    3286:	6e 5f       	subi	r22, 0xFE	; 254
    3288:	7f 4f       	sbci	r23, 0xFF	; 255
    328a:	8f 4f       	sbci	r24, 0xFF	; 255
    328c:	9f 4f       	sbci	r25, 0xFF	; 255
    328e:	af 4f       	sbci	r26, 0xFF	; 255
    3290:	b1 e0       	ldi	r27, 0x01	; 1
    3292:	3e d0       	rcall	.+124    	; 0x3310 <__ultoa_invert+0x9c>
    3294:	b4 e0       	ldi	r27, 0x04	; 4
    3296:	3c d0       	rcall	.+120    	; 0x3310 <__ultoa_invert+0x9c>
    3298:	67 0f       	add	r22, r23
    329a:	78 1f       	adc	r23, r24
    329c:	89 1f       	adc	r24, r25
    329e:	9a 1f       	adc	r25, r26
    32a0:	a1 1d       	adc	r26, r1
    32a2:	68 0f       	add	r22, r24
    32a4:	79 1f       	adc	r23, r25
    32a6:	8a 1f       	adc	r24, r26
    32a8:	91 1d       	adc	r25, r1
    32aa:	a1 1d       	adc	r26, r1
    32ac:	6a 0f       	add	r22, r26
    32ae:	71 1d       	adc	r23, r1
    32b0:	81 1d       	adc	r24, r1
    32b2:	91 1d       	adc	r25, r1
    32b4:	a1 1d       	adc	r26, r1
    32b6:	20 d0       	rcall	.+64     	; 0x32f8 <__ultoa_invert+0x84>
    32b8:	09 f4       	brne	.+2      	; 0x32bc <__ultoa_invert+0x48>
    32ba:	68 94       	set
    32bc:	3f 91       	pop	r19
    32be:	2a e0       	ldi	r18, 0x0A	; 10
    32c0:	26 9f       	mul	r18, r22
    32c2:	11 24       	eor	r1, r1
    32c4:	30 19       	sub	r19, r0
    32c6:	30 5d       	subi	r19, 0xD0	; 208
    32c8:	31 93       	st	Z+, r19
    32ca:	de f6       	brtc	.-74     	; 0x3282 <__ultoa_invert+0xe>
    32cc:	cf 01       	movw	r24, r30
    32ce:	08 95       	ret
    32d0:	46 2f       	mov	r20, r22
    32d2:	47 70       	andi	r20, 0x07	; 7
    32d4:	40 5d       	subi	r20, 0xD0	; 208
    32d6:	41 93       	st	Z+, r20
    32d8:	b3 e0       	ldi	r27, 0x03	; 3
    32da:	0f d0       	rcall	.+30     	; 0x32fa <__ultoa_invert+0x86>
    32dc:	c9 f7       	brne	.-14     	; 0x32d0 <__ultoa_invert+0x5c>
    32de:	f6 cf       	rjmp	.-20     	; 0x32cc <__ultoa_invert+0x58>
    32e0:	46 2f       	mov	r20, r22
    32e2:	4f 70       	andi	r20, 0x0F	; 15
    32e4:	40 5d       	subi	r20, 0xD0	; 208
    32e6:	4a 33       	cpi	r20, 0x3A	; 58
    32e8:	18 f0       	brcs	.+6      	; 0x32f0 <__ultoa_invert+0x7c>
    32ea:	49 5d       	subi	r20, 0xD9	; 217
    32ec:	31 fd       	sbrc	r19, 1
    32ee:	40 52       	subi	r20, 0x20	; 32
    32f0:	41 93       	st	Z+, r20
    32f2:	02 d0       	rcall	.+4      	; 0x32f8 <__ultoa_invert+0x84>
    32f4:	a9 f7       	brne	.-22     	; 0x32e0 <__ultoa_invert+0x6c>
    32f6:	ea cf       	rjmp	.-44     	; 0x32cc <__ultoa_invert+0x58>
    32f8:	b4 e0       	ldi	r27, 0x04	; 4
    32fa:	a6 95       	lsr	r26
    32fc:	97 95       	ror	r25
    32fe:	87 95       	ror	r24
    3300:	77 95       	ror	r23
    3302:	67 95       	ror	r22
    3304:	ba 95       	dec	r27
    3306:	c9 f7       	brne	.-14     	; 0x32fa <__ultoa_invert+0x86>
    3308:	00 97       	sbiw	r24, 0x00	; 0
    330a:	61 05       	cpc	r22, r1
    330c:	71 05       	cpc	r23, r1
    330e:	08 95       	ret
    3310:	9b 01       	movw	r18, r22
    3312:	ac 01       	movw	r20, r24
    3314:	0a 2e       	mov	r0, r26
    3316:	06 94       	lsr	r0
    3318:	57 95       	ror	r21
    331a:	47 95       	ror	r20
    331c:	37 95       	ror	r19
    331e:	27 95       	ror	r18
    3320:	ba 95       	dec	r27
    3322:	c9 f7       	brne	.-14     	; 0x3316 <__ultoa_invert+0xa2>
    3324:	62 0f       	add	r22, r18
    3326:	73 1f       	adc	r23, r19
    3328:	84 1f       	adc	r24, r20
    332a:	95 1f       	adc	r25, r21
    332c:	a0 1d       	adc	r26, r0
    332e:	08 95       	ret

00003330 <calloc>:
    3330:	0f 93       	push	r16
    3332:	1f 93       	push	r17
    3334:	cf 93       	push	r28
    3336:	df 93       	push	r29
    3338:	86 9f       	mul	r24, r22
    333a:	80 01       	movw	r16, r0
    333c:	87 9f       	mul	r24, r23
    333e:	10 0d       	add	r17, r0
    3340:	96 9f       	mul	r25, r22
    3342:	10 0d       	add	r17, r0
    3344:	11 24       	eor	r1, r1
    3346:	c8 01       	movw	r24, r16
    3348:	0d d0       	rcall	.+26     	; 0x3364 <malloc>
    334a:	ec 01       	movw	r28, r24
    334c:	00 97       	sbiw	r24, 0x00	; 0
    334e:	21 f0       	breq	.+8      	; 0x3358 <calloc+0x28>
    3350:	a8 01       	movw	r20, r16
    3352:	60 e0       	ldi	r22, 0x00	; 0
    3354:	70 e0       	ldi	r23, 0x00	; 0
    3356:	33 d1       	rcall	.+614    	; 0x35be <memset>
    3358:	ce 01       	movw	r24, r28
    335a:	df 91       	pop	r29
    335c:	cf 91       	pop	r28
    335e:	1f 91       	pop	r17
    3360:	0f 91       	pop	r16
    3362:	08 95       	ret

00003364 <malloc>:
    3364:	cf 93       	push	r28
    3366:	df 93       	push	r29
    3368:	82 30       	cpi	r24, 0x02	; 2
    336a:	91 05       	cpc	r25, r1
    336c:	10 f4       	brcc	.+4      	; 0x3372 <malloc+0xe>
    336e:	82 e0       	ldi	r24, 0x02	; 2
    3370:	90 e0       	ldi	r25, 0x00	; 0
    3372:	e0 91 50 20 	lds	r30, 0x2050	; 0x802050 <__flp>
    3376:	f0 91 51 20 	lds	r31, 0x2051	; 0x802051 <__flp+0x1>
    337a:	20 e0       	ldi	r18, 0x00	; 0
    337c:	30 e0       	ldi	r19, 0x00	; 0
    337e:	c0 e0       	ldi	r28, 0x00	; 0
    3380:	d0 e0       	ldi	r29, 0x00	; 0
    3382:	30 97       	sbiw	r30, 0x00	; 0
    3384:	11 f1       	breq	.+68     	; 0x33ca <malloc+0x66>
    3386:	40 81       	ld	r20, Z
    3388:	51 81       	ldd	r21, Z+1	; 0x01
    338a:	48 17       	cp	r20, r24
    338c:	59 07       	cpc	r21, r25
    338e:	c0 f0       	brcs	.+48     	; 0x33c0 <malloc+0x5c>
    3390:	48 17       	cp	r20, r24
    3392:	59 07       	cpc	r21, r25
    3394:	61 f4       	brne	.+24     	; 0x33ae <malloc+0x4a>
    3396:	82 81       	ldd	r24, Z+2	; 0x02
    3398:	93 81       	ldd	r25, Z+3	; 0x03
    339a:	20 97       	sbiw	r28, 0x00	; 0
    339c:	19 f0       	breq	.+6      	; 0x33a4 <malloc+0x40>
    339e:	8a 83       	std	Y+2, r24	; 0x02
    33a0:	9b 83       	std	Y+3, r25	; 0x03
    33a2:	2b c0       	rjmp	.+86     	; 0x33fa <malloc+0x96>
    33a4:	80 93 50 20 	sts	0x2050, r24	; 0x802050 <__flp>
    33a8:	90 93 51 20 	sts	0x2051, r25	; 0x802051 <__flp+0x1>
    33ac:	26 c0       	rjmp	.+76     	; 0x33fa <malloc+0x96>
    33ae:	21 15       	cp	r18, r1
    33b0:	31 05       	cpc	r19, r1
    33b2:	19 f0       	breq	.+6      	; 0x33ba <malloc+0x56>
    33b4:	42 17       	cp	r20, r18
    33b6:	53 07       	cpc	r21, r19
    33b8:	18 f4       	brcc	.+6      	; 0x33c0 <malloc+0x5c>
    33ba:	9a 01       	movw	r18, r20
    33bc:	be 01       	movw	r22, r28
    33be:	df 01       	movw	r26, r30
    33c0:	ef 01       	movw	r28, r30
    33c2:	02 80       	ldd	r0, Z+2	; 0x02
    33c4:	f3 81       	ldd	r31, Z+3	; 0x03
    33c6:	e0 2d       	mov	r30, r0
    33c8:	dc cf       	rjmp	.-72     	; 0x3382 <malloc+0x1e>
    33ca:	21 15       	cp	r18, r1
    33cc:	31 05       	cpc	r19, r1
    33ce:	09 f1       	breq	.+66     	; 0x3412 <malloc+0xae>
    33d0:	28 1b       	sub	r18, r24
    33d2:	39 0b       	sbc	r19, r25
    33d4:	24 30       	cpi	r18, 0x04	; 4
    33d6:	31 05       	cpc	r19, r1
    33d8:	90 f4       	brcc	.+36     	; 0x33fe <malloc+0x9a>
    33da:	12 96       	adiw	r26, 0x02	; 2
    33dc:	8d 91       	ld	r24, X+
    33de:	9c 91       	ld	r25, X
    33e0:	13 97       	sbiw	r26, 0x03	; 3
    33e2:	61 15       	cp	r22, r1
    33e4:	71 05       	cpc	r23, r1
    33e6:	21 f0       	breq	.+8      	; 0x33f0 <malloc+0x8c>
    33e8:	fb 01       	movw	r30, r22
    33ea:	82 83       	std	Z+2, r24	; 0x02
    33ec:	93 83       	std	Z+3, r25	; 0x03
    33ee:	04 c0       	rjmp	.+8      	; 0x33f8 <malloc+0x94>
    33f0:	80 93 50 20 	sts	0x2050, r24	; 0x802050 <__flp>
    33f4:	90 93 51 20 	sts	0x2051, r25	; 0x802051 <__flp+0x1>
    33f8:	fd 01       	movw	r30, r26
    33fa:	32 96       	adiw	r30, 0x02	; 2
    33fc:	44 c0       	rjmp	.+136    	; 0x3486 <malloc+0x122>
    33fe:	fd 01       	movw	r30, r26
    3400:	e2 0f       	add	r30, r18
    3402:	f3 1f       	adc	r31, r19
    3404:	81 93       	st	Z+, r24
    3406:	91 93       	st	Z+, r25
    3408:	22 50       	subi	r18, 0x02	; 2
    340a:	31 09       	sbc	r19, r1
    340c:	2d 93       	st	X+, r18
    340e:	3c 93       	st	X, r19
    3410:	3a c0       	rjmp	.+116    	; 0x3486 <malloc+0x122>
    3412:	20 91 4e 20 	lds	r18, 0x204E	; 0x80204e <__brkval>
    3416:	30 91 4f 20 	lds	r19, 0x204F	; 0x80204f <__brkval+0x1>
    341a:	23 2b       	or	r18, r19
    341c:	41 f4       	brne	.+16     	; 0x342e <malloc+0xca>
    341e:	20 91 02 20 	lds	r18, 0x2002	; 0x802002 <__malloc_heap_start>
    3422:	30 91 03 20 	lds	r19, 0x2003	; 0x802003 <__malloc_heap_start+0x1>
    3426:	20 93 4e 20 	sts	0x204E, r18	; 0x80204e <__brkval>
    342a:	30 93 4f 20 	sts	0x204F, r19	; 0x80204f <__brkval+0x1>
    342e:	20 91 00 20 	lds	r18, 0x2000	; 0x802000 <__data_start>
    3432:	30 91 01 20 	lds	r19, 0x2001	; 0x802001 <__data_start+0x1>
    3436:	21 15       	cp	r18, r1
    3438:	31 05       	cpc	r19, r1
    343a:	41 f4       	brne	.+16     	; 0x344c <malloc+0xe8>
    343c:	2d b7       	in	r18, 0x3d	; 61
    343e:	3e b7       	in	r19, 0x3e	; 62
    3440:	40 91 04 20 	lds	r20, 0x2004	; 0x802004 <__malloc_margin>
    3444:	50 91 05 20 	lds	r21, 0x2005	; 0x802005 <__malloc_margin+0x1>
    3448:	24 1b       	sub	r18, r20
    344a:	35 0b       	sbc	r19, r21
    344c:	e0 91 4e 20 	lds	r30, 0x204E	; 0x80204e <__brkval>
    3450:	f0 91 4f 20 	lds	r31, 0x204F	; 0x80204f <__brkval+0x1>
    3454:	e2 17       	cp	r30, r18
    3456:	f3 07       	cpc	r31, r19
    3458:	a0 f4       	brcc	.+40     	; 0x3482 <malloc+0x11e>
    345a:	2e 1b       	sub	r18, r30
    345c:	3f 0b       	sbc	r19, r31
    345e:	28 17       	cp	r18, r24
    3460:	39 07       	cpc	r19, r25
    3462:	78 f0       	brcs	.+30     	; 0x3482 <malloc+0x11e>
    3464:	ac 01       	movw	r20, r24
    3466:	4e 5f       	subi	r20, 0xFE	; 254
    3468:	5f 4f       	sbci	r21, 0xFF	; 255
    346a:	24 17       	cp	r18, r20
    346c:	35 07       	cpc	r19, r21
    346e:	48 f0       	brcs	.+18     	; 0x3482 <malloc+0x11e>
    3470:	4e 0f       	add	r20, r30
    3472:	5f 1f       	adc	r21, r31
    3474:	40 93 4e 20 	sts	0x204E, r20	; 0x80204e <__brkval>
    3478:	50 93 4f 20 	sts	0x204F, r21	; 0x80204f <__brkval+0x1>
    347c:	81 93       	st	Z+, r24
    347e:	91 93       	st	Z+, r25
    3480:	02 c0       	rjmp	.+4      	; 0x3486 <malloc+0x122>
    3482:	e0 e0       	ldi	r30, 0x00	; 0
    3484:	f0 e0       	ldi	r31, 0x00	; 0
    3486:	cf 01       	movw	r24, r30
    3488:	df 91       	pop	r29
    348a:	cf 91       	pop	r28
    348c:	08 95       	ret

0000348e <free>:
    348e:	0f 93       	push	r16
    3490:	1f 93       	push	r17
    3492:	cf 93       	push	r28
    3494:	df 93       	push	r29
    3496:	00 97       	sbiw	r24, 0x00	; 0
    3498:	09 f4       	brne	.+2      	; 0x349c <free+0xe>
    349a:	8c c0       	rjmp	.+280    	; 0x35b4 <free+0x126>
    349c:	fc 01       	movw	r30, r24
    349e:	32 97       	sbiw	r30, 0x02	; 2
    34a0:	12 82       	std	Z+2, r1	; 0x02
    34a2:	13 82       	std	Z+3, r1	; 0x03
    34a4:	00 91 50 20 	lds	r16, 0x2050	; 0x802050 <__flp>
    34a8:	10 91 51 20 	lds	r17, 0x2051	; 0x802051 <__flp+0x1>
    34ac:	01 15       	cp	r16, r1
    34ae:	11 05       	cpc	r17, r1
    34b0:	81 f4       	brne	.+32     	; 0x34d2 <free+0x44>
    34b2:	20 81       	ld	r18, Z
    34b4:	31 81       	ldd	r19, Z+1	; 0x01
    34b6:	82 0f       	add	r24, r18
    34b8:	93 1f       	adc	r25, r19
    34ba:	20 91 4e 20 	lds	r18, 0x204E	; 0x80204e <__brkval>
    34be:	30 91 4f 20 	lds	r19, 0x204F	; 0x80204f <__brkval+0x1>
    34c2:	28 17       	cp	r18, r24
    34c4:	39 07       	cpc	r19, r25
    34c6:	79 f5       	brne	.+94     	; 0x3526 <free+0x98>
    34c8:	e0 93 4e 20 	sts	0x204E, r30	; 0x80204e <__brkval>
    34cc:	f0 93 4f 20 	sts	0x204F, r31	; 0x80204f <__brkval+0x1>
    34d0:	71 c0       	rjmp	.+226    	; 0x35b4 <free+0x126>
    34d2:	d8 01       	movw	r26, r16
    34d4:	40 e0       	ldi	r20, 0x00	; 0
    34d6:	50 e0       	ldi	r21, 0x00	; 0
    34d8:	ae 17       	cp	r26, r30
    34da:	bf 07       	cpc	r27, r31
    34dc:	50 f4       	brcc	.+20     	; 0x34f2 <free+0x64>
    34de:	12 96       	adiw	r26, 0x02	; 2
    34e0:	2d 91       	ld	r18, X+
    34e2:	3c 91       	ld	r19, X
    34e4:	13 97       	sbiw	r26, 0x03	; 3
    34e6:	ad 01       	movw	r20, r26
    34e8:	21 15       	cp	r18, r1
    34ea:	31 05       	cpc	r19, r1
    34ec:	09 f1       	breq	.+66     	; 0x3530 <free+0xa2>
    34ee:	d9 01       	movw	r26, r18
    34f0:	f3 cf       	rjmp	.-26     	; 0x34d8 <free+0x4a>
    34f2:	9d 01       	movw	r18, r26
    34f4:	da 01       	movw	r26, r20
    34f6:	22 83       	std	Z+2, r18	; 0x02
    34f8:	33 83       	std	Z+3, r19	; 0x03
    34fa:	60 81       	ld	r22, Z
    34fc:	71 81       	ldd	r23, Z+1	; 0x01
    34fe:	86 0f       	add	r24, r22
    3500:	97 1f       	adc	r25, r23
    3502:	82 17       	cp	r24, r18
    3504:	93 07       	cpc	r25, r19
    3506:	69 f4       	brne	.+26     	; 0x3522 <free+0x94>
    3508:	ec 01       	movw	r28, r24
    350a:	28 81       	ld	r18, Y
    350c:	39 81       	ldd	r19, Y+1	; 0x01
    350e:	26 0f       	add	r18, r22
    3510:	37 1f       	adc	r19, r23
    3512:	2e 5f       	subi	r18, 0xFE	; 254
    3514:	3f 4f       	sbci	r19, 0xFF	; 255
    3516:	20 83       	st	Z, r18
    3518:	31 83       	std	Z+1, r19	; 0x01
    351a:	8a 81       	ldd	r24, Y+2	; 0x02
    351c:	9b 81       	ldd	r25, Y+3	; 0x03
    351e:	82 83       	std	Z+2, r24	; 0x02
    3520:	93 83       	std	Z+3, r25	; 0x03
    3522:	45 2b       	or	r20, r21
    3524:	29 f4       	brne	.+10     	; 0x3530 <free+0xa2>
    3526:	e0 93 50 20 	sts	0x2050, r30	; 0x802050 <__flp>
    352a:	f0 93 51 20 	sts	0x2051, r31	; 0x802051 <__flp+0x1>
    352e:	42 c0       	rjmp	.+132    	; 0x35b4 <free+0x126>
    3530:	12 96       	adiw	r26, 0x02	; 2
    3532:	ed 93       	st	X+, r30
    3534:	fc 93       	st	X, r31
    3536:	13 97       	sbiw	r26, 0x03	; 3
    3538:	ed 01       	movw	r28, r26
    353a:	49 91       	ld	r20, Y+
    353c:	59 91       	ld	r21, Y+
    353e:	9e 01       	movw	r18, r28
    3540:	24 0f       	add	r18, r20
    3542:	35 1f       	adc	r19, r21
    3544:	e2 17       	cp	r30, r18
    3546:	f3 07       	cpc	r31, r19
    3548:	71 f4       	brne	.+28     	; 0x3566 <free+0xd8>
    354a:	80 81       	ld	r24, Z
    354c:	91 81       	ldd	r25, Z+1	; 0x01
    354e:	84 0f       	add	r24, r20
    3550:	95 1f       	adc	r25, r21
    3552:	02 96       	adiw	r24, 0x02	; 2
    3554:	8d 93       	st	X+, r24
    3556:	9c 93       	st	X, r25
    3558:	11 97       	sbiw	r26, 0x01	; 1
    355a:	82 81       	ldd	r24, Z+2	; 0x02
    355c:	93 81       	ldd	r25, Z+3	; 0x03
    355e:	12 96       	adiw	r26, 0x02	; 2
    3560:	8d 93       	st	X+, r24
    3562:	9c 93       	st	X, r25
    3564:	13 97       	sbiw	r26, 0x03	; 3
    3566:	e0 e0       	ldi	r30, 0x00	; 0
    3568:	f0 e0       	ldi	r31, 0x00	; 0
    356a:	d8 01       	movw	r26, r16
    356c:	12 96       	adiw	r26, 0x02	; 2
    356e:	8d 91       	ld	r24, X+
    3570:	9c 91       	ld	r25, X
    3572:	13 97       	sbiw	r26, 0x03	; 3
    3574:	00 97       	sbiw	r24, 0x00	; 0
    3576:	19 f0       	breq	.+6      	; 0x357e <free+0xf0>
    3578:	f8 01       	movw	r30, r16
    357a:	8c 01       	movw	r16, r24
    357c:	f6 cf       	rjmp	.-20     	; 0x356a <free+0xdc>
    357e:	8d 91       	ld	r24, X+
    3580:	9c 91       	ld	r25, X
    3582:	98 01       	movw	r18, r16
    3584:	2e 5f       	subi	r18, 0xFE	; 254
    3586:	3f 4f       	sbci	r19, 0xFF	; 255
    3588:	82 0f       	add	r24, r18
    358a:	93 1f       	adc	r25, r19
    358c:	20 91 4e 20 	lds	r18, 0x204E	; 0x80204e <__brkval>
    3590:	30 91 4f 20 	lds	r19, 0x204F	; 0x80204f <__brkval+0x1>
    3594:	28 17       	cp	r18, r24
    3596:	39 07       	cpc	r19, r25
    3598:	69 f4       	brne	.+26     	; 0x35b4 <free+0x126>
    359a:	30 97       	sbiw	r30, 0x00	; 0
    359c:	29 f4       	brne	.+10     	; 0x35a8 <free+0x11a>
    359e:	10 92 50 20 	sts	0x2050, r1	; 0x802050 <__flp>
    35a2:	10 92 51 20 	sts	0x2051, r1	; 0x802051 <__flp+0x1>
    35a6:	02 c0       	rjmp	.+4      	; 0x35ac <free+0x11e>
    35a8:	12 82       	std	Z+2, r1	; 0x02
    35aa:	13 82       	std	Z+3, r1	; 0x03
    35ac:	00 93 4e 20 	sts	0x204E, r16	; 0x80204e <__brkval>
    35b0:	10 93 4f 20 	sts	0x204F, r17	; 0x80204f <__brkval+0x1>
    35b4:	df 91       	pop	r29
    35b6:	cf 91       	pop	r28
    35b8:	1f 91       	pop	r17
    35ba:	0f 91       	pop	r16
    35bc:	08 95       	ret

000035be <memset>:
    35be:	dc 01       	movw	r26, r24
    35c0:	01 c0       	rjmp	.+2      	; 0x35c4 <memset+0x6>
    35c2:	6d 93       	st	X+, r22
    35c4:	41 50       	subi	r20, 0x01	; 1
    35c6:	50 40       	sbci	r21, 0x00	; 0
    35c8:	e0 f7       	brcc	.-8      	; 0x35c2 <memset+0x4>
    35ca:	08 95       	ret

000035cc <_exit>:
    35cc:	f8 94       	cli

000035ce <__stop_program>:
    35ce:	ff cf       	rjmp	.-2      	; 0x35ce <__stop_program>
