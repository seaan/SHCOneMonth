
TEAM2 ONE MONTH CODE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002546  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00802000  00002546  000025da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001b  00802012  00802012  000025ec  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000025ec  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002648  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000328  00000000  00000000  00002688  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000a426  00000000  00000000  000029b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001d24  00000000  00000000  0000cdd6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00007c19  00000000  00000000  0000eafa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000978  00000000  00000000  00016714  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0002a4e0  00000000  00000000  0001708c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000305f  00000000  00000000  0004156c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000288  00000000  00000000  000445d0  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0000b0da  00000000  00000000  00044858  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	3a c1       	rjmp	.+628    	; 0x276 <__ctors_end>
       2:	00 00       	nop
       4:	5e c1       	rjmp	.+700    	; 0x2c2 <__bad_interrupt>
       6:	00 00       	nop
       8:	5c c1       	rjmp	.+696    	; 0x2c2 <__bad_interrupt>
       a:	00 00       	nop
       c:	5a c1       	rjmp	.+692    	; 0x2c2 <__bad_interrupt>
       e:	00 00       	nop
      10:	58 c1       	rjmp	.+688    	; 0x2c2 <__bad_interrupt>
      12:	00 00       	nop
      14:	56 c1       	rjmp	.+684    	; 0x2c2 <__bad_interrupt>
      16:	00 00       	nop
      18:	54 c1       	rjmp	.+680    	; 0x2c2 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	52 c1       	rjmp	.+676    	; 0x2c2 <__bad_interrupt>
      1e:	00 00       	nop
      20:	50 c1       	rjmp	.+672    	; 0x2c2 <__bad_interrupt>
      22:	00 00       	nop
      24:	4e c1       	rjmp	.+668    	; 0x2c2 <__bad_interrupt>
      26:	00 00       	nop
      28:	4c c1       	rjmp	.+664    	; 0x2c2 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4a c1       	rjmp	.+660    	; 0x2c2 <__bad_interrupt>
      2e:	00 00       	nop
      30:	48 c1       	rjmp	.+656    	; 0x2c2 <__bad_interrupt>
      32:	00 00       	nop
      34:	46 c1       	rjmp	.+652    	; 0x2c2 <__bad_interrupt>
      36:	00 00       	nop
      38:	44 c1       	rjmp	.+648    	; 0x2c2 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	42 c1       	rjmp	.+644    	; 0x2c2 <__bad_interrupt>
      3e:	00 00       	nop
      40:	40 c1       	rjmp	.+640    	; 0x2c2 <__bad_interrupt>
      42:	00 00       	nop
      44:	3e c1       	rjmp	.+636    	; 0x2c2 <__bad_interrupt>
      46:	00 00       	nop
      48:	3c c1       	rjmp	.+632    	; 0x2c2 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3a c1       	rjmp	.+628    	; 0x2c2 <__bad_interrupt>
      4e:	00 00       	nop
      50:	38 c1       	rjmp	.+624    	; 0x2c2 <__bad_interrupt>
      52:	00 00       	nop
      54:	36 c1       	rjmp	.+620    	; 0x2c2 <__bad_interrupt>
      56:	00 00       	nop
      58:	34 c1       	rjmp	.+616    	; 0x2c2 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	32 c1       	rjmp	.+612    	; 0x2c2 <__bad_interrupt>
      5e:	00 00       	nop
      60:	30 c1       	rjmp	.+608    	; 0x2c2 <__bad_interrupt>
      62:	00 00       	nop
      64:	2e c1       	rjmp	.+604    	; 0x2c2 <__bad_interrupt>
      66:	00 00       	nop
      68:	2c c1       	rjmp	.+600    	; 0x2c2 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2a c1       	rjmp	.+596    	; 0x2c2 <__bad_interrupt>
      6e:	00 00       	nop
      70:	28 c1       	rjmp	.+592    	; 0x2c2 <__bad_interrupt>
      72:	00 00       	nop
      74:	26 c1       	rjmp	.+588    	; 0x2c2 <__bad_interrupt>
      76:	00 00       	nop
      78:	24 c1       	rjmp	.+584    	; 0x2c2 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	22 c1       	rjmp	.+580    	; 0x2c2 <__bad_interrupt>
      7e:	00 00       	nop
      80:	20 c1       	rjmp	.+576    	; 0x2c2 <__bad_interrupt>
      82:	00 00       	nop
      84:	1e c1       	rjmp	.+572    	; 0x2c2 <__bad_interrupt>
      86:	00 00       	nop
      88:	1c c1       	rjmp	.+568    	; 0x2c2 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	1a c1       	rjmp	.+564    	; 0x2c2 <__bad_interrupt>
      8e:	00 00       	nop
      90:	18 c1       	rjmp	.+560    	; 0x2c2 <__bad_interrupt>
      92:	00 00       	nop
      94:	16 c1       	rjmp	.+556    	; 0x2c2 <__bad_interrupt>
      96:	00 00       	nop
      98:	14 c1       	rjmp	.+552    	; 0x2c2 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	fa c3       	rjmp	.+2036   	; 0x892 <__vector_39>
      9e:	00 00       	nop
      a0:	35 c4       	rjmp	.+2154   	; 0x90c <__vector_40>
      a2:	00 00       	nop
      a4:	70 c4       	rjmp	.+2272   	; 0x986 <__vector_41>
      a6:	00 00       	nop
      a8:	ab c4       	rjmp	.+2390   	; 0xa00 <__vector_42>
      aa:	00 00       	nop
      ac:	0a c1       	rjmp	.+532    	; 0x2c2 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	08 c1       	rjmp	.+528    	; 0x2c2 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	06 c1       	rjmp	.+524    	; 0x2c2 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	04 c1       	rjmp	.+520    	; 0x2c2 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	02 c1       	rjmp	.+516    	; 0x2c2 <__bad_interrupt>
      be:	00 00       	nop
      c0:	00 c1       	rjmp	.+512    	; 0x2c2 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	fe c0       	rjmp	.+508    	; 0x2c2 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	fc c0       	rjmp	.+504    	; 0x2c2 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	fa c0       	rjmp	.+500    	; 0x2c2 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	f8 c0       	rjmp	.+496    	; 0x2c2 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	f6 c0       	rjmp	.+492    	; 0x2c2 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	f4 c0       	rjmp	.+488    	; 0x2c2 <__bad_interrupt>
      da:	00 00       	nop
      dc:	f2 c0       	rjmp	.+484    	; 0x2c2 <__bad_interrupt>
      de:	00 00       	nop
      e0:	f0 c0       	rjmp	.+480    	; 0x2c2 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	ee c0       	rjmp	.+476    	; 0x2c2 <__bad_interrupt>
      e6:	00 00       	nop
      e8:	ec c0       	rjmp	.+472    	; 0x2c2 <__bad_interrupt>
      ea:	00 00       	nop
      ec:	ea c0       	rjmp	.+468    	; 0x2c2 <__bad_interrupt>
      ee:	00 00       	nop
      f0:	e8 c0       	rjmp	.+464    	; 0x2c2 <__bad_interrupt>
      f2:	00 00       	nop
      f4:	e6 c0       	rjmp	.+460    	; 0x2c2 <__bad_interrupt>
      f6:	00 00       	nop
      f8:	e4 c0       	rjmp	.+456    	; 0x2c2 <__bad_interrupt>
      fa:	00 00       	nop
      fc:	e2 c0       	rjmp	.+452    	; 0x2c2 <__bad_interrupt>
      fe:	00 00       	nop
     100:	e0 c0       	rjmp	.+448    	; 0x2c2 <__bad_interrupt>
     102:	00 00       	nop
     104:	de c0       	rjmp	.+444    	; 0x2c2 <__bad_interrupt>
     106:	00 00       	nop
     108:	dc c0       	rjmp	.+440    	; 0x2c2 <__bad_interrupt>
     10a:	00 00       	nop
     10c:	da c0       	rjmp	.+436    	; 0x2c2 <__bad_interrupt>
     10e:	00 00       	nop
     110:	d8 c0       	rjmp	.+432    	; 0x2c2 <__bad_interrupt>
     112:	00 00       	nop
     114:	d6 c0       	rjmp	.+428    	; 0x2c2 <__bad_interrupt>
     116:	00 00       	nop
     118:	d4 c0       	rjmp	.+424    	; 0x2c2 <__bad_interrupt>
     11a:	00 00       	nop
     11c:	c6 c2       	rjmp	.+1420   	; 0x6aa <__vector_71>
     11e:	00 00       	nop
     120:	01 c3       	rjmp	.+1538   	; 0x724 <__vector_72>
     122:	00 00       	nop
     124:	3c c3       	rjmp	.+1656   	; 0x79e <__vector_73>
     126:	00 00       	nop
     128:	77 c3       	rjmp	.+1774   	; 0x818 <__vector_74>
     12a:	00 00       	nop
     12c:	ca c0       	rjmp	.+404    	; 0x2c2 <__bad_interrupt>
     12e:	00 00       	nop
     130:	c8 c0       	rjmp	.+400    	; 0x2c2 <__bad_interrupt>
     132:	00 00       	nop
     134:	c6 c0       	rjmp	.+396    	; 0x2c2 <__bad_interrupt>
     136:	00 00       	nop
     138:	c4 c0       	rjmp	.+392    	; 0x2c2 <__bad_interrupt>
     13a:	00 00       	nop
     13c:	c2 c0       	rjmp	.+388    	; 0x2c2 <__bad_interrupt>
     13e:	00 00       	nop
     140:	c0 c0       	rjmp	.+384    	; 0x2c2 <__bad_interrupt>
     142:	00 00       	nop
     144:	be c0       	rjmp	.+380    	; 0x2c2 <__bad_interrupt>
     146:	00 00       	nop
     148:	bc c0       	rjmp	.+376    	; 0x2c2 <__bad_interrupt>
     14a:	00 00       	nop
     14c:	ba c0       	rjmp	.+372    	; 0x2c2 <__bad_interrupt>
     14e:	00 00       	nop
     150:	b8 c0       	rjmp	.+368    	; 0x2c2 <__bad_interrupt>
     152:	00 00       	nop
     154:	b6 c0       	rjmp	.+364    	; 0x2c2 <__bad_interrupt>
     156:	00 00       	nop
     158:	b4 c0       	rjmp	.+360    	; 0x2c2 <__bad_interrupt>
     15a:	00 00       	nop
     15c:	b2 c0       	rjmp	.+356    	; 0x2c2 <__bad_interrupt>
     15e:	00 00       	nop
     160:	b0 c0       	rjmp	.+352    	; 0x2c2 <__bad_interrupt>
     162:	00 00       	nop
     164:	ae c0       	rjmp	.+348    	; 0x2c2 <__bad_interrupt>
     166:	00 00       	nop
     168:	ac c0       	rjmp	.+344    	; 0x2c2 <__bad_interrupt>
     16a:	00 00       	nop
     16c:	aa c0       	rjmp	.+340    	; 0x2c2 <__bad_interrupt>
     16e:	00 00       	nop
     170:	a8 c0       	rjmp	.+336    	; 0x2c2 <__bad_interrupt>
     172:	00 00       	nop
     174:	a6 c0       	rjmp	.+332    	; 0x2c2 <__bad_interrupt>
     176:	00 00       	nop
     178:	a4 c0       	rjmp	.+328    	; 0x2c2 <__bad_interrupt>
     17a:	00 00       	nop
     17c:	a2 c0       	rjmp	.+324    	; 0x2c2 <__bad_interrupt>
     17e:	00 00       	nop
     180:	a0 c0       	rjmp	.+320    	; 0x2c2 <__bad_interrupt>
     182:	00 00       	nop
     184:	9e c0       	rjmp	.+316    	; 0x2c2 <__bad_interrupt>
     186:	00 00       	nop
     188:	9c c0       	rjmp	.+312    	; 0x2c2 <__bad_interrupt>
     18a:	00 00       	nop
     18c:	9a c0       	rjmp	.+308    	; 0x2c2 <__bad_interrupt>
     18e:	00 00       	nop
     190:	98 c0       	rjmp	.+304    	; 0x2c2 <__bad_interrupt>
     192:	00 00       	nop
     194:	96 c0       	rjmp	.+300    	; 0x2c2 <__bad_interrupt>
     196:	00 00       	nop
     198:	94 c0       	rjmp	.+296    	; 0x2c2 <__bad_interrupt>
     19a:	00 00       	nop
     19c:	92 c0       	rjmp	.+292    	; 0x2c2 <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	90 c0       	rjmp	.+288    	; 0x2c2 <__bad_interrupt>
     1a2:	00 00       	nop
     1a4:	8e c0       	rjmp	.+284    	; 0x2c2 <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	8c c0       	rjmp	.+280    	; 0x2c2 <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	8a c0       	rjmp	.+276    	; 0x2c2 <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	88 c0       	rjmp	.+272    	; 0x2c2 <__bad_interrupt>
     1b2:	00 00       	nop
     1b4:	86 c0       	rjmp	.+268    	; 0x2c2 <__bad_interrupt>
     1b6:	00 00       	nop
     1b8:	84 c0       	rjmp	.+264    	; 0x2c2 <__bad_interrupt>
     1ba:	00 00       	nop
     1bc:	82 c0       	rjmp	.+260    	; 0x2c2 <__bad_interrupt>
     1be:	00 00       	nop
     1c0:	80 c0       	rjmp	.+256    	; 0x2c2 <__bad_interrupt>
     1c2:	00 00       	nop
     1c4:	7e c0       	rjmp	.+252    	; 0x2c2 <__bad_interrupt>
     1c6:	00 00       	nop
     1c8:	7c c0       	rjmp	.+248    	; 0x2c2 <__bad_interrupt>
     1ca:	00 00       	nop
     1cc:	7a c0       	rjmp	.+244    	; 0x2c2 <__bad_interrupt>
     1ce:	00 00       	nop
     1d0:	78 c0       	rjmp	.+240    	; 0x2c2 <__bad_interrupt>
     1d2:	00 00       	nop
     1d4:	76 c0       	rjmp	.+236    	; 0x2c2 <__bad_interrupt>
     1d6:	00 00       	nop
     1d8:	74 c0       	rjmp	.+232    	; 0x2c2 <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	72 c0       	rjmp	.+228    	; 0x2c2 <__bad_interrupt>
     1de:	00 00       	nop
     1e0:	70 c0       	rjmp	.+224    	; 0x2c2 <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	6e c0       	rjmp	.+220    	; 0x2c2 <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	6c c0       	rjmp	.+216    	; 0x2c2 <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	6a c0       	rjmp	.+212    	; 0x2c2 <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	68 c0       	rjmp	.+208    	; 0x2c2 <__bad_interrupt>
     1f2:	00 00       	nop
     1f4:	08 00       	.word	0x0008	; ????
     1f6:	00 00       	nop
     1f8:	be 92       	st	-X, r11
     1fa:	24 49       	sbci	r18, 0x94	; 148
     1fc:	12 3e       	cpi	r17, 0xE2	; 226
     1fe:	ab aa       	std	Y+51, r10	; 0x33
     200:	aa 2a       	or	r10, r26
     202:	be cd       	rjmp	.-1156   	; 0xfffffd80 <__eeprom_end+0xff7efd80>
     204:	cc cc       	rjmp	.-1640   	; 0xfffffb9e <__eeprom_end+0xff7efb9e>
     206:	4c 3e       	cpi	r20, 0xEC	; 236
     208:	00 00       	nop
     20a:	00 80       	ld	r0, Z
     20c:	be ab       	std	Y+54, r27	; 0x36
     20e:	aa aa       	std	Y+50, r10	; 0x32
     210:	aa 3e       	cpi	r26, 0xEA	; 234
     212:	00 00       	nop
     214:	00 00       	nop
     216:	bf 00       	.word	0x00bf	; ????
     218:	00 00       	nop
     21a:	80 3f       	cpi	r24, 0xF0	; 240
     21c:	00 00       	nop
     21e:	00 00       	nop
     220:	00 08       	sbc	r0, r0
     222:	41 78       	andi	r20, 0x81	; 129
     224:	d3 bb       	out	0x13, r29	; 19
     226:	43 87       	std	Z+11, r20	; 0x0b
     228:	d1 13       	cpse	r29, r17
     22a:	3d 19       	sub	r19, r13
     22c:	0e 3c       	cpi	r16, 0xCE	; 206
     22e:	c3 bd       	out	0x23, r28	; 35
     230:	42 82       	std	Z+2, r4	; 0x02
     232:	ad 2b       	or	r26, r29
     234:	3e 68       	ori	r19, 0x8E	; 142
     236:	ec 82       	std	Y+4, r14	; 0x04
     238:	76 be       	out	0x36, r7	; 54
     23a:	d9 8f       	std	Y+25, r29	; 0x19
     23c:	e1 a9       	ldd	r30, Z+49	; 0x31
     23e:	3e 4c       	sbci	r19, 0xCE	; 206
     240:	80 ef       	ldi	r24, 0xF0	; 240
     242:	ff be       	out	0x3f, r15	; 63
     244:	01 c4       	rjmp	.+2050   	; 0xa48 <__vector_42+0x48>
     246:	ff 7f       	andi	r31, 0xFF	; 255
     248:	3f 00       	.word	0x003f	; ????
     24a:	00 00       	nop
     24c:	00 00       	nop
     24e:	07 63       	ori	r16, 0x37	; 55
     250:	42 36       	cpi	r20, 0x62	; 98
     252:	b7 9b       	sbis	0x16, 7	; 22
     254:	d8 a7       	std	Y+40, r29	; 0x28
     256:	1a 39       	cpi	r17, 0x9A	; 154
     258:	68 56       	subi	r22, 0x68	; 104
     25a:	18 ae       	std	Y+56, r1	; 0x38
     25c:	ba ab       	std	Y+50, r27	; 0x32
     25e:	55 8c       	ldd	r5, Z+29	; 0x1d
     260:	1d 3c       	cpi	r17, 0xCD	; 205
     262:	b7 cc       	rjmp	.-1682   	; 0xfffffbd2 <__eeprom_end+0xff7efbd2>
     264:	57 63       	ori	r21, 0x37	; 55
     266:	bd 6d       	ori	r27, 0xDD	; 221
     268:	ed fd       	.word	0xfded	; ????
     26a:	75 3e       	cpi	r23, 0xE5	; 229
     26c:	f6 17       	cp	r31, r22
     26e:	72 31       	cpi	r23, 0x12	; 18
     270:	bf 00       	.word	0x00bf	; ????
     272:	00 00       	nop
     274:	80 3f       	cpi	r24, 0xF0	; 240

00000276 <__ctors_end>:
     276:	11 24       	eor	r1, r1
     278:	1f be       	out	0x3f, r1	; 63
     27a:	cf ef       	ldi	r28, 0xFF	; 255
     27c:	cd bf       	out	0x3d, r28	; 61
     27e:	df e3       	ldi	r29, 0x3F	; 63
     280:	de bf       	out	0x3e, r29	; 62
     282:	00 e0       	ldi	r16, 0x00	; 0
     284:	0c bf       	out	0x3c, r16	; 60
     286:	18 be       	out	0x38, r1	; 56
     288:	19 be       	out	0x39, r1	; 57
     28a:	1a be       	out	0x3a, r1	; 58
     28c:	1b be       	out	0x3b, r1	; 59

0000028e <__do_copy_data>:
     28e:	10 e2       	ldi	r17, 0x20	; 32
     290:	a0 e0       	ldi	r26, 0x00	; 0
     292:	b0 e2       	ldi	r27, 0x20	; 32
     294:	e6 e4       	ldi	r30, 0x46	; 70
     296:	f5 e2       	ldi	r31, 0x25	; 37
     298:	00 e0       	ldi	r16, 0x00	; 0
     29a:	0b bf       	out	0x3b, r16	; 59
     29c:	02 c0       	rjmp	.+4      	; 0x2a2 <__do_copy_data+0x14>
     29e:	07 90       	elpm	r0, Z+
     2a0:	0d 92       	st	X+, r0
     2a2:	a2 31       	cpi	r26, 0x12	; 18
     2a4:	b1 07       	cpc	r27, r17
     2a6:	d9 f7       	brne	.-10     	; 0x29e <__do_copy_data+0x10>
     2a8:	1b be       	out	0x3b, r1	; 59

000002aa <__do_clear_bss>:
     2aa:	20 e2       	ldi	r18, 0x20	; 32
     2ac:	a2 e1       	ldi	r26, 0x12	; 18
     2ae:	b0 e2       	ldi	r27, 0x20	; 32
     2b0:	01 c0       	rjmp	.+2      	; 0x2b4 <.do_clear_bss_start>

000002b2 <.do_clear_bss_loop>:
     2b2:	1d 92       	st	X+, r1

000002b4 <.do_clear_bss_start>:
     2b4:	ad 32       	cpi	r26, 0x2D	; 45
     2b6:	b2 07       	cpc	r27, r18
     2b8:	e1 f7       	brne	.-8      	; 0x2b2 <.do_clear_bss_loop>
     2ba:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <main>
     2be:	0c 94 a1 12 	jmp	0x2542	; 0x2542 <_exit>

000002c2 <__bad_interrupt>:
     2c2:	9e ce       	rjmp	.-708    	; 0x0 <__vectors>

000002c4 <getAltitude>:
 #include <asf.h>
 #include <math.h>
 #include "Calculations/Altitude/getAltitude.h"
 #include "Drivers/Pressure/getPressure.h"
 #include "Drivers/Temperature/getTemperature.h"
 float getAltitude(void){
     2c4:	8f 92       	push	r8
     2c6:	9f 92       	push	r9
     2c8:	af 92       	push	r10
     2ca:	bf 92       	push	r11
     2cc:	cf 92       	push	r12
     2ce:	df 92       	push	r13
     2d0:	ef 92       	push	r14
     2d2:	ff 92       	push	r15
	float constant = 0.190263236508483566887195756610229817256134454173664313568;
	return (getTemperature()/-0.0065)*(powf(getPressure()/101325,constant)-1);  //Equation found here: http://www.mide.com/pages/air-pressure-at-altitude-calculator, PRESSURE IN PASCALS, TEMP IN KELVIN.
     2d4:	91 d6       	rcall	.+3362   	; 0xff8 <getTemperature>
     2d6:	6b 01       	movw	r12, r22
     2d8:	7c 01       	movw	r14, r24
     2da:	8a d6       	rcall	.+3348   	; 0xff0 <getPressure>
     2dc:	20 e8       	ldi	r18, 0x80	; 128
     2de:	36 ee       	ldi	r19, 0xE6	; 230
     2e0:	45 ec       	ldi	r20, 0xC5	; 197
     2e2:	57 e4       	ldi	r21, 0x47	; 71
     2e4:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <__divsf3>
     2e8:	2e e5       	ldi	r18, 0x5E	; 94
     2ea:	34 ed       	ldi	r19, 0xD4	; 212
     2ec:	42 e4       	ldi	r20, 0x42	; 66
     2ee:	5e e3       	ldi	r21, 0x3E	; 62
     2f0:	0e 94 c0 0c 	call	0x1980	; 0x1980 <pow>
     2f4:	4b 01       	movw	r8, r22
     2f6:	5c 01       	movw	r10, r24
     2f8:	24 ef       	ldi	r18, 0xF4	; 244
     2fa:	3d ef       	ldi	r19, 0xFD	; 253
     2fc:	44 ed       	ldi	r20, 0xD4	; 212
     2fe:	5b eb       	ldi	r21, 0xBB	; 187
     300:	c7 01       	movw	r24, r14
     302:	b6 01       	movw	r22, r12
     304:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <__divsf3>
     308:	6b 01       	movw	r12, r22
     30a:	7c 01       	movw	r14, r24
     30c:	20 e0       	ldi	r18, 0x00	; 0
     30e:	30 e0       	ldi	r19, 0x00	; 0
     310:	40 e8       	ldi	r20, 0x80	; 128
     312:	5f e3       	ldi	r21, 0x3F	; 63
     314:	c5 01       	movw	r24, r10
     316:	b4 01       	movw	r22, r8
     318:	0e 94 09 0a 	call	0x1412	; 0x1412 <__subsf3>
     31c:	9b 01       	movw	r18, r22
     31e:	ac 01       	movw	r20, r24
     320:	c7 01       	movw	r24, r14
     322:	b6 01       	movw	r22, r12
     324:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <__mulsf3>
     328:	ff 90       	pop	r15
     32a:	ef 90       	pop	r14
     32c:	df 90       	pop	r13
     32e:	cf 90       	pop	r12
     330:	bf 90       	pop	r11
     332:	af 90       	pop	r10
     334:	9f 90       	pop	r9
     336:	8f 90       	pop	r8
     338:	08 95       	ret

0000033a <getVelocity>:
 #include "Calculations/Altitude/getAltitude.h"

 float exponentialSmoothing(float previousVel, float velocity);

 //Velocity function
 float getVelocity(void){
     33a:	4f 92       	push	r4
     33c:	5f 92       	push	r5
     33e:	6f 92       	push	r6
     340:	7f 92       	push	r7
     342:	8f 92       	push	r8
     344:	9f 92       	push	r9
     346:	af 92       	push	r10
     348:	bf 92       	push	r11
     34a:	cf 92       	push	r12
     34c:	df 92       	push	r13
     34e:	ef 92       	push	r14
     350:	ff 92       	push	r15
     352:	0f 93       	push	r16
     354:	1f 93       	push	r17
     356:	cf 93       	push	r28
     358:	df 93       	push	r29
     35a:	cd b7       	in	r28, 0x3d	; 61
     35c:	de b7       	in	r29, 0x3e	; 62
     35e:	c8 5c       	subi	r28, 0xC8	; 200
     360:	d1 09       	sbc	r29, r1
     362:	cd bf       	out	0x3d, r28	; 61
     364:	de bf       	out	0x3e, r29	; 62
	float velocityTable[25]; //Creates an array of size 25
	float velocity;
	float finalAlt = getAltitude(); //sets final altitude for the loop to the current altitude. We will throw out the first element of the array, as it will equal near zero.
     366:	ae df       	rcall	.-164    	; 0x2c4 <getAltitude>
     368:	6b 01       	movw	r12, r22
     36a:	7c 01       	movw	r14, r24
     36c:	8e 01       	movw	r16, r28
     36e:	0f 5f       	subi	r16, 0xFF	; 255
     370:	1f 4f       	sbci	r17, 0xFF	; 255
     372:	5e 01       	movw	r10, r28
     374:	25 e6       	ldi	r18, 0x65	; 101
     376:	a2 0e       	add	r10, r18
     378:	b1 1c       	adc	r11, r1
	for(int i = 0; i < 25; i++){ //For each element
		velocity = (finalAlt - getAltitude())/.01; //sets the delta altitude for this iteration to the final altitude of the previous iteration subtracted by the current altitude.
     37a:	a4 df       	rcall	.-184    	; 0x2c4 <getAltitude>
     37c:	9b 01       	movw	r18, r22
     37e:	ac 01       	movw	r20, r24
     380:	c7 01       	movw	r24, r14
     382:	b6 01       	movw	r22, r12
     384:	0e 94 09 0a 	call	0x1412	; 0x1412 <__subsf3>
     388:	2a e0       	ldi	r18, 0x0A	; 10
     38a:	37 ed       	ldi	r19, 0xD7	; 215
     38c:	43 e2       	ldi	r20, 0x23	; 35
     38e:	5c e3       	ldi	r21, 0x3C	; 60
     390:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <__divsf3>
		velocityTable[i] = velocity; //Set the current element to the delta altitude.
     394:	f8 01       	movw	r30, r16
     396:	61 93       	st	Z+, r22
     398:	71 93       	st	Z+, r23
     39a:	81 93       	st	Z+, r24
     39c:	91 93       	st	Z+, r25
     39e:	8f 01       	movw	r16, r30
		finalAlt = getAltitude(); //0,0 is placeholder, sets the final altitude for the iteration to the current altitude.
     3a0:	91 df       	rcall	.-222    	; 0x2c4 <getAltitude>
     3a2:	6b 01       	movw	r12, r22
     3a4:	7c 01       	movw	r14, r24
     3a6:	80 e0       	ldi	r24, 0x00	; 0
     3a8:	90 e0       	ldi	r25, 0x00	; 0
 * @{
 */
__always_optimize
static inline void __portable_avr_delay_cycles(unsigned long n)
{
	do { barrier(); } while (--n);
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	85 35       	cpi	r24, 0x55	; 85
     3ae:	f0 ed       	ldi	r31, 0xD0	; 208
     3b0:	9f 07       	cpc	r25, r31
     3b2:	d9 f7       	brne	.-10     	; 0x3aa <getVelocity+0x70>
 //Velocity function
 float getVelocity(void){
	float velocityTable[25]; //Creates an array of size 25
	float velocity;
	float finalAlt = getAltitude(); //sets final altitude for the loop to the current altitude. We will throw out the first element of the array, as it will equal near zero.
	for(int i = 0; i < 25; i++){ //For each element
     3b4:	0a 15       	cp	r16, r10
     3b6:	1b 05       	cpc	r17, r11
     3b8:	01 f7       	brne	.-64     	; 0x37a <getVelocity+0x40>
		delay_ms(10); //Delay for 10ms, creates a sample rate for velocity of 100Hz.
	}
	//Now we know the velocity for 24 different samples over a total of 240ms (we threw out the initial calculation) . We now need to exponentially smooth the data.

	float smoothedVelTable[25];
	smoothedVelTable[0] = velocityTable[1]; //Sets the initial smoothed value to the second velocity taken, as the first needs to be thrown out.
     3ba:	8d 81       	ldd	r24, Y+5	; 0x05
     3bc:	9e 81       	ldd	r25, Y+6	; 0x06
     3be:	af 81       	ldd	r26, Y+7	; 0x07
     3c0:	b8 85       	ldd	r27, Y+8	; 0x08
     3c2:	a9 96       	adiw	r28, 0x29	; 41
     3c4:	8c af       	std	Y+60, r24	; 0x3c
     3c6:	9d af       	std	Y+61, r25	; 0x3d
     3c8:	ae af       	std	Y+62, r26	; 0x3e
     3ca:	bf af       	std	Y+63, r27	; 0x3f
     3cc:	a9 97       	sbiw	r28, 0x29	; 41
     3ce:	7e 01       	movw	r14, r28
     3d0:	25 e0       	ldi	r18, 0x05	; 5
     3d2:	e2 0e       	add	r14, r18
     3d4:	f1 1c       	adc	r15, r1
     3d6:	8e 01       	movw	r16, r28
     3d8:	0b 59       	subi	r16, 0x9B	; 155
     3da:	1f 4f       	sbci	r17, 0xFF	; 255
     3dc:	6e 01       	movw	r12, r28
     3de:	85 ec       	ldi	r24, 0xC5	; 197
     3e0:	c8 0e       	add	r12, r24
     3e2:	d1 1c       	adc	r13, r1
	for(int j = 1; j < 25; j++){ //For our 24 elements of velocity..
		smoothedVelTable[j] = exponentialSmoothing(smoothedVelTable[j - 1], velocityTable[j]); //For the current element of smoothed velocity, set it equal to the value that our exponential smoothing function gives us. We input the previous value for the smoothed table as our forecast/second variable, then the element of velocity at the current position. 
     3e4:	f7 01       	movw	r30, r14
     3e6:	61 91       	ld	r22, Z+
     3e8:	71 91       	ld	r23, Z+
     3ea:	81 91       	ld	r24, Z+
     3ec:	91 91       	ld	r25, Z+
     3ee:	7f 01       	movw	r14, r30
     3f0:	f8 01       	movw	r30, r16
     3f2:	41 90       	ld	r4, Z+
     3f4:	51 90       	ld	r5, Z+
     3f6:	61 90       	ld	r6, Z+
     3f8:	71 90       	ld	r7, Z+
     3fa:	8f 01       	movw	r16, r30
	return sumVelocity/24; //The function finally ends with returning the average, or the sum of our 24 elements of velocity divided by 24.
 }

 float exponentialSmoothing(float previousVel, float velocity){ //We need the previous smoothed value as well as the current unsmoothed value, as indicated by the equation on this page: https://en.wikipedia.org/wiki/Exponential_smoothing#Basic_exponential_smoothing
	float smoothingFactor = .2; //20% smoothing factor, needs to be tested.
	return (velocity * smoothingFactor) + (previousVel * (1 - smoothingFactor)); //returns the smoothed velocity for the current position of our table! That wasn't so hard, was it?
     3fc:	2d ec       	ldi	r18, 0xCD	; 205
     3fe:	3c ec       	ldi	r19, 0xCC	; 204
     400:	4c e4       	ldi	r20, 0x4C	; 76
     402:	5e e3       	ldi	r21, 0x3E	; 62
     404:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <__mulsf3>
     408:	4b 01       	movw	r8, r22
     40a:	5c 01       	movw	r10, r24
     40c:	2d ec       	ldi	r18, 0xCD	; 205
     40e:	3c ec       	ldi	r19, 0xCC	; 204
     410:	4c e4       	ldi	r20, 0x4C	; 76
     412:	5f e3       	ldi	r21, 0x3F	; 63
     414:	c3 01       	movw	r24, r6
     416:	b2 01       	movw	r22, r4
     418:	0e 94 5d 0c 	call	0x18ba	; 0x18ba <__mulsf3>
     41c:	9b 01       	movw	r18, r22
     41e:	ac 01       	movw	r20, r24
     420:	c5 01       	movw	r24, r10
     422:	b4 01       	movw	r22, r8
     424:	f7 d7       	rcall	.+4078   	; 0x1414 <__addsf3>
	//Now we know the velocity for 24 different samples over a total of 240ms (we threw out the initial calculation) . We now need to exponentially smooth the data.

	float smoothedVelTable[25];
	smoothedVelTable[0] = velocityTable[1]; //Sets the initial smoothed value to the second velocity taken, as the first needs to be thrown out.
	for(int j = 1; j < 25; j++){ //For our 24 elements of velocity..
		smoothedVelTable[j] = exponentialSmoothing(smoothedVelTable[j - 1], velocityTable[j]); //For the current element of smoothed velocity, set it equal to the value that our exponential smoothing function gives us. We input the previous value for the smoothed table as our forecast/second variable, then the element of velocity at the current position. 
     426:	f8 01       	movw	r30, r16
     428:	60 83       	st	Z, r22
     42a:	71 83       	std	Z+1, r23	; 0x01
     42c:	82 83       	std	Z+2, r24	; 0x02
     42e:	93 83       	std	Z+3, r25	; 0x03
	}
	//Now we know the velocity for 24 different samples over a total of 240ms (we threw out the initial calculation) . We now need to exponentially smooth the data.

	float smoothedVelTable[25];
	smoothedVelTable[0] = velocityTable[1]; //Sets the initial smoothed value to the second velocity taken, as the first needs to be thrown out.
	for(int j = 1; j < 25; j++){ //For our 24 elements of velocity..
     430:	0c 15       	cp	r16, r12
     432:	1d 05       	cpc	r17, r13
     434:	b9 f6       	brne	.-82     	; 0x3e4 <getVelocity+0xaa>
     436:	8e 01       	movw	r16, r28
     438:	07 59       	subi	r16, 0x97	; 151
     43a:	1f 4f       	sbci	r17, 0xFF	; 255
     43c:	7e 01       	movw	r14, r28
     43e:	f9 ec       	ldi	r31, 0xC9	; 201
     440:	ef 0e       	add	r14, r31
     442:	f1 1c       	adc	r15, r1
     444:	60 e0       	ldi	r22, 0x00	; 0
     446:	70 e0       	ldi	r23, 0x00	; 0
     448:	cb 01       	movw	r24, r22
		smoothedVelTable[j] = exponentialSmoothing(smoothedVelTable[j - 1], velocityTable[j]); //For the current element of smoothed velocity, set it equal to the value that our exponential smoothing function gives us. We input the previous value for the smoothed table as our forecast/second variable, then the element of velocity at the current position. 
	}
	float sumVelocity = 0; //Summed velocity so we can average it.
	for(int b = 1; b < 25; b++) //For our size 25 smoothed velocity table, we want to ignore the first value because it is a duplicate, then iterate through every other value.
		sumVelocity += smoothedVelTable[b]; //Set the sum of velocity equal to itself plus the element at our current position. Sums up all of the values in our table.
     44a:	f8 01       	movw	r30, r16
     44c:	21 91       	ld	r18, Z+
     44e:	31 91       	ld	r19, Z+
     450:	41 91       	ld	r20, Z+
     452:	51 91       	ld	r21, Z+
     454:	8f 01       	movw	r16, r30
     456:	de d7       	rcall	.+4028   	; 0x1414 <__addsf3>
	smoothedVelTable[0] = velocityTable[1]; //Sets the initial smoothed value to the second velocity taken, as the first needs to be thrown out.
	for(int j = 1; j < 25; j++){ //For our 24 elements of velocity..
		smoothedVelTable[j] = exponentialSmoothing(smoothedVelTable[j - 1], velocityTable[j]); //For the current element of smoothed velocity, set it equal to the value that our exponential smoothing function gives us. We input the previous value for the smoothed table as our forecast/second variable, then the element of velocity at the current position. 
	}
	float sumVelocity = 0; //Summed velocity so we can average it.
	for(int b = 1; b < 25; b++) //For our size 25 smoothed velocity table, we want to ignore the first value because it is a duplicate, then iterate through every other value.
     458:	0e 15       	cp	r16, r14
     45a:	1f 05       	cpc	r17, r15
     45c:	b1 f7       	brne	.-20     	; 0x44a <__FUSE_REGION_LENGTH__+0x4a>
		sumVelocity += smoothedVelTable[b]; //Set the sum of velocity equal to itself plus the element at our current position. Sums up all of the values in our table.
	return sumVelocity/24; //The function finally ends with returning the average, or the sum of our 24 elements of velocity divided by 24.
     45e:	20 e0       	ldi	r18, 0x00	; 0
     460:	30 e0       	ldi	r19, 0x00	; 0
     462:	40 ec       	ldi	r20, 0xC0	; 192
     464:	51 e4       	ldi	r21, 0x41	; 65
     466:	0e 94 6e 0a 	call	0x14dc	; 0x14dc <__divsf3>
 }
     46a:	c8 53       	subi	r28, 0x38	; 56
     46c:	df 4f       	sbci	r29, 0xFF	; 255
     46e:	cd bf       	out	0x3d, r28	; 61
     470:	de bf       	out	0x3e, r29	; 62
     472:	df 91       	pop	r29
     474:	cf 91       	pop	r28
     476:	1f 91       	pop	r17
     478:	0f 91       	pop	r16
     47a:	ff 90       	pop	r15
     47c:	ef 90       	pop	r14
     47e:	df 90       	pop	r13
     480:	cf 90       	pop	r12
     482:	bf 90       	pop	r11
     484:	af 90       	pop	r10
     486:	9f 90       	pop	r9
     488:	8f 90       	pop	r8
     48a:	7f 90       	pop	r7
     48c:	6f 90       	pop	r6
     48e:	5f 90       	pop	r5
     490:	4f 90       	pop	r4
     492:	08 95       	ret

00000494 <lightChase>:
	
	return (uint16_t)(voltage*1000); //voltage*1000 converts it into millivolts.
	//If we hadn't multiplied by 1000, the typecast would've truncated the voltage reading to just the one's place.

	delay_ms(msDelay);
}
     494:	af 92       	push	r10
     496:	bf 92       	push	r11
     498:	cf 92       	push	r12
     49a:	df 92       	push	r13
     49c:	ef 92       	push	r14
     49e:	ff 92       	push	r15
     4a0:	0f 93       	push	r16
     4a2:	1f 93       	push	r17
     4a4:	cf 93       	push	r28
     4a6:	df 93       	push	r29
     4a8:	91 e0       	ldi	r25, 0x01	; 1
     4aa:	90 93 14 20 	sts	0x2014, r25	; 0x802014 <lightNumber>
     4ae:	a1 2c       	mov	r10, r1
     4b0:	0f 2e       	mov	r0, r31
     4b2:	f8 e4       	ldi	r31, 0x48	; 72
     4b4:	bf 2e       	mov	r11, r31
     4b6:	f0 2d       	mov	r31, r0
     4b8:	0f 2e       	mov	r0, r31
     4ba:	f8 ee       	ldi	r31, 0xE8	; 232
     4bc:	cf 2e       	mov	r12, r31
     4be:	f0 2d       	mov	r31, r0
     4c0:	dd 24       	eor	r13, r13
     4c2:	d3 94       	inc	r13
     4c4:	e1 2c       	mov	r14, r1
     4c6:	f1 2c       	mov	r15, r1
     4c8:	00 e0       	ldi	r16, 0x00	; 0
     4ca:	10 e0       	ldi	r17, 0x00	; 0
     4cc:	28 2f       	mov	r18, r24
     4ce:	30 e0       	ldi	r19, 0x00	; 0
     4d0:	40 e0       	ldi	r20, 0x00	; 0
     4d2:	50 e0       	ldi	r21, 0x00	; 0
     4d4:	60 e0       	ldi	r22, 0x00	; 0
     4d6:	70 e0       	ldi	r23, 0x00	; 0
     4d8:	80 e0       	ldi	r24, 0x00	; 0
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	0e 94 02 0e 	call	0x1c04	; 0x1c04 <__muldi3>
     4e0:	29 51       	subi	r18, 0x19	; 25
     4e2:	3c 4f       	sbci	r19, 0xFC	; 252
     4e4:	4f 4f       	sbci	r20, 0xFF	; 255
     4e6:	5f 4f       	sbci	r21, 0xFF	; 255
     4e8:	6f 4f       	sbci	r22, 0xFF	; 255
     4ea:	7f 4f       	sbci	r23, 0xFF	; 255
     4ec:	8f 4f       	sbci	r24, 0xFF	; 255
     4ee:	9f 4f       	sbci	r25, 0xFF	; 255
     4f0:	0e 94 79 0b 	call	0x16f2	; 0x16f2 <__floatundisf>
     4f4:	20 e0       	ldi	r18, 0x00	; 0
     4f6:	30 e8       	ldi	r19, 0x80	; 128
     4f8:	4b eb       	ldi	r20, 0xBB	; 187
     4fa:	55 e4       	ldi	r21, 0x45	; 69
     4fc:	ef d7       	rcall	.+4062   	; 0x14dc <__divsf3>
     4fe:	0e 94 db 0a 	call	0x15b6	; 0x15b6 <__fixunssfdi>
     502:	72 2f       	mov	r23, r18
     504:	63 2f       	mov	r22, r19
     506:	94 2f       	mov	r25, r20
     508:	85 2f       	mov	r24, r21
     50a:	54 2f       	mov	r21, r20
     50c:	48 2f       	mov	r20, r24
     50e:	24 e0       	ldi	r18, 0x04	; 4
     510:	30 e0       	ldi	r19, 0x00	; 0
     512:	c0 e8       	ldi	r28, 0x80	; 128
     514:	d6 e0       	ldi	r29, 0x06	; 6
     516:	07 2f       	mov	r16, r23
     518:	16 2f       	mov	r17, r22
     51a:	f9 2f       	mov	r31, r25
     51c:	e8 2f       	mov	r30, r24
     51e:	80 91 14 20 	lds	r24, 0x2014	; 0x802014 <lightNumber>
     522:	98 2f       	mov	r25, r24
     524:	90 95       	com	r25
     526:	9c 83       	std	Y+4, r25	; 0x04
     528:	88 0f       	add	r24, r24
     52a:	80 93 14 20 	sts	0x2014, r24	; 0x802014 <lightNumber>
     52e:	80 2f       	mov	r24, r16
     530:	91 2f       	mov	r25, r17
     532:	af 2f       	mov	r26, r31
     534:	be 2f       	mov	r27, r30
     536:	01 97       	sbiw	r24, 0x01	; 1
     538:	a1 09       	sbc	r26, r1
     53a:	b1 09       	sbc	r27, r1
     53c:	e1 f7       	brne	.-8      	; 0x536 <lightChase+0xa2>
     53e:	21 50       	subi	r18, 0x01	; 1
     540:	31 09       	sbc	r19, r1
     542:	69 f7       	brne	.-38     	; 0x51e <lightChase+0x8a>
     544:	80 e8       	ldi	r24, 0x80	; 128
     546:	80 93 14 20 	sts	0x2014, r24	; 0x802014 <lightNumber>
     54a:	24 e0       	ldi	r18, 0x04	; 4
     54c:	30 e0       	ldi	r19, 0x00	; 0
     54e:	e0 e8       	ldi	r30, 0x80	; 128
     550:	f6 e0       	ldi	r31, 0x06	; 6
     552:	80 91 14 20 	lds	r24, 0x2014	; 0x802014 <lightNumber>
     556:	98 2f       	mov	r25, r24
     558:	90 95       	com	r25
     55a:	94 83       	std	Z+4, r25	; 0x04
     55c:	86 95       	lsr	r24
     55e:	80 93 14 20 	sts	0x2014, r24	; 0x802014 <lightNumber>
     562:	87 2f       	mov	r24, r23
     564:	96 2f       	mov	r25, r22
     566:	a5 2f       	mov	r26, r21
     568:	b4 2f       	mov	r27, r20
     56a:	01 97       	sbiw	r24, 0x01	; 1
     56c:	a1 09       	sbc	r26, r1
     56e:	b1 09       	sbc	r27, r1
     570:	e1 f7       	brne	.-8      	; 0x56a <lightChase+0xd6>
     572:	21 50       	subi	r18, 0x01	; 1
     574:	31 09       	sbc	r19, r1
     576:	69 f7       	brne	.-38     	; 0x552 <lightChase+0xbe>
     578:	df 91       	pop	r29
     57a:	cf 91       	pop	r28
     57c:	1f 91       	pop	r17
     57e:	0f 91       	pop	r16
     580:	ff 90       	pop	r15
     582:	ef 90       	pop	r14
     584:	df 90       	pop	r13
     586:	cf 90       	pop	r12
     588:	bf 90       	pop	r11
     58a:	af 90       	pop	r10
     58c:	08 95       	ret

0000058e <test>:

void test(void){
     58e:	cf 93       	push	r28
     590:	df 93       	push	r29
	printf("%f\n",getPressure());
     592:	2e d5       	rcall	.+2652   	; 0xff0 <getPressure>
     594:	9f 93       	push	r25
     596:	8f 93       	push	r24
     598:	7f 93       	push	r23
     59a:	6f 93       	push	r22
     59c:	cd e0       	ldi	r28, 0x0D	; 13
     59e:	d0 e2       	ldi	r29, 0x20	; 32
     5a0:	df 93       	push	r29
     5a2:	cf 93       	push	r28
     5a4:	0e 94 ac 0e 	call	0x1d58	; 0x1d58 <printf>
	printf("%f\n",getTemperature());
     5a8:	27 d5       	rcall	.+2638   	; 0xff8 <getTemperature>
     5aa:	9f 93       	push	r25
     5ac:	8f 93       	push	r24
     5ae:	7f 93       	push	r23
     5b0:	6f 93       	push	r22
     5b2:	df 93       	push	r29
     5b4:	cf 93       	push	r28
     5b6:	0e 94 ac 0e 	call	0x1d58	; 0x1d58 <printf>
	printf("%f\n",getAltitude());
     5ba:	84 de       	rcall	.-760    	; 0x2c4 <getAltitude>
     5bc:	9f 93       	push	r25
     5be:	8f 93       	push	r24
     5c0:	7f 93       	push	r23
     5c2:	6f 93       	push	r22
     5c4:	df 93       	push	r29
     5c6:	cf 93       	push	r28
     5c8:	0e 94 ac 0e 	call	0x1d58	; 0x1d58 <printf>
	printf("%f\n",getVelocity());
     5cc:	b6 de       	rcall	.-660    	; 0x33a <getVelocity>
     5ce:	9f 93       	push	r25
     5d0:	8f 93       	push	r24
     5d2:	7f 93       	push	r23
     5d4:	6f 93       	push	r22
     5d6:	df 93       	push	r29
     5d8:	cf 93       	push	r28
     5da:	0e 94 ac 0e 	call	0x1d58	; 0x1d58 <printf>
     5de:	8d b7       	in	r24, 0x3d	; 61
     5e0:	9e b7       	in	r25, 0x3e	; 62
     5e2:	48 96       	adiw	r24, 0x18	; 24
     5e4:	8d bf       	out	0x3d, r24	; 61
     5e6:	9e bf       	out	0x3e, r25	; 62
     5e8:	df 91       	pop	r29
     5ea:	cf 91       	pop	r28
     5ec:	08 95       	ret

000005ee <sysclk_init>:
     5ee:	8f ef       	ldi	r24, 0xFF	; 255
     5f0:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x700070>
     5f4:	80 93 71 00 	sts	0x0071, r24	; 0x800071 <__TEXT_REGION_LENGTH__+0x700071>
     5f8:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__TEXT_REGION_LENGTH__+0x700072>
     5fc:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x700073>
     600:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x700074>
     604:	80 93 75 00 	sts	0x0075, r24	; 0x800075 <__TEXT_REGION_LENGTH__+0x700075>
     608:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__TEXT_REGION_LENGTH__+0x700076>
     60c:	9f b7       	in	r25, 0x3f	; 63
     60e:	f8 94       	cli
     610:	e0 e5       	ldi	r30, 0x50	; 80
     612:	f0 e0       	ldi	r31, 0x00	; 0
     614:	80 81       	ld	r24, Z
     616:	82 60       	ori	r24, 0x02	; 2
     618:	80 83       	st	Z, r24
     61a:	9f bf       	out	0x3f, r25	; 63
     61c:	81 81       	ldd	r24, Z+1	; 0x01
     61e:	81 ff       	sbrs	r24, 1
     620:	fd cf       	rjmp	.-6      	; 0x61c <sysclk_init+0x2e>
     622:	61 e0       	ldi	r22, 0x01	; 1
     624:	80 e4       	ldi	r24, 0x40	; 64
     626:	90 e0       	ldi	r25, 0x00	; 0
     628:	28 d2       	rcall	.+1104   	; 0xa7a <ccp_write_io>
     62a:	9f b7       	in	r25, 0x3f	; 63
     62c:	f8 94       	cli
     62e:	e0 e5       	ldi	r30, 0x50	; 80
     630:	f0 e0       	ldi	r31, 0x00	; 0
     632:	80 81       	ld	r24, Z
     634:	8e 7f       	andi	r24, 0xFE	; 254
     636:	80 83       	st	Z, r24
     638:	9f bf       	out	0x3f, r25	; 63
     63a:	08 95       	ret

0000063c <sysclk_enable_module>:
     63c:	9f b7       	in	r25, 0x3f	; 63
     63e:	f8 94       	cli
     640:	e8 2f       	mov	r30, r24
     642:	f0 e0       	ldi	r31, 0x00	; 0
     644:	e0 59       	subi	r30, 0x90	; 144
     646:	ff 4f       	sbci	r31, 0xFF	; 255
     648:	60 95       	com	r22
     64a:	80 81       	ld	r24, Z
     64c:	68 23       	and	r22, r24
     64e:	60 83       	st	Z, r22
     650:	9f bf       	out	0x3f, r25	; 63
     652:	08 95       	ret

00000654 <_read>:
     654:	cf 93       	push	r28
     656:	df 93       	push	r29
     658:	1f 92       	push	r1
     65a:	cd b7       	in	r28, 0x3d	; 61
     65c:	de b7       	in	r29, 0x3e	; 62
     65e:	80 91 1d 20 	lds	r24, 0x201D	; 0x80201d <stdio_base>
     662:	90 91 1e 20 	lds	r25, 0x201E	; 0x80201e <stdio_base+0x1>
     666:	e0 91 19 20 	lds	r30, 0x2019	; 0x802019 <ptr_get>
     66a:	f0 91 1a 20 	lds	r31, 0x201A	; 0x80201a <ptr_get+0x1>
     66e:	be 01       	movw	r22, r28
     670:	6f 5f       	subi	r22, 0xFF	; 255
     672:	7f 4f       	sbci	r23, 0xFF	; 255
     674:	19 95       	eicall
     676:	89 81       	ldd	r24, Y+1	; 0x01
     678:	08 2e       	mov	r0, r24
     67a:	00 0c       	add	r0, r0
     67c:	99 0b       	sbc	r25, r25
     67e:	0f 90       	pop	r0
     680:	df 91       	pop	r29
     682:	cf 91       	pop	r28
     684:	08 95       	ret

00000686 <_write>:
     686:	68 2f       	mov	r22, r24
     688:	80 91 1d 20 	lds	r24, 0x201D	; 0x80201d <stdio_base>
     68c:	90 91 1e 20 	lds	r25, 0x201E	; 0x80201e <stdio_base+0x1>
     690:	e0 91 1b 20 	lds	r30, 0x201B	; 0x80201b <ptr_put>
     694:	f0 91 1c 20 	lds	r31, 0x201C	; 0x80201c <ptr_put+0x1>
     698:	19 95       	eicall
     69a:	99 23       	and	r25, r25
     69c:	1c f0       	brlt	.+6      	; 0x6a4 <_write+0x1e>
     69e:	81 e0       	ldi	r24, 0x01	; 1
     6a0:	90 e0       	ldi	r25, 0x00	; 0
     6a2:	08 95       	ret
     6a4:	8f ef       	ldi	r24, 0xFF	; 255
     6a6:	9f ef       	ldi	r25, 0xFF	; 255
     6a8:	08 95       	ret

000006aa <__vector_71>:
     6aa:	1f 92       	push	r1
     6ac:	0f 92       	push	r0
     6ae:	0f b6       	in	r0, 0x3f	; 63
     6b0:	0f 92       	push	r0
     6b2:	11 24       	eor	r1, r1
     6b4:	08 b6       	in	r0, 0x38	; 56
     6b6:	0f 92       	push	r0
     6b8:	18 be       	out	0x38, r1	; 56
     6ba:	09 b6       	in	r0, 0x39	; 57
     6bc:	0f 92       	push	r0
     6be:	19 be       	out	0x39, r1	; 57
     6c0:	0b b6       	in	r0, 0x3b	; 59
     6c2:	0f 92       	push	r0
     6c4:	1b be       	out	0x3b, r1	; 59
     6c6:	2f 93       	push	r18
     6c8:	3f 93       	push	r19
     6ca:	4f 93       	push	r20
     6cc:	5f 93       	push	r21
     6ce:	6f 93       	push	r22
     6d0:	7f 93       	push	r23
     6d2:	8f 93       	push	r24
     6d4:	9f 93       	push	r25
     6d6:	af 93       	push	r26
     6d8:	bf 93       	push	r27
     6da:	ef 93       	push	r30
     6dc:	ff 93       	push	r31
     6de:	40 91 24 02 	lds	r20, 0x0224	; 0x800224 <__TEXT_REGION_LENGTH__+0x700224>
     6e2:	50 91 25 02 	lds	r21, 0x0225	; 0x800225 <__TEXT_REGION_LENGTH__+0x700225>
     6e6:	e0 91 21 20 	lds	r30, 0x2021	; 0x802021 <adca_callback>
     6ea:	f0 91 22 20 	lds	r31, 0x2022	; 0x802022 <adca_callback+0x1>
     6ee:	61 e0       	ldi	r22, 0x01	; 1
     6f0:	80 e0       	ldi	r24, 0x00	; 0
     6f2:	92 e0       	ldi	r25, 0x02	; 2
     6f4:	19 95       	eicall
     6f6:	ff 91       	pop	r31
     6f8:	ef 91       	pop	r30
     6fa:	bf 91       	pop	r27
     6fc:	af 91       	pop	r26
     6fe:	9f 91       	pop	r25
     700:	8f 91       	pop	r24
     702:	7f 91       	pop	r23
     704:	6f 91       	pop	r22
     706:	5f 91       	pop	r21
     708:	4f 91       	pop	r20
     70a:	3f 91       	pop	r19
     70c:	2f 91       	pop	r18
     70e:	0f 90       	pop	r0
     710:	0b be       	out	0x3b, r0	; 59
     712:	0f 90       	pop	r0
     714:	09 be       	out	0x39, r0	; 57
     716:	0f 90       	pop	r0
     718:	08 be       	out	0x38, r0	; 56
     71a:	0f 90       	pop	r0
     71c:	0f be       	out	0x3f, r0	; 63
     71e:	0f 90       	pop	r0
     720:	1f 90       	pop	r1
     722:	18 95       	reti

00000724 <__vector_72>:
     724:	1f 92       	push	r1
     726:	0f 92       	push	r0
     728:	0f b6       	in	r0, 0x3f	; 63
     72a:	0f 92       	push	r0
     72c:	11 24       	eor	r1, r1
     72e:	08 b6       	in	r0, 0x38	; 56
     730:	0f 92       	push	r0
     732:	18 be       	out	0x38, r1	; 56
     734:	09 b6       	in	r0, 0x39	; 57
     736:	0f 92       	push	r0
     738:	19 be       	out	0x39, r1	; 57
     73a:	0b b6       	in	r0, 0x3b	; 59
     73c:	0f 92       	push	r0
     73e:	1b be       	out	0x3b, r1	; 59
     740:	2f 93       	push	r18
     742:	3f 93       	push	r19
     744:	4f 93       	push	r20
     746:	5f 93       	push	r21
     748:	6f 93       	push	r22
     74a:	7f 93       	push	r23
     74c:	8f 93       	push	r24
     74e:	9f 93       	push	r25
     750:	af 93       	push	r26
     752:	bf 93       	push	r27
     754:	ef 93       	push	r30
     756:	ff 93       	push	r31
     758:	40 91 2c 02 	lds	r20, 0x022C	; 0x80022c <__TEXT_REGION_LENGTH__+0x70022c>
     75c:	50 91 2d 02 	lds	r21, 0x022D	; 0x80022d <__TEXT_REGION_LENGTH__+0x70022d>
     760:	e0 91 21 20 	lds	r30, 0x2021	; 0x802021 <adca_callback>
     764:	f0 91 22 20 	lds	r31, 0x2022	; 0x802022 <adca_callback+0x1>
     768:	62 e0       	ldi	r22, 0x02	; 2
     76a:	80 e0       	ldi	r24, 0x00	; 0
     76c:	92 e0       	ldi	r25, 0x02	; 2
     76e:	19 95       	eicall
     770:	ff 91       	pop	r31
     772:	ef 91       	pop	r30
     774:	bf 91       	pop	r27
     776:	af 91       	pop	r26
     778:	9f 91       	pop	r25
     77a:	8f 91       	pop	r24
     77c:	7f 91       	pop	r23
     77e:	6f 91       	pop	r22
     780:	5f 91       	pop	r21
     782:	4f 91       	pop	r20
     784:	3f 91       	pop	r19
     786:	2f 91       	pop	r18
     788:	0f 90       	pop	r0
     78a:	0b be       	out	0x3b, r0	; 59
     78c:	0f 90       	pop	r0
     78e:	09 be       	out	0x39, r0	; 57
     790:	0f 90       	pop	r0
     792:	08 be       	out	0x38, r0	; 56
     794:	0f 90       	pop	r0
     796:	0f be       	out	0x3f, r0	; 63
     798:	0f 90       	pop	r0
     79a:	1f 90       	pop	r1
     79c:	18 95       	reti

0000079e <__vector_73>:
     79e:	1f 92       	push	r1
     7a0:	0f 92       	push	r0
     7a2:	0f b6       	in	r0, 0x3f	; 63
     7a4:	0f 92       	push	r0
     7a6:	11 24       	eor	r1, r1
     7a8:	08 b6       	in	r0, 0x38	; 56
     7aa:	0f 92       	push	r0
     7ac:	18 be       	out	0x38, r1	; 56
     7ae:	09 b6       	in	r0, 0x39	; 57
     7b0:	0f 92       	push	r0
     7b2:	19 be       	out	0x39, r1	; 57
     7b4:	0b b6       	in	r0, 0x3b	; 59
     7b6:	0f 92       	push	r0
     7b8:	1b be       	out	0x3b, r1	; 59
     7ba:	2f 93       	push	r18
     7bc:	3f 93       	push	r19
     7be:	4f 93       	push	r20
     7c0:	5f 93       	push	r21
     7c2:	6f 93       	push	r22
     7c4:	7f 93       	push	r23
     7c6:	8f 93       	push	r24
     7c8:	9f 93       	push	r25
     7ca:	af 93       	push	r26
     7cc:	bf 93       	push	r27
     7ce:	ef 93       	push	r30
     7d0:	ff 93       	push	r31
     7d2:	40 91 34 02 	lds	r20, 0x0234	; 0x800234 <__TEXT_REGION_LENGTH__+0x700234>
     7d6:	50 91 35 02 	lds	r21, 0x0235	; 0x800235 <__TEXT_REGION_LENGTH__+0x700235>
     7da:	e0 91 21 20 	lds	r30, 0x2021	; 0x802021 <adca_callback>
     7de:	f0 91 22 20 	lds	r31, 0x2022	; 0x802022 <adca_callback+0x1>
     7e2:	64 e0       	ldi	r22, 0x04	; 4
     7e4:	80 e0       	ldi	r24, 0x00	; 0
     7e6:	92 e0       	ldi	r25, 0x02	; 2
     7e8:	19 95       	eicall
     7ea:	ff 91       	pop	r31
     7ec:	ef 91       	pop	r30
     7ee:	bf 91       	pop	r27
     7f0:	af 91       	pop	r26
     7f2:	9f 91       	pop	r25
     7f4:	8f 91       	pop	r24
     7f6:	7f 91       	pop	r23
     7f8:	6f 91       	pop	r22
     7fa:	5f 91       	pop	r21
     7fc:	4f 91       	pop	r20
     7fe:	3f 91       	pop	r19
     800:	2f 91       	pop	r18
     802:	0f 90       	pop	r0
     804:	0b be       	out	0x3b, r0	; 59
     806:	0f 90       	pop	r0
     808:	09 be       	out	0x39, r0	; 57
     80a:	0f 90       	pop	r0
     80c:	08 be       	out	0x38, r0	; 56
     80e:	0f 90       	pop	r0
     810:	0f be       	out	0x3f, r0	; 63
     812:	0f 90       	pop	r0
     814:	1f 90       	pop	r1
     816:	18 95       	reti

00000818 <__vector_74>:
     818:	1f 92       	push	r1
     81a:	0f 92       	push	r0
     81c:	0f b6       	in	r0, 0x3f	; 63
     81e:	0f 92       	push	r0
     820:	11 24       	eor	r1, r1
     822:	08 b6       	in	r0, 0x38	; 56
     824:	0f 92       	push	r0
     826:	18 be       	out	0x38, r1	; 56
     828:	09 b6       	in	r0, 0x39	; 57
     82a:	0f 92       	push	r0
     82c:	19 be       	out	0x39, r1	; 57
     82e:	0b b6       	in	r0, 0x3b	; 59
     830:	0f 92       	push	r0
     832:	1b be       	out	0x3b, r1	; 59
     834:	2f 93       	push	r18
     836:	3f 93       	push	r19
     838:	4f 93       	push	r20
     83a:	5f 93       	push	r21
     83c:	6f 93       	push	r22
     83e:	7f 93       	push	r23
     840:	8f 93       	push	r24
     842:	9f 93       	push	r25
     844:	af 93       	push	r26
     846:	bf 93       	push	r27
     848:	ef 93       	push	r30
     84a:	ff 93       	push	r31
     84c:	40 91 3c 02 	lds	r20, 0x023C	; 0x80023c <__TEXT_REGION_LENGTH__+0x70023c>
     850:	50 91 3d 02 	lds	r21, 0x023D	; 0x80023d <__TEXT_REGION_LENGTH__+0x70023d>
     854:	e0 91 21 20 	lds	r30, 0x2021	; 0x802021 <adca_callback>
     858:	f0 91 22 20 	lds	r31, 0x2022	; 0x802022 <adca_callback+0x1>
     85c:	68 e0       	ldi	r22, 0x08	; 8
     85e:	80 e0       	ldi	r24, 0x00	; 0
     860:	92 e0       	ldi	r25, 0x02	; 2
     862:	19 95       	eicall
     864:	ff 91       	pop	r31
     866:	ef 91       	pop	r30
     868:	bf 91       	pop	r27
     86a:	af 91       	pop	r26
     86c:	9f 91       	pop	r25
     86e:	8f 91       	pop	r24
     870:	7f 91       	pop	r23
     872:	6f 91       	pop	r22
     874:	5f 91       	pop	r21
     876:	4f 91       	pop	r20
     878:	3f 91       	pop	r19
     87a:	2f 91       	pop	r18
     87c:	0f 90       	pop	r0
     87e:	0b be       	out	0x3b, r0	; 59
     880:	0f 90       	pop	r0
     882:	09 be       	out	0x39, r0	; 57
     884:	0f 90       	pop	r0
     886:	08 be       	out	0x38, r0	; 56
     888:	0f 90       	pop	r0
     88a:	0f be       	out	0x3f, r0	; 63
     88c:	0f 90       	pop	r0
     88e:	1f 90       	pop	r1
     890:	18 95       	reti

00000892 <__vector_39>:
     892:	1f 92       	push	r1
     894:	0f 92       	push	r0
     896:	0f b6       	in	r0, 0x3f	; 63
     898:	0f 92       	push	r0
     89a:	11 24       	eor	r1, r1
     89c:	08 b6       	in	r0, 0x38	; 56
     89e:	0f 92       	push	r0
     8a0:	18 be       	out	0x38, r1	; 56
     8a2:	09 b6       	in	r0, 0x39	; 57
     8a4:	0f 92       	push	r0
     8a6:	19 be       	out	0x39, r1	; 57
     8a8:	0b b6       	in	r0, 0x3b	; 59
     8aa:	0f 92       	push	r0
     8ac:	1b be       	out	0x3b, r1	; 59
     8ae:	2f 93       	push	r18
     8b0:	3f 93       	push	r19
     8b2:	4f 93       	push	r20
     8b4:	5f 93       	push	r21
     8b6:	6f 93       	push	r22
     8b8:	7f 93       	push	r23
     8ba:	8f 93       	push	r24
     8bc:	9f 93       	push	r25
     8be:	af 93       	push	r26
     8c0:	bf 93       	push	r27
     8c2:	ef 93       	push	r30
     8c4:	ff 93       	push	r31
     8c6:	40 91 64 02 	lds	r20, 0x0264	; 0x800264 <__TEXT_REGION_LENGTH__+0x700264>
     8ca:	50 91 65 02 	lds	r21, 0x0265	; 0x800265 <__TEXT_REGION_LENGTH__+0x700265>
     8ce:	e0 91 1f 20 	lds	r30, 0x201F	; 0x80201f <adcb_callback>
     8d2:	f0 91 20 20 	lds	r31, 0x2020	; 0x802020 <adcb_callback+0x1>
     8d6:	61 e0       	ldi	r22, 0x01	; 1
     8d8:	80 e4       	ldi	r24, 0x40	; 64
     8da:	92 e0       	ldi	r25, 0x02	; 2
     8dc:	19 95       	eicall
     8de:	ff 91       	pop	r31
     8e0:	ef 91       	pop	r30
     8e2:	bf 91       	pop	r27
     8e4:	af 91       	pop	r26
     8e6:	9f 91       	pop	r25
     8e8:	8f 91       	pop	r24
     8ea:	7f 91       	pop	r23
     8ec:	6f 91       	pop	r22
     8ee:	5f 91       	pop	r21
     8f0:	4f 91       	pop	r20
     8f2:	3f 91       	pop	r19
     8f4:	2f 91       	pop	r18
     8f6:	0f 90       	pop	r0
     8f8:	0b be       	out	0x3b, r0	; 59
     8fa:	0f 90       	pop	r0
     8fc:	09 be       	out	0x39, r0	; 57
     8fe:	0f 90       	pop	r0
     900:	08 be       	out	0x38, r0	; 56
     902:	0f 90       	pop	r0
     904:	0f be       	out	0x3f, r0	; 63
     906:	0f 90       	pop	r0
     908:	1f 90       	pop	r1
     90a:	18 95       	reti

0000090c <__vector_40>:
     90c:	1f 92       	push	r1
     90e:	0f 92       	push	r0
     910:	0f b6       	in	r0, 0x3f	; 63
     912:	0f 92       	push	r0
     914:	11 24       	eor	r1, r1
     916:	08 b6       	in	r0, 0x38	; 56
     918:	0f 92       	push	r0
     91a:	18 be       	out	0x38, r1	; 56
     91c:	09 b6       	in	r0, 0x39	; 57
     91e:	0f 92       	push	r0
     920:	19 be       	out	0x39, r1	; 57
     922:	0b b6       	in	r0, 0x3b	; 59
     924:	0f 92       	push	r0
     926:	1b be       	out	0x3b, r1	; 59
     928:	2f 93       	push	r18
     92a:	3f 93       	push	r19
     92c:	4f 93       	push	r20
     92e:	5f 93       	push	r21
     930:	6f 93       	push	r22
     932:	7f 93       	push	r23
     934:	8f 93       	push	r24
     936:	9f 93       	push	r25
     938:	af 93       	push	r26
     93a:	bf 93       	push	r27
     93c:	ef 93       	push	r30
     93e:	ff 93       	push	r31
     940:	40 91 6c 02 	lds	r20, 0x026C	; 0x80026c <__TEXT_REGION_LENGTH__+0x70026c>
     944:	50 91 6d 02 	lds	r21, 0x026D	; 0x80026d <__TEXT_REGION_LENGTH__+0x70026d>
     948:	e0 91 1f 20 	lds	r30, 0x201F	; 0x80201f <adcb_callback>
     94c:	f0 91 20 20 	lds	r31, 0x2020	; 0x802020 <adcb_callback+0x1>
     950:	62 e0       	ldi	r22, 0x02	; 2
     952:	80 e4       	ldi	r24, 0x40	; 64
     954:	92 e0       	ldi	r25, 0x02	; 2
     956:	19 95       	eicall
     958:	ff 91       	pop	r31
     95a:	ef 91       	pop	r30
     95c:	bf 91       	pop	r27
     95e:	af 91       	pop	r26
     960:	9f 91       	pop	r25
     962:	8f 91       	pop	r24
     964:	7f 91       	pop	r23
     966:	6f 91       	pop	r22
     968:	5f 91       	pop	r21
     96a:	4f 91       	pop	r20
     96c:	3f 91       	pop	r19
     96e:	2f 91       	pop	r18
     970:	0f 90       	pop	r0
     972:	0b be       	out	0x3b, r0	; 59
     974:	0f 90       	pop	r0
     976:	09 be       	out	0x39, r0	; 57
     978:	0f 90       	pop	r0
     97a:	08 be       	out	0x38, r0	; 56
     97c:	0f 90       	pop	r0
     97e:	0f be       	out	0x3f, r0	; 63
     980:	0f 90       	pop	r0
     982:	1f 90       	pop	r1
     984:	18 95       	reti

00000986 <__vector_41>:
     986:	1f 92       	push	r1
     988:	0f 92       	push	r0
     98a:	0f b6       	in	r0, 0x3f	; 63
     98c:	0f 92       	push	r0
     98e:	11 24       	eor	r1, r1
     990:	08 b6       	in	r0, 0x38	; 56
     992:	0f 92       	push	r0
     994:	18 be       	out	0x38, r1	; 56
     996:	09 b6       	in	r0, 0x39	; 57
     998:	0f 92       	push	r0
     99a:	19 be       	out	0x39, r1	; 57
     99c:	0b b6       	in	r0, 0x3b	; 59
     99e:	0f 92       	push	r0
     9a0:	1b be       	out	0x3b, r1	; 59
     9a2:	2f 93       	push	r18
     9a4:	3f 93       	push	r19
     9a6:	4f 93       	push	r20
     9a8:	5f 93       	push	r21
     9aa:	6f 93       	push	r22
     9ac:	7f 93       	push	r23
     9ae:	8f 93       	push	r24
     9b0:	9f 93       	push	r25
     9b2:	af 93       	push	r26
     9b4:	bf 93       	push	r27
     9b6:	ef 93       	push	r30
     9b8:	ff 93       	push	r31
     9ba:	40 91 74 02 	lds	r20, 0x0274	; 0x800274 <__TEXT_REGION_LENGTH__+0x700274>
     9be:	50 91 75 02 	lds	r21, 0x0275	; 0x800275 <__TEXT_REGION_LENGTH__+0x700275>
     9c2:	e0 91 1f 20 	lds	r30, 0x201F	; 0x80201f <adcb_callback>
     9c6:	f0 91 20 20 	lds	r31, 0x2020	; 0x802020 <adcb_callback+0x1>
     9ca:	64 e0       	ldi	r22, 0x04	; 4
     9cc:	80 e4       	ldi	r24, 0x40	; 64
     9ce:	92 e0       	ldi	r25, 0x02	; 2
     9d0:	19 95       	eicall
     9d2:	ff 91       	pop	r31
     9d4:	ef 91       	pop	r30
     9d6:	bf 91       	pop	r27
     9d8:	af 91       	pop	r26
     9da:	9f 91       	pop	r25
     9dc:	8f 91       	pop	r24
     9de:	7f 91       	pop	r23
     9e0:	6f 91       	pop	r22
     9e2:	5f 91       	pop	r21
     9e4:	4f 91       	pop	r20
     9e6:	3f 91       	pop	r19
     9e8:	2f 91       	pop	r18
     9ea:	0f 90       	pop	r0
     9ec:	0b be       	out	0x3b, r0	; 59
     9ee:	0f 90       	pop	r0
     9f0:	09 be       	out	0x39, r0	; 57
     9f2:	0f 90       	pop	r0
     9f4:	08 be       	out	0x38, r0	; 56
     9f6:	0f 90       	pop	r0
     9f8:	0f be       	out	0x3f, r0	; 63
     9fa:	0f 90       	pop	r0
     9fc:	1f 90       	pop	r1
     9fe:	18 95       	reti

00000a00 <__vector_42>:
     a00:	1f 92       	push	r1
     a02:	0f 92       	push	r0
     a04:	0f b6       	in	r0, 0x3f	; 63
     a06:	0f 92       	push	r0
     a08:	11 24       	eor	r1, r1
     a0a:	08 b6       	in	r0, 0x38	; 56
     a0c:	0f 92       	push	r0
     a0e:	18 be       	out	0x38, r1	; 56
     a10:	09 b6       	in	r0, 0x39	; 57
     a12:	0f 92       	push	r0
     a14:	19 be       	out	0x39, r1	; 57
     a16:	0b b6       	in	r0, 0x3b	; 59
     a18:	0f 92       	push	r0
     a1a:	1b be       	out	0x3b, r1	; 59
     a1c:	2f 93       	push	r18
     a1e:	3f 93       	push	r19
     a20:	4f 93       	push	r20
     a22:	5f 93       	push	r21
     a24:	6f 93       	push	r22
     a26:	7f 93       	push	r23
     a28:	8f 93       	push	r24
     a2a:	9f 93       	push	r25
     a2c:	af 93       	push	r26
     a2e:	bf 93       	push	r27
     a30:	ef 93       	push	r30
     a32:	ff 93       	push	r31
     a34:	40 91 7c 02 	lds	r20, 0x027C	; 0x80027c <__TEXT_REGION_LENGTH__+0x70027c>
     a38:	50 91 7d 02 	lds	r21, 0x027D	; 0x80027d <__TEXT_REGION_LENGTH__+0x70027d>
     a3c:	e0 91 1f 20 	lds	r30, 0x201F	; 0x80201f <adcb_callback>
     a40:	f0 91 20 20 	lds	r31, 0x2020	; 0x802020 <adcb_callback+0x1>
     a44:	68 e0       	ldi	r22, 0x08	; 8
     a46:	80 e4       	ldi	r24, 0x40	; 64
     a48:	92 e0       	ldi	r25, 0x02	; 2
     a4a:	19 95       	eicall
     a4c:	ff 91       	pop	r31
     a4e:	ef 91       	pop	r30
     a50:	bf 91       	pop	r27
     a52:	af 91       	pop	r26
     a54:	9f 91       	pop	r25
     a56:	8f 91       	pop	r24
     a58:	7f 91       	pop	r23
     a5a:	6f 91       	pop	r22
     a5c:	5f 91       	pop	r21
     a5e:	4f 91       	pop	r20
     a60:	3f 91       	pop	r19
     a62:	2f 91       	pop	r18
     a64:	0f 90       	pop	r0
     a66:	0b be       	out	0x3b, r0	; 59
     a68:	0f 90       	pop	r0
     a6a:	09 be       	out	0x39, r0	; 57
     a6c:	0f 90       	pop	r0
     a6e:	08 be       	out	0x38, r0	; 56
     a70:	0f 90       	pop	r0
     a72:	0f be       	out	0x3f, r0	; 63
     a74:	0f 90       	pop	r0
     a76:	1f 90       	pop	r1
     a78:	18 95       	reti

00000a7a <ccp_write_io>:
     a7a:	1b be       	out	0x3b, r1	; 59
     a7c:	fc 01       	movw	r30, r24
     a7e:	28 ed       	ldi	r18, 0xD8	; 216
     a80:	24 bf       	out	0x34, r18	; 52
     a82:	60 83       	st	Z, r22
     a84:	08 95       	ret

00000a86 <nvm_read_byte>:
     a86:	40 91 ca 01 	lds	r20, 0x01CA	; 0x8001ca <__TEXT_REGION_LENGTH__+0x7001ca>
     a8a:	e6 2f       	mov	r30, r22
     a8c:	f7 2f       	mov	r31, r23
     a8e:	80 93 ca 01 	sts	0x01CA, r24	; 0x8001ca <__TEXT_REGION_LENGTH__+0x7001ca>
     a92:	84 91       	lpm	r24, Z
     a94:	40 93 ca 01 	sts	0x01CA, r20	; 0x8001ca <__TEXT_REGION_LENGTH__+0x7001ca>
     a98:	08 95       	ret

00000a9a <usart_putchar>:
     a9a:	fc 01       	movw	r30, r24
     a9c:	91 81       	ldd	r25, Z+1	; 0x01
     a9e:	95 ff       	sbrs	r25, 5
     aa0:	fd cf       	rjmp	.-6      	; 0xa9c <usart_putchar+0x2>
     aa2:	60 83       	st	Z, r22
     aa4:	80 e0       	ldi	r24, 0x00	; 0
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	08 95       	ret

00000aaa <usart_getchar>:
     aaa:	fc 01       	movw	r30, r24
     aac:	91 81       	ldd	r25, Z+1	; 0x01
     aae:	99 23       	and	r25, r25
     ab0:	ec f7       	brge	.-6      	; 0xaac <usart_getchar+0x2>
     ab2:	80 81       	ld	r24, Z
     ab4:	08 95       	ret

00000ab6 <usart_set_baudrate>:
     ab6:	2f 92       	push	r2
     ab8:	3f 92       	push	r3
     aba:	4f 92       	push	r4
     abc:	5f 92       	push	r5
     abe:	6f 92       	push	r6
     ac0:	7f 92       	push	r7
     ac2:	8f 92       	push	r8
     ac4:	9f 92       	push	r9
     ac6:	af 92       	push	r10
     ac8:	bf 92       	push	r11
     aca:	cf 92       	push	r12
     acc:	df 92       	push	r13
     ace:	ef 92       	push	r14
     ad0:	ff 92       	push	r15
     ad2:	0f 93       	push	r16
     ad4:	1f 93       	push	r17
     ad6:	cf 93       	push	r28
     ad8:	1c 01       	movw	r2, r24
     ada:	2a 01       	movw	r4, r20
     adc:	3b 01       	movw	r6, r22
     ade:	48 01       	movw	r8, r16
     ae0:	59 01       	movw	r10, r18
     ae2:	d9 01       	movw	r26, r18
     ae4:	c8 01       	movw	r24, r16
     ae6:	68 94       	set
     ae8:	12 f8       	bld	r1, 2
     aea:	b6 95       	lsr	r27
     aec:	a7 95       	ror	r26
     aee:	97 95       	ror	r25
     af0:	87 95       	ror	r24
     af2:	16 94       	lsr	r1
     af4:	d1 f7       	brne	.-12     	; 0xaea <usart_set_baudrate+0x34>
     af6:	b9 01       	movw	r22, r18
     af8:	a8 01       	movw	r20, r16
     afa:	03 2e       	mov	r0, r19
     afc:	36 e1       	ldi	r19, 0x16	; 22
     afe:	76 95       	lsr	r23
     b00:	67 95       	ror	r22
     b02:	57 95       	ror	r21
     b04:	47 95       	ror	r20
     b06:	3a 95       	dec	r19
     b08:	d1 f7       	brne	.-12     	; 0xafe <usart_set_baudrate+0x48>
     b0a:	30 2d       	mov	r19, r0
     b0c:	f1 01       	movw	r30, r2
     b0e:	24 81       	ldd	r18, Z+4	; 0x04
     b10:	22 fd       	sbrc	r18, 2
     b12:	08 c0       	rjmp	.+16     	; 0xb24 <usart_set_baudrate+0x6e>
     b14:	b6 95       	lsr	r27
     b16:	a7 95       	ror	r26
     b18:	97 95       	ror	r25
     b1a:	87 95       	ror	r24
     b1c:	76 95       	lsr	r23
     b1e:	67 95       	ror	r22
     b20:	57 95       	ror	r21
     b22:	47 95       	ror	r20
     b24:	84 15       	cp	r24, r4
     b26:	95 05       	cpc	r25, r5
     b28:	a6 05       	cpc	r26, r6
     b2a:	b7 05       	cpc	r27, r7
     b2c:	08 f4       	brcc	.+2      	; 0xb30 <usart_set_baudrate+0x7a>
     b2e:	ab c0       	rjmp	.+342    	; 0xc86 <usart_set_baudrate+0x1d0>
     b30:	44 16       	cp	r4, r20
     b32:	55 06       	cpc	r5, r21
     b34:	66 06       	cpc	r6, r22
     b36:	77 06       	cpc	r7, r23
     b38:	08 f4       	brcc	.+2      	; 0xb3c <usart_set_baudrate+0x86>
     b3a:	a7 c0       	rjmp	.+334    	; 0xc8a <usart_set_baudrate+0x1d4>
     b3c:	f1 01       	movw	r30, r2
     b3e:	84 81       	ldd	r24, Z+4	; 0x04
     b40:	82 fd       	sbrc	r24, 2
     b42:	04 c0       	rjmp	.+8      	; 0xb4c <usart_set_baudrate+0x96>
     b44:	44 0c       	add	r4, r4
     b46:	55 1c       	adc	r5, r5
     b48:	66 1c       	adc	r6, r6
     b4a:	77 1c       	adc	r7, r7
     b4c:	c5 01       	movw	r24, r10
     b4e:	b4 01       	movw	r22, r8
     b50:	a3 01       	movw	r20, r6
     b52:	92 01       	movw	r18, r4
     b54:	0e 94 e0 0d 	call	0x1bc0	; 0x1bc0 <__udivmodsi4>
     b58:	2f 3f       	cpi	r18, 0xFF	; 255
     b5a:	31 05       	cpc	r19, r1
     b5c:	41 05       	cpc	r20, r1
     b5e:	51 05       	cpc	r21, r1
     b60:	08 f4       	brcc	.+2      	; 0xb64 <usart_set_baudrate+0xae>
     b62:	95 c0       	rjmp	.+298    	; 0xc8e <usart_set_baudrate+0x1d8>
     b64:	c1 2c       	mov	r12, r1
     b66:	d1 2c       	mov	r13, r1
     b68:	76 01       	movw	r14, r12
     b6a:	ca 94       	dec	r12
     b6c:	c9 ef       	ldi	r28, 0xF9	; 249
     b6e:	05 c0       	rjmp	.+10     	; 0xb7a <usart_set_baudrate+0xc4>
     b70:	2c 15       	cp	r18, r12
     b72:	3d 05       	cpc	r19, r13
     b74:	4e 05       	cpc	r20, r14
     b76:	5f 05       	cpc	r21, r15
     b78:	68 f0       	brcs	.+26     	; 0xb94 <usart_set_baudrate+0xde>
     b7a:	cc 0c       	add	r12, r12
     b7c:	dd 1c       	adc	r13, r13
     b7e:	ee 1c       	adc	r14, r14
     b80:	ff 1c       	adc	r15, r15
     b82:	cd 3f       	cpi	r28, 0xFD	; 253
     b84:	14 f4       	brge	.+4      	; 0xb8a <usart_set_baudrate+0xd4>
     b86:	68 94       	set
     b88:	c0 f8       	bld	r12, 0
     b8a:	cf 5f       	subi	r28, 0xFF	; 255
     b8c:	c7 30       	cpi	r28, 0x07	; 7
     b8e:	81 f7       	brne	.-32     	; 0xb70 <usart_set_baudrate+0xba>
     b90:	8c 2f       	mov	r24, r28
     b92:	54 c0       	rjmp	.+168    	; 0xc3c <usart_set_baudrate+0x186>
     b94:	8c 2f       	mov	r24, r28
     b96:	cc 23       	and	r28, r28
     b98:	0c f0       	brlt	.+2      	; 0xb9c <usart_set_baudrate+0xe6>
     b9a:	50 c0       	rjmp	.+160    	; 0xc3c <usart_set_baudrate+0x186>
     b9c:	d3 01       	movw	r26, r6
     b9e:	c2 01       	movw	r24, r4
     ba0:	88 0f       	add	r24, r24
     ba2:	99 1f       	adc	r25, r25
     ba4:	aa 1f       	adc	r26, r26
     ba6:	bb 1f       	adc	r27, r27
     ba8:	88 0f       	add	r24, r24
     baa:	99 1f       	adc	r25, r25
     bac:	aa 1f       	adc	r26, r26
     bae:	bb 1f       	adc	r27, r27
     bb0:	88 0f       	add	r24, r24
     bb2:	99 1f       	adc	r25, r25
     bb4:	aa 1f       	adc	r26, r26
     bb6:	bb 1f       	adc	r27, r27
     bb8:	85 01       	movw	r16, r10
     bba:	74 01       	movw	r14, r8
     bbc:	e8 1a       	sub	r14, r24
     bbe:	f9 0a       	sbc	r15, r25
     bc0:	0a 0b       	sbc	r16, r26
     bc2:	1b 0b       	sbc	r17, r27
     bc4:	d8 01       	movw	r26, r16
     bc6:	c7 01       	movw	r24, r14
     bc8:	ce 3f       	cpi	r28, 0xFE	; 254
     bca:	ec f4       	brge	.+58     	; 0xc06 <usart_set_baudrate+0x150>
     bcc:	2d ef       	ldi	r18, 0xFD	; 253
     bce:	3f ef       	ldi	r19, 0xFF	; 255
     bd0:	2c 1b       	sub	r18, r28
     bd2:	31 09       	sbc	r19, r1
     bd4:	c7 fd       	sbrc	r28, 7
     bd6:	33 95       	inc	r19
     bd8:	04 c0       	rjmp	.+8      	; 0xbe2 <usart_set_baudrate+0x12c>
     bda:	88 0f       	add	r24, r24
     bdc:	99 1f       	adc	r25, r25
     bde:	aa 1f       	adc	r26, r26
     be0:	bb 1f       	adc	r27, r27
     be2:	2a 95       	dec	r18
     be4:	d2 f7       	brpl	.-12     	; 0xbda <usart_set_baudrate+0x124>
     be6:	73 01       	movw	r14, r6
     be8:	62 01       	movw	r12, r4
     bea:	f6 94       	lsr	r15
     bec:	e7 94       	ror	r14
     bee:	d7 94       	ror	r13
     bf0:	c7 94       	ror	r12
     bf2:	bc 01       	movw	r22, r24
     bf4:	cd 01       	movw	r24, r26
     bf6:	6c 0d       	add	r22, r12
     bf8:	7d 1d       	adc	r23, r13
     bfa:	8e 1d       	adc	r24, r14
     bfc:	9f 1d       	adc	r25, r15
     bfe:	a3 01       	movw	r20, r6
     c00:	92 01       	movw	r18, r4
     c02:	de d7       	rcall	.+4028   	; 0x1bc0 <__udivmodsi4>
     c04:	36 c0       	rjmp	.+108    	; 0xc72 <usart_set_baudrate+0x1bc>
     c06:	23 e0       	ldi	r18, 0x03	; 3
     c08:	2c 0f       	add	r18, r28
     c0a:	83 01       	movw	r16, r6
     c0c:	72 01       	movw	r14, r4
     c0e:	04 c0       	rjmp	.+8      	; 0xc18 <usart_set_baudrate+0x162>
     c10:	ee 0c       	add	r14, r14
     c12:	ff 1c       	adc	r15, r15
     c14:	00 1f       	adc	r16, r16
     c16:	11 1f       	adc	r17, r17
     c18:	2a 95       	dec	r18
     c1a:	d2 f7       	brpl	.-12     	; 0xc10 <usart_set_baudrate+0x15a>
     c1c:	a8 01       	movw	r20, r16
     c1e:	97 01       	movw	r18, r14
     c20:	67 01       	movw	r12, r14
     c22:	78 01       	movw	r14, r16
     c24:	f6 94       	lsr	r15
     c26:	e7 94       	ror	r14
     c28:	d7 94       	ror	r13
     c2a:	c7 94       	ror	r12
     c2c:	bc 01       	movw	r22, r24
     c2e:	cd 01       	movw	r24, r26
     c30:	6c 0d       	add	r22, r12
     c32:	7d 1d       	adc	r23, r13
     c34:	8e 1d       	adc	r24, r14
     c36:	9f 1d       	adc	r25, r15
     c38:	c3 d7       	rcall	.+3974   	; 0x1bc0 <__udivmodsi4>
     c3a:	1b c0       	rjmp	.+54     	; 0xc72 <usart_set_baudrate+0x1bc>
     c3c:	8d 5f       	subi	r24, 0xFD	; 253
     c3e:	a3 01       	movw	r20, r6
     c40:	92 01       	movw	r18, r4
     c42:	04 c0       	rjmp	.+8      	; 0xc4c <usart_set_baudrate+0x196>
     c44:	22 0f       	add	r18, r18
     c46:	33 1f       	adc	r19, r19
     c48:	44 1f       	adc	r20, r20
     c4a:	55 1f       	adc	r21, r21
     c4c:	8a 95       	dec	r24
     c4e:	d2 f7       	brpl	.-12     	; 0xc44 <usart_set_baudrate+0x18e>
     c50:	da 01       	movw	r26, r20
     c52:	c9 01       	movw	r24, r18
     c54:	b6 95       	lsr	r27
     c56:	a7 95       	ror	r26
     c58:	97 95       	ror	r25
     c5a:	87 95       	ror	r24
     c5c:	bc 01       	movw	r22, r24
     c5e:	cd 01       	movw	r24, r26
     c60:	68 0d       	add	r22, r8
     c62:	79 1d       	adc	r23, r9
     c64:	8a 1d       	adc	r24, r10
     c66:	9b 1d       	adc	r25, r11
     c68:	ab d7       	rcall	.+3926   	; 0x1bc0 <__udivmodsi4>
     c6a:	21 50       	subi	r18, 0x01	; 1
     c6c:	31 09       	sbc	r19, r1
     c6e:	41 09       	sbc	r20, r1
     c70:	51 09       	sbc	r21, r1
     c72:	83 2f       	mov	r24, r19
     c74:	8f 70       	andi	r24, 0x0F	; 15
     c76:	c2 95       	swap	r28
     c78:	c0 7f       	andi	r28, 0xF0	; 240
     c7a:	c8 2b       	or	r28, r24
     c7c:	f1 01       	movw	r30, r2
     c7e:	c7 83       	std	Z+7, r28	; 0x07
     c80:	26 83       	std	Z+6, r18	; 0x06
     c82:	81 e0       	ldi	r24, 0x01	; 1
     c84:	1c c0       	rjmp	.+56     	; 0xcbe <usart_set_baudrate+0x208>
     c86:	80 e0       	ldi	r24, 0x00	; 0
     c88:	1a c0       	rjmp	.+52     	; 0xcbe <usart_set_baudrate+0x208>
     c8a:	80 e0       	ldi	r24, 0x00	; 0
     c8c:	18 c0       	rjmp	.+48     	; 0xcbe <usart_set_baudrate+0x208>
     c8e:	d3 01       	movw	r26, r6
     c90:	c2 01       	movw	r24, r4
     c92:	88 0f       	add	r24, r24
     c94:	99 1f       	adc	r25, r25
     c96:	aa 1f       	adc	r26, r26
     c98:	bb 1f       	adc	r27, r27
     c9a:	88 0f       	add	r24, r24
     c9c:	99 1f       	adc	r25, r25
     c9e:	aa 1f       	adc	r26, r26
     ca0:	bb 1f       	adc	r27, r27
     ca2:	88 0f       	add	r24, r24
     ca4:	99 1f       	adc	r25, r25
     ca6:	aa 1f       	adc	r26, r26
     ca8:	bb 1f       	adc	r27, r27
     caa:	85 01       	movw	r16, r10
     cac:	74 01       	movw	r14, r8
     cae:	e8 1a       	sub	r14, r24
     cb0:	f9 0a       	sbc	r15, r25
     cb2:	0a 0b       	sbc	r16, r26
     cb4:	1b 0b       	sbc	r17, r27
     cb6:	d8 01       	movw	r26, r16
     cb8:	c7 01       	movw	r24, r14
     cba:	c9 ef       	ldi	r28, 0xF9	; 249
     cbc:	87 cf       	rjmp	.-242    	; 0xbcc <usart_set_baudrate+0x116>
     cbe:	cf 91       	pop	r28
     cc0:	1f 91       	pop	r17
     cc2:	0f 91       	pop	r16
     cc4:	ff 90       	pop	r15
     cc6:	ef 90       	pop	r14
     cc8:	df 90       	pop	r13
     cca:	cf 90       	pop	r12
     ccc:	bf 90       	pop	r11
     cce:	af 90       	pop	r10
     cd0:	9f 90       	pop	r9
     cd2:	8f 90       	pop	r8
     cd4:	7f 90       	pop	r7
     cd6:	6f 90       	pop	r6
     cd8:	5f 90       	pop	r5
     cda:	4f 90       	pop	r4
     cdc:	3f 90       	pop	r3
     cde:	2f 90       	pop	r2
     ce0:	08 95       	ret

00000ce2 <usart_init_rs232>:
     ce2:	0f 93       	push	r16
     ce4:	1f 93       	push	r17
     ce6:	cf 93       	push	r28
     ce8:	df 93       	push	r29
     cea:	ec 01       	movw	r28, r24
     cec:	8b 01       	movw	r16, r22
     cee:	00 97       	sbiw	r24, 0x00	; 0
     cf0:	09 f4       	brne	.+2      	; 0xcf4 <usart_init_rs232+0x12>
     cf2:	36 c1       	rjmp	.+620    	; 0xf60 <usart_init_rs232+0x27e>
     cf4:	80 3c       	cpi	r24, 0xC0	; 192
     cf6:	91 05       	cpc	r25, r1
     cf8:	21 f4       	brne	.+8      	; 0xd02 <usart_init_rs232+0x20>
     cfa:	60 e1       	ldi	r22, 0x10	; 16
     cfc:	80 e0       	ldi	r24, 0x00	; 0
     cfe:	9e dc       	rcall	.-1732   	; 0x63c <sysclk_enable_module>
     d00:	2f c1       	rjmp	.+606    	; 0xf60 <usart_init_rs232+0x27e>
     d02:	c0 34       	cpi	r28, 0x40	; 64
     d04:	84 e0       	ldi	r24, 0x04	; 4
     d06:	d8 07       	cpc	r29, r24
     d08:	21 f4       	brne	.+8      	; 0xd12 <usart_init_rs232+0x30>
     d0a:	68 e0       	ldi	r22, 0x08	; 8
     d0c:	80 e0       	ldi	r24, 0x00	; 0
     d0e:	96 dc       	rcall	.-1748   	; 0x63c <sysclk_enable_module>
     d10:	27 c1       	rjmp	.+590    	; 0xf60 <usart_init_rs232+0x27e>
     d12:	c1 15       	cp	r28, r1
     d14:	e4 e0       	ldi	r30, 0x04	; 4
     d16:	de 07       	cpc	r29, r30
     d18:	21 f4       	brne	.+8      	; 0xd22 <usart_init_rs232+0x40>
     d1a:	64 e0       	ldi	r22, 0x04	; 4
     d1c:	80 e0       	ldi	r24, 0x00	; 0
     d1e:	8e dc       	rcall	.-1764   	; 0x63c <sysclk_enable_module>
     d20:	1f c1       	rjmp	.+574    	; 0xf60 <usart_init_rs232+0x27e>
     d22:	c0 38       	cpi	r28, 0x80	; 128
     d24:	f1 e0       	ldi	r31, 0x01	; 1
     d26:	df 07       	cpc	r29, r31
     d28:	21 f4       	brne	.+8      	; 0xd32 <usart_init_rs232+0x50>
     d2a:	62 e0       	ldi	r22, 0x02	; 2
     d2c:	80 e0       	ldi	r24, 0x00	; 0
     d2e:	86 dc       	rcall	.-1780   	; 0x63c <sysclk_enable_module>
     d30:	17 c1       	rjmp	.+558    	; 0xf60 <usart_init_rs232+0x27e>
     d32:	c1 15       	cp	r28, r1
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	d8 07       	cpc	r29, r24
     d38:	21 f4       	brne	.+8      	; 0xd42 <usart_init_rs232+0x60>
     d3a:	61 e0       	ldi	r22, 0x01	; 1
     d3c:	80 e0       	ldi	r24, 0x00	; 0
     d3e:	7e dc       	rcall	.-1796   	; 0x63c <sysclk_enable_module>
     d40:	0f c1       	rjmp	.+542    	; 0xf60 <usart_init_rs232+0x27e>
     d42:	c0 38       	cpi	r28, 0x80	; 128
     d44:	e3 e0       	ldi	r30, 0x03	; 3
     d46:	de 07       	cpc	r29, r30
     d48:	21 f4       	brne	.+8      	; 0xd52 <usart_init_rs232+0x70>
     d4a:	61 e0       	ldi	r22, 0x01	; 1
     d4c:	81 e0       	ldi	r24, 0x01	; 1
     d4e:	76 dc       	rcall	.-1812   	; 0x63c <sysclk_enable_module>
     d50:	07 c1       	rjmp	.+526    	; 0xf60 <usart_init_rs232+0x27e>
     d52:	c0 39       	cpi	r28, 0x90	; 144
     d54:	f3 e0       	ldi	r31, 0x03	; 3
     d56:	df 07       	cpc	r29, r31
     d58:	21 f4       	brne	.+8      	; 0xd62 <usart_init_rs232+0x80>
     d5a:	61 e0       	ldi	r22, 0x01	; 1
     d5c:	82 e0       	ldi	r24, 0x02	; 2
     d5e:	6e dc       	rcall	.-1828   	; 0x63c <sysclk_enable_module>
     d60:	ff c0       	rjmp	.+510    	; 0xf60 <usart_init_rs232+0x27e>
     d62:	c1 15       	cp	r28, r1
     d64:	82 e0       	ldi	r24, 0x02	; 2
     d66:	d8 07       	cpc	r29, r24
     d68:	21 f4       	brne	.+8      	; 0xd72 <usart_init_rs232+0x90>
     d6a:	62 e0       	ldi	r22, 0x02	; 2
     d6c:	81 e0       	ldi	r24, 0x01	; 1
     d6e:	66 dc       	rcall	.-1844   	; 0x63c <sysclk_enable_module>
     d70:	f7 c0       	rjmp	.+494    	; 0xf60 <usart_init_rs232+0x27e>
     d72:	c0 34       	cpi	r28, 0x40	; 64
     d74:	e2 e0       	ldi	r30, 0x02	; 2
     d76:	de 07       	cpc	r29, r30
     d78:	21 f4       	brne	.+8      	; 0xd82 <usart_init_rs232+0xa0>
     d7a:	62 e0       	ldi	r22, 0x02	; 2
     d7c:	82 e0       	ldi	r24, 0x02	; 2
     d7e:	5e dc       	rcall	.-1860   	; 0x63c <sysclk_enable_module>
     d80:	ef c0       	rjmp	.+478    	; 0xf60 <usart_init_rs232+0x27e>
     d82:	c1 15       	cp	r28, r1
     d84:	f3 e0       	ldi	r31, 0x03	; 3
     d86:	df 07       	cpc	r29, r31
     d88:	21 f4       	brne	.+8      	; 0xd92 <usart_init_rs232+0xb0>
     d8a:	64 e0       	ldi	r22, 0x04	; 4
     d8c:	81 e0       	ldi	r24, 0x01	; 1
     d8e:	56 dc       	rcall	.-1876   	; 0x63c <sysclk_enable_module>
     d90:	e7 c0       	rjmp	.+462    	; 0xf60 <usart_init_rs232+0x27e>
     d92:	c0 32       	cpi	r28, 0x20	; 32
     d94:	83 e0       	ldi	r24, 0x03	; 3
     d96:	d8 07       	cpc	r29, r24
     d98:	21 f4       	brne	.+8      	; 0xda2 <usart_init_rs232+0xc0>
     d9a:	64 e0       	ldi	r22, 0x04	; 4
     d9c:	82 e0       	ldi	r24, 0x02	; 2
     d9e:	4e dc       	rcall	.-1892   	; 0x63c <sysclk_enable_module>
     da0:	df c0       	rjmp	.+446    	; 0xf60 <usart_init_rs232+0x27e>
     da2:	c1 15       	cp	r28, r1
     da4:	e8 e0       	ldi	r30, 0x08	; 8
     da6:	de 07       	cpc	r29, r30
     da8:	21 f4       	brne	.+8      	; 0xdb2 <usart_init_rs232+0xd0>
     daa:	61 e0       	ldi	r22, 0x01	; 1
     dac:	83 e0       	ldi	r24, 0x03	; 3
     dae:	46 dc       	rcall	.-1908   	; 0x63c <sysclk_enable_module>
     db0:	d7 c0       	rjmp	.+430    	; 0xf60 <usart_init_rs232+0x27e>
     db2:	c1 15       	cp	r28, r1
     db4:	f9 e0       	ldi	r31, 0x09	; 9
     db6:	df 07       	cpc	r29, r31
     db8:	21 f4       	brne	.+8      	; 0xdc2 <usart_init_rs232+0xe0>
     dba:	61 e0       	ldi	r22, 0x01	; 1
     dbc:	84 e0       	ldi	r24, 0x04	; 4
     dbe:	3e dc       	rcall	.-1924   	; 0x63c <sysclk_enable_module>
     dc0:	cf c0       	rjmp	.+414    	; 0xf60 <usart_init_rs232+0x27e>
     dc2:	c1 15       	cp	r28, r1
     dc4:	8a e0       	ldi	r24, 0x0A	; 10
     dc6:	d8 07       	cpc	r29, r24
     dc8:	21 f4       	brne	.+8      	; 0xdd2 <usart_init_rs232+0xf0>
     dca:	61 e0       	ldi	r22, 0x01	; 1
     dcc:	85 e0       	ldi	r24, 0x05	; 5
     dce:	36 dc       	rcall	.-1940   	; 0x63c <sysclk_enable_module>
     dd0:	c7 c0       	rjmp	.+398    	; 0xf60 <usart_init_rs232+0x27e>
     dd2:	c1 15       	cp	r28, r1
     dd4:	eb e0       	ldi	r30, 0x0B	; 11
     dd6:	de 07       	cpc	r29, r30
     dd8:	21 f4       	brne	.+8      	; 0xde2 <usart_init_rs232+0x100>
     dda:	61 e0       	ldi	r22, 0x01	; 1
     ddc:	86 e0       	ldi	r24, 0x06	; 6
     dde:	2e dc       	rcall	.-1956   	; 0x63c <sysclk_enable_module>
     de0:	bf c0       	rjmp	.+382    	; 0xf60 <usart_init_rs232+0x27e>
     de2:	c0 34       	cpi	r28, 0x40	; 64
     de4:	f8 e0       	ldi	r31, 0x08	; 8
     de6:	df 07       	cpc	r29, r31
     de8:	21 f4       	brne	.+8      	; 0xdf2 <usart_init_rs232+0x110>
     dea:	62 e0       	ldi	r22, 0x02	; 2
     dec:	83 e0       	ldi	r24, 0x03	; 3
     dee:	26 dc       	rcall	.-1972   	; 0x63c <sysclk_enable_module>
     df0:	b7 c0       	rjmp	.+366    	; 0xf60 <usart_init_rs232+0x27e>
     df2:	c0 34       	cpi	r28, 0x40	; 64
     df4:	89 e0       	ldi	r24, 0x09	; 9
     df6:	d8 07       	cpc	r29, r24
     df8:	21 f4       	brne	.+8      	; 0xe02 <usart_init_rs232+0x120>
     dfa:	62 e0       	ldi	r22, 0x02	; 2
     dfc:	84 e0       	ldi	r24, 0x04	; 4
     dfe:	1e dc       	rcall	.-1988   	; 0x63c <sysclk_enable_module>
     e00:	af c0       	rjmp	.+350    	; 0xf60 <usart_init_rs232+0x27e>
     e02:	c0 34       	cpi	r28, 0x40	; 64
     e04:	ea e0       	ldi	r30, 0x0A	; 10
     e06:	de 07       	cpc	r29, r30
     e08:	21 f4       	brne	.+8      	; 0xe12 <usart_init_rs232+0x130>
     e0a:	62 e0       	ldi	r22, 0x02	; 2
     e0c:	85 e0       	ldi	r24, 0x05	; 5
     e0e:	16 dc       	rcall	.-2004   	; 0x63c <sysclk_enable_module>
     e10:	a7 c0       	rjmp	.+334    	; 0xf60 <usart_init_rs232+0x27e>
     e12:	c0 34       	cpi	r28, 0x40	; 64
     e14:	fb e0       	ldi	r31, 0x0B	; 11
     e16:	df 07       	cpc	r29, r31
     e18:	21 f4       	brne	.+8      	; 0xe22 <usart_init_rs232+0x140>
     e1a:	62 e0       	ldi	r22, 0x02	; 2
     e1c:	86 e0       	ldi	r24, 0x06	; 6
     e1e:	0e dc       	rcall	.-2020   	; 0x63c <sysclk_enable_module>
     e20:	9f c0       	rjmp	.+318    	; 0xf60 <usart_init_rs232+0x27e>
     e22:	c0 39       	cpi	r28, 0x90	; 144
     e24:	88 e0       	ldi	r24, 0x08	; 8
     e26:	d8 07       	cpc	r29, r24
     e28:	21 f4       	brne	.+8      	; 0xe32 <usart_init_rs232+0x150>
     e2a:	64 e0       	ldi	r22, 0x04	; 4
     e2c:	83 e0       	ldi	r24, 0x03	; 3
     e2e:	06 dc       	rcall	.-2036   	; 0x63c <sysclk_enable_module>
     e30:	97 c0       	rjmp	.+302    	; 0xf60 <usart_init_rs232+0x27e>
     e32:	c0 39       	cpi	r28, 0x90	; 144
     e34:	e9 e0       	ldi	r30, 0x09	; 9
     e36:	de 07       	cpc	r29, r30
     e38:	21 f4       	brne	.+8      	; 0xe42 <usart_init_rs232+0x160>
     e3a:	64 e0       	ldi	r22, 0x04	; 4
     e3c:	84 e0       	ldi	r24, 0x04	; 4
     e3e:	fe db       	rcall	.-2052   	; 0x63c <sysclk_enable_module>
     e40:	8f c0       	rjmp	.+286    	; 0xf60 <usart_init_rs232+0x27e>
     e42:	c0 39       	cpi	r28, 0x90	; 144
     e44:	fa e0       	ldi	r31, 0x0A	; 10
     e46:	df 07       	cpc	r29, r31
     e48:	21 f4       	brne	.+8      	; 0xe52 <usart_init_rs232+0x170>
     e4a:	64 e0       	ldi	r22, 0x04	; 4
     e4c:	85 e0       	ldi	r24, 0x05	; 5
     e4e:	f6 db       	rcall	.-2068   	; 0x63c <sysclk_enable_module>
     e50:	87 c0       	rjmp	.+270    	; 0xf60 <usart_init_rs232+0x27e>
     e52:	c0 39       	cpi	r28, 0x90	; 144
     e54:	8b e0       	ldi	r24, 0x0B	; 11
     e56:	d8 07       	cpc	r29, r24
     e58:	21 f4       	brne	.+8      	; 0xe62 <usart_init_rs232+0x180>
     e5a:	64 e0       	ldi	r22, 0x04	; 4
     e5c:	86 e0       	ldi	r24, 0x06	; 6
     e5e:	ee db       	rcall	.-2084   	; 0x63c <sysclk_enable_module>
     e60:	7f c0       	rjmp	.+254    	; 0xf60 <usart_init_rs232+0x27e>
     e62:	c0 3c       	cpi	r28, 0xC0	; 192
     e64:	e8 e0       	ldi	r30, 0x08	; 8
     e66:	de 07       	cpc	r29, r30
     e68:	21 f4       	brne	.+8      	; 0xe72 <usart_init_rs232+0x190>
     e6a:	68 e0       	ldi	r22, 0x08	; 8
     e6c:	83 e0       	ldi	r24, 0x03	; 3
     e6e:	e6 db       	rcall	.-2100   	; 0x63c <sysclk_enable_module>
     e70:	77 c0       	rjmp	.+238    	; 0xf60 <usart_init_rs232+0x27e>
     e72:	c0 3c       	cpi	r28, 0xC0	; 192
     e74:	f9 e0       	ldi	r31, 0x09	; 9
     e76:	df 07       	cpc	r29, r31
     e78:	21 f4       	brne	.+8      	; 0xe82 <usart_init_rs232+0x1a0>
     e7a:	68 e0       	ldi	r22, 0x08	; 8
     e7c:	84 e0       	ldi	r24, 0x04	; 4
     e7e:	de db       	rcall	.-2116   	; 0x63c <sysclk_enable_module>
     e80:	6f c0       	rjmp	.+222    	; 0xf60 <usart_init_rs232+0x27e>
     e82:	c0 3c       	cpi	r28, 0xC0	; 192
     e84:	8a e0       	ldi	r24, 0x0A	; 10
     e86:	d8 07       	cpc	r29, r24
     e88:	21 f4       	brne	.+8      	; 0xe92 <usart_init_rs232+0x1b0>
     e8a:	68 e0       	ldi	r22, 0x08	; 8
     e8c:	85 e0       	ldi	r24, 0x05	; 5
     e8e:	d6 db       	rcall	.-2132   	; 0x63c <sysclk_enable_module>
     e90:	67 c0       	rjmp	.+206    	; 0xf60 <usart_init_rs232+0x27e>
     e92:	c0 3c       	cpi	r28, 0xC0	; 192
     e94:	eb e0       	ldi	r30, 0x0B	; 11
     e96:	de 07       	cpc	r29, r30
     e98:	21 f4       	brne	.+8      	; 0xea2 <usart_init_rs232+0x1c0>
     e9a:	68 e0       	ldi	r22, 0x08	; 8
     e9c:	86 e0       	ldi	r24, 0x06	; 6
     e9e:	ce db       	rcall	.-2148   	; 0x63c <sysclk_enable_module>
     ea0:	5f c0       	rjmp	.+190    	; 0xf60 <usart_init_rs232+0x27e>
     ea2:	c0 3a       	cpi	r28, 0xA0	; 160
     ea4:	f8 e0       	ldi	r31, 0x08	; 8
     ea6:	df 07       	cpc	r29, r31
     ea8:	21 f4       	brne	.+8      	; 0xeb2 <usart_init_rs232+0x1d0>
     eaa:	60 e1       	ldi	r22, 0x10	; 16
     eac:	83 e0       	ldi	r24, 0x03	; 3
     eae:	c6 db       	rcall	.-2164   	; 0x63c <sysclk_enable_module>
     eb0:	57 c0       	rjmp	.+174    	; 0xf60 <usart_init_rs232+0x27e>
     eb2:	c0 3a       	cpi	r28, 0xA0	; 160
     eb4:	89 e0       	ldi	r24, 0x09	; 9
     eb6:	d8 07       	cpc	r29, r24
     eb8:	21 f4       	brne	.+8      	; 0xec2 <usart_init_rs232+0x1e0>
     eba:	60 e1       	ldi	r22, 0x10	; 16
     ebc:	84 e0       	ldi	r24, 0x04	; 4
     ebe:	be db       	rcall	.-2180   	; 0x63c <sysclk_enable_module>
     ec0:	4f c0       	rjmp	.+158    	; 0xf60 <usart_init_rs232+0x27e>
     ec2:	c0 3a       	cpi	r28, 0xA0	; 160
     ec4:	ea e0       	ldi	r30, 0x0A	; 10
     ec6:	de 07       	cpc	r29, r30
     ec8:	21 f4       	brne	.+8      	; 0xed2 <usart_init_rs232+0x1f0>
     eca:	60 e1       	ldi	r22, 0x10	; 16
     ecc:	85 e0       	ldi	r24, 0x05	; 5
     ece:	b6 db       	rcall	.-2196   	; 0x63c <sysclk_enable_module>
     ed0:	47 c0       	rjmp	.+142    	; 0xf60 <usart_init_rs232+0x27e>
     ed2:	c0 3a       	cpi	r28, 0xA0	; 160
     ed4:	fb e0       	ldi	r31, 0x0B	; 11
     ed6:	df 07       	cpc	r29, r31
     ed8:	21 f4       	brne	.+8      	; 0xee2 <usart_init_rs232+0x200>
     eda:	60 e1       	ldi	r22, 0x10	; 16
     edc:	86 e0       	ldi	r24, 0x06	; 6
     ede:	ae db       	rcall	.-2212   	; 0x63c <sysclk_enable_module>
     ee0:	3f c0       	rjmp	.+126    	; 0xf60 <usart_init_rs232+0x27e>
     ee2:	c0 3b       	cpi	r28, 0xB0	; 176
     ee4:	88 e0       	ldi	r24, 0x08	; 8
     ee6:	d8 07       	cpc	r29, r24
     ee8:	21 f4       	brne	.+8      	; 0xef2 <usart_init_rs232+0x210>
     eea:	60 e2       	ldi	r22, 0x20	; 32
     eec:	83 e0       	ldi	r24, 0x03	; 3
     eee:	a6 db       	rcall	.-2228   	; 0x63c <sysclk_enable_module>
     ef0:	37 c0       	rjmp	.+110    	; 0xf60 <usart_init_rs232+0x27e>
     ef2:	c0 3b       	cpi	r28, 0xB0	; 176
     ef4:	e9 e0       	ldi	r30, 0x09	; 9
     ef6:	de 07       	cpc	r29, r30
     ef8:	21 f4       	brne	.+8      	; 0xf02 <usart_init_rs232+0x220>
     efa:	60 e2       	ldi	r22, 0x20	; 32
     efc:	84 e0       	ldi	r24, 0x04	; 4
     efe:	9e db       	rcall	.-2244   	; 0x63c <sysclk_enable_module>
     f00:	2f c0       	rjmp	.+94     	; 0xf60 <usart_init_rs232+0x27e>
     f02:	c0 3b       	cpi	r28, 0xB0	; 176
     f04:	fa e0       	ldi	r31, 0x0A	; 10
     f06:	df 07       	cpc	r29, r31
     f08:	21 f4       	brne	.+8      	; 0xf12 <usart_init_rs232+0x230>
     f0a:	60 e2       	ldi	r22, 0x20	; 32
     f0c:	85 e0       	ldi	r24, 0x05	; 5
     f0e:	96 db       	rcall	.-2260   	; 0x63c <sysclk_enable_module>
     f10:	27 c0       	rjmp	.+78     	; 0xf60 <usart_init_rs232+0x27e>
     f12:	c0 3b       	cpi	r28, 0xB0	; 176
     f14:	8b e0       	ldi	r24, 0x0B	; 11
     f16:	d8 07       	cpc	r29, r24
     f18:	21 f4       	brne	.+8      	; 0xf22 <usart_init_rs232+0x240>
     f1a:	60 e2       	ldi	r22, 0x20	; 32
     f1c:	86 e0       	ldi	r24, 0x06	; 6
     f1e:	8e db       	rcall	.-2276   	; 0x63c <sysclk_enable_module>
     f20:	1f c0       	rjmp	.+62     	; 0xf60 <usart_init_rs232+0x27e>
     f22:	c0 38       	cpi	r28, 0x80	; 128
     f24:	e4 e0       	ldi	r30, 0x04	; 4
     f26:	de 07       	cpc	r29, r30
     f28:	21 f4       	brne	.+8      	; 0xf32 <usart_init_rs232+0x250>
     f2a:	60 e4       	ldi	r22, 0x40	; 64
     f2c:	83 e0       	ldi	r24, 0x03	; 3
     f2e:	86 db       	rcall	.-2292   	; 0x63c <sysclk_enable_module>
     f30:	17 c0       	rjmp	.+46     	; 0xf60 <usart_init_rs232+0x27e>
     f32:	c0 39       	cpi	r28, 0x90	; 144
     f34:	f4 e0       	ldi	r31, 0x04	; 4
     f36:	df 07       	cpc	r29, r31
     f38:	21 f4       	brne	.+8      	; 0xf42 <usart_init_rs232+0x260>
     f3a:	60 e4       	ldi	r22, 0x40	; 64
     f3c:	84 e0       	ldi	r24, 0x04	; 4
     f3e:	7e db       	rcall	.-2308   	; 0x63c <sysclk_enable_module>
     f40:	0f c0       	rjmp	.+30     	; 0xf60 <usart_init_rs232+0x27e>
     f42:	c0 3a       	cpi	r28, 0xA0	; 160
     f44:	84 e0       	ldi	r24, 0x04	; 4
     f46:	d8 07       	cpc	r29, r24
     f48:	21 f4       	brne	.+8      	; 0xf52 <usart_init_rs232+0x270>
     f4a:	60 e4       	ldi	r22, 0x40	; 64
     f4c:	85 e0       	ldi	r24, 0x05	; 5
     f4e:	76 db       	rcall	.-2324   	; 0x63c <sysclk_enable_module>
     f50:	07 c0       	rjmp	.+14     	; 0xf60 <usart_init_rs232+0x27e>
     f52:	c0 3b       	cpi	r28, 0xB0	; 176
     f54:	e4 e0       	ldi	r30, 0x04	; 4
     f56:	de 07       	cpc	r29, r30
     f58:	19 f4       	brne	.+6      	; 0xf60 <usart_init_rs232+0x27e>
     f5a:	60 e4       	ldi	r22, 0x40	; 64
     f5c:	86 e0       	ldi	r24, 0x06	; 6
     f5e:	6e db       	rcall	.-2340   	; 0x63c <sysclk_enable_module>
     f60:	8d 81       	ldd	r24, Y+5	; 0x05
     f62:	8f 73       	andi	r24, 0x3F	; 63
     f64:	8d 83       	std	Y+5, r24	; 0x05
     f66:	f8 01       	movw	r30, r16
     f68:	94 81       	ldd	r25, Z+4	; 0x04
     f6a:	85 81       	ldd	r24, Z+5	; 0x05
     f6c:	89 2b       	or	r24, r25
     f6e:	96 81       	ldd	r25, Z+6	; 0x06
     f70:	91 11       	cpse	r25, r1
     f72:	98 e0       	ldi	r25, 0x08	; 8
     f74:	89 2b       	or	r24, r25
     f76:	8d 83       	std	Y+5, r24	; 0x05
     f78:	f8 01       	movw	r30, r16
     f7a:	40 81       	ld	r20, Z
     f7c:	51 81       	ldd	r21, Z+1	; 0x01
     f7e:	62 81       	ldd	r22, Z+2	; 0x02
     f80:	73 81       	ldd	r23, Z+3	; 0x03
     f82:	00 e0       	ldi	r16, 0x00	; 0
     f84:	18 e4       	ldi	r17, 0x48	; 72
     f86:	28 ee       	ldi	r18, 0xE8	; 232
     f88:	31 e0       	ldi	r19, 0x01	; 1
     f8a:	ce 01       	movw	r24, r28
     f8c:	94 dd       	rcall	.-1240   	; 0xab6 <usart_set_baudrate>
     f8e:	9c 81       	ldd	r25, Y+4	; 0x04
     f90:	98 60       	ori	r25, 0x08	; 8
     f92:	9c 83       	std	Y+4, r25	; 0x04
     f94:	9c 81       	ldd	r25, Y+4	; 0x04
     f96:	90 61       	ori	r25, 0x10	; 16
     f98:	9c 83       	std	Y+4, r25	; 0x04
     f9a:	df 91       	pop	r29
     f9c:	cf 91       	pop	r28
     f9e:	1f 91       	pop	r17
     fa0:	0f 91       	pop	r16
     fa2:	08 95       	ret

00000fa4 <ADC_init>:
 */ 
#include <asf.h>
#include "Drivers/ADC/ADC_init.h"
/* This driver can be used to initialize any of the ADCs */

void ADC_init(void){
     fa4:	ff 92       	push	r15
     fa6:	0f 93       	push	r16
     fa8:	1f 93       	push	r17
     faa:	cf 93       	push	r28
     fac:	df 93       	push	r29
	ADCA.CTRLA = 0b00000001; //Enables the ADC.
     fae:	c0 e0       	ldi	r28, 0x00	; 0
     fb0:	d2 e0       	ldi	r29, 0x02	; 2
     fb2:	ff 24       	eor	r15, r15
     fb4:	f3 94       	inc	r15
     fb6:	f8 82       	st	Y, r15
	ADCA.CTRLB = 0b00000000; //Unsigned 12 bit mode.
     fb8:	19 82       	std	Y+1, r1	; 0x01
	ADCA.REFCTRL = 0b00010000; //Voltage reference of Vcc/1.6V
     fba:	80 e1       	ldi	r24, 0x10	; 16
     fbc:	8a 83       	std	Y+2, r24	; 0x02
	ADCA.PRESCALER = 0b00000101; //This is automatic prescalar of 128 on the clock.
     fbe:	85 e0       	ldi	r24, 0x05	; 5
     fc0:	8c 83       	std	Y+4, r24	; 0x04
 *
 * \param address Byte offset into the signature row
 */
static inline uint8_t nvm_read_production_signature_row(uint8_t address)
{
	return nvm_read_byte(NVM_CMD_READ_CALIB_ROW_gc, address);
     fc2:	61 e2       	ldi	r22, 0x21	; 33
     fc4:	70 e0       	ldi	r23, 0x00	; 0
     fc6:	82 e0       	ldi	r24, 0x02	; 2
     fc8:	5e dd       	rcall	.-1348   	; 0xa86 <nvm_read_byte>
	uint16_t data;

	switch (cal) {
#ifdef ADCA
	case ADC_CAL_ADCA:
		data = nvm_read_production_signature_row(ADCACAL1);
     fca:	08 2f       	mov	r16, r24
     fcc:	10 e0       	ldi	r17, 0x00	; 0
		data <<= 8;
     fce:	10 2f       	mov	r17, r16
     fd0:	00 27       	eor	r16, r16
     fd2:	60 e2       	ldi	r22, 0x20	; 32
     fd4:	70 e0       	ldi	r23, 0x00	; 0
     fd6:	82 e0       	ldi	r24, 0x02	; 2
     fd8:	56 dd       	rcall	.-1364   	; 0xa86 <nvm_read_byte>
		data |= nvm_read_production_signature_row(ADCACAL0);
     fda:	08 2b       	or	r16, r24
	ADCA.CAL = adc_get_calibration_data(ADC_CAL_ADCA); //Retrieve stored calibration data about the ADC.
     fdc:	0c 87       	std	Y+12, r16	; 0x0c
     fde:	1d 87       	std	Y+13, r17	; 0x0d

	ADCA.CH0.CTRL = 0b00000001; //Single ended input
     fe0:	f8 a2       	std	Y+32, r15	; 0x20
	ADCA.CH0.MUXCTRL = 0b00000000; //Reading ADCA pin 0.
     fe2:	19 a2       	std	Y+33, r1	; 0x21
     fe4:	df 91       	pop	r29
     fe6:	cf 91       	pop	r28
     fe8:	1f 91       	pop	r17
     fea:	0f 91       	pop	r16
     fec:	ff 90       	pop	r15
     fee:	08 95       	ret

00000ff0 <getPressure>:
 #include <asf.h>
 #include "Drivers/Pressure/getPressure.h"
float getPressure(void){

	return 0;
     ff0:	60 e0       	ldi	r22, 0x00	; 0
     ff2:	70 e0       	ldi	r23, 0x00	; 0
     ff4:	cb 01       	movw	r24, r22
     ff6:	08 95       	ret

00000ff8 <getTemperature>:
 #include <math.h>
 #include "Drivers/Temperature/getTemperature.h"

 //getTemperature from NTC Thermistor 10k Bead

 float getTemperature(void){
     ff8:	8f 92       	push	r8
     ffa:	9f 92       	push	r9
     ffc:	af 92       	push	r10
     ffe:	bf 92       	push	r11
    1000:	cf 92       	push	r12
    1002:	df 92       	push	r13
    1004:	ef 92       	push	r14
    1006:	ff 92       	push	r15
	ADCA.CH0.CTRL |= 0b10000000; //Start the conversion.. FOR THOMAS: THIS IS A BITWISE OPERATOR THAT KEEPS 1's and MODIFIES ZEROES.
    1008:	e0 e0       	ldi	r30, 0x00	; 0
    100a:	f2 e0       	ldi	r31, 0x02	; 2
    100c:	80 a1       	ldd	r24, Z+32	; 0x20
    100e:	80 68       	ori	r24, 0x80	; 128
    1010:	80 a3       	std	Z+32, r24	; 0x20
		
	while(ADCA.CH0.INTFLAGS == 0); //Wait until conversion is done.
    1012:	83 a1       	ldd	r24, Z+35	; 0x23
    1014:	88 23       	and	r24, r24
    1016:	e9 f3       	breq	.-6      	; 0x1012 <getTemperature+0x1a>
		
	uint16_t adcReading = ADCA.CH0.RES; //Save the result into variable called adcReading.
    1018:	60 91 24 02 	lds	r22, 0x0224	; 0x800224 <__TEXT_REGION_LENGTH__+0x700224>
    101c:	70 91 25 02 	lds	r23, 0x0225	; 0x800225 <__TEXT_REGION_LENGTH__+0x700225>
		
	uint16_t voltage = (uint16_t)((0.0005*adcReading) - 0.0941); //This converts adcReading into an actual voltage based off of slope. NEED TO TEST AND FIND THE SLOPE! voltage*1000 converts it into millivolts.
    1020:	80 e0       	ldi	r24, 0x00	; 0
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	29 d3       	rcall	.+1618   	; 0x1678 <__floatunsisf>
    1026:	2f e6       	ldi	r18, 0x6F	; 111
    1028:	32 e1       	ldi	r19, 0x12	; 18
    102a:	43 e0       	ldi	r20, 0x03	; 3
    102c:	5a e3       	ldi	r21, 0x3A	; 58
    102e:	45 d4       	rcall	.+2186   	; 0x18ba <__mulsf3>
    1030:	20 e8       	ldi	r18, 0x80	; 128
    1032:	37 eb       	ldi	r19, 0xB7	; 183
    1034:	40 ec       	ldi	r20, 0xC0	; 192
    1036:	5d e3       	ldi	r21, 0x3D	; 61
    1038:	ec d1       	rcall	.+984    	; 0x1412 <__subsf3>
    103a:	f2 d2       	rcall	.+1508   	; 0x1620 <__fixunssfsi>
	//If we hadn't multiplied by 1000, the typecast would've truncated the voltage reading to just the one's place.

	float resistance = (10000*(voltage - 3.3))/3.3; //Need to convert our voltage reading into the resistance across the thermistor. To find this we use Rb(Vin - Vout) / Vout
    103c:	80 e0       	ldi	r24, 0x00	; 0
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	1b d3       	rcall	.+1590   	; 0x1678 <__floatunsisf>
    1042:	23 e3       	ldi	r18, 0x33	; 51
    1044:	33 e3       	ldi	r19, 0x33	; 51
    1046:	43 e5       	ldi	r20, 0x53	; 83
    1048:	50 e4       	ldi	r21, 0x40	; 64
    104a:	e3 d1       	rcall	.+966    	; 0x1412 <__subsf3>
    104c:	20 e0       	ldi	r18, 0x00	; 0
    104e:	30 e4       	ldi	r19, 0x40	; 64
    1050:	4c e1       	ldi	r20, 0x1C	; 28
    1052:	56 e4       	ldi	r21, 0x46	; 70
    1054:	32 d4       	rcall	.+2148   	; 0x18ba <__mulsf3>
    1056:	23 e3       	ldi	r18, 0x33	; 51
    1058:	33 e3       	ldi	r19, 0x33	; 51
    105a:	43 e5       	ldi	r20, 0x53	; 83
    105c:	50 e4       	ldi	r21, 0x40	; 64
    105e:	3e d2       	rcall	.+1148   	; 0x14dc <__divsf3>
	
	float a = 0.003354016; //A value for the NTCLE100E3103HT1 in the Steinhart-Hart equation (T = 1/(A + Bln(resistance) + Dln^3(resistance))
	float b = 0.000256985; //B value
	float d = 0.00000006383091; //D value.
	return 1/(a+ b*log(resistance/10000) + d*log(resistance/10000)*log(resistance/10000)*log(resistance/10000)); //Steinhart-Hart to find temperature then return it.
    1060:	20 e0       	ldi	r18, 0x00	; 0
    1062:	30 e4       	ldi	r19, 0x40	; 64
    1064:	4c e1       	ldi	r20, 0x1C	; 28
    1066:	56 e4       	ldi	r21, 0x46	; 70
    1068:	39 d2       	rcall	.+1138   	; 0x14dc <__divsf3>
    106a:	e7 d3       	rcall	.+1998   	; 0x183a <log>
    106c:	6b 01       	movw	r12, r22
    106e:	7c 01       	movw	r14, r24
    1070:	21 ef       	ldi	r18, 0xF1	; 241
    1072:	3b eb       	ldi	r19, 0xBB	; 187
    1074:	46 e8       	ldi	r20, 0x86	; 134
    1076:	59 e3       	ldi	r21, 0x39	; 57
    1078:	20 d4       	rcall	.+2112   	; 0x18ba <__mulsf3>
    107a:	2d e0       	ldi	r18, 0x0D	; 13
    107c:	3f ec       	ldi	r19, 0xCF	; 207
    107e:	4b e5       	ldi	r20, 0x5B	; 91
    1080:	5b e3       	ldi	r21, 0x3B	; 59
    1082:	c8 d1       	rcall	.+912    	; 0x1414 <__addsf3>
    1084:	4b 01       	movw	r8, r22
    1086:	5c 01       	movw	r10, r24
    1088:	2a e6       	ldi	r18, 0x6A	; 106
    108a:	33 e1       	ldi	r19, 0x13	; 19
    108c:	49 e8       	ldi	r20, 0x89	; 137
    108e:	53 e3       	ldi	r21, 0x33	; 51
    1090:	c7 01       	movw	r24, r14
    1092:	b6 01       	movw	r22, r12
    1094:	12 d4       	rcall	.+2084   	; 0x18ba <__mulsf3>
    1096:	9b 01       	movw	r18, r22
    1098:	ac 01       	movw	r20, r24
    109a:	c7 01       	movw	r24, r14
    109c:	b6 01       	movw	r22, r12
    109e:	0d d4       	rcall	.+2074   	; 0x18ba <__mulsf3>
    10a0:	9b 01       	movw	r18, r22
    10a2:	ac 01       	movw	r20, r24
    10a4:	c7 01       	movw	r24, r14
    10a6:	b6 01       	movw	r22, r12
    10a8:	08 d4       	rcall	.+2064   	; 0x18ba <__mulsf3>
    10aa:	9b 01       	movw	r18, r22
    10ac:	ac 01       	movw	r20, r24
    10ae:	c5 01       	movw	r24, r10
    10b0:	b4 01       	movw	r22, r8
    10b2:	b0 d1       	rcall	.+864    	; 0x1414 <__addsf3>
    10b4:	9b 01       	movw	r18, r22
    10b6:	ac 01       	movw	r20, r24
    10b8:	60 e0       	ldi	r22, 0x00	; 0
    10ba:	70 e0       	ldi	r23, 0x00	; 0
    10bc:	80 e8       	ldi	r24, 0x80	; 128
    10be:	9f e3       	ldi	r25, 0x3F	; 63
    10c0:	0d d2       	rcall	.+1050   	; 0x14dc <__divsf3>
    10c2:	ff 90       	pop	r15
    10c4:	ef 90       	pop	r14
    10c6:	df 90       	pop	r13
    10c8:	cf 90       	pop	r12
    10ca:	bf 90       	pop	r11
    10cc:	af 90       	pop	r10
    10ce:	9f 90       	pop	r9
    10d0:	8f 90       	pop	r8
    10d2:	08 95       	ret

000010d4 <usart_serial_getchar>:
 * \param usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if usart, uint8_t *data)
{
    10d4:	cf 93       	push	r28
    10d6:	df 93       	push	r29
    10d8:	eb 01       	movw	r28, r22
	*data = usart_getchar(usart);
    10da:	e7 dc       	rcall	.-1586   	; 0xaaa <usart_getchar>
    10dc:	88 83       	st	Y, r24
}
    10de:	df 91       	pop	r29
    10e0:	cf 91       	pop	r28
    10e2:	08 95       	ret

000010e4 <usart_serial_putchar>:
 *
 * \return Status code
 */
static inline enum status_code usart_serial_putchar(usart_if usart, uint8_t c)
{
	return usart_putchar(usart, c);
    10e4:	da cc       	rjmp	.-1612   	; 0xa9a <usart_putchar>
}
    10e6:	08 95       	ret

000010e8 <UART_Comms_Init>:
   to start the uart communications */

#include "conf_usart_serial.h" //Includes the information in the config file
#include <asf.h>

void UART_Comms_Init(void){
    10e8:	cf 93       	push	r28
    10ea:	df 93       	push	r29
    10ec:	cd b7       	in	r28, 0x3d	; 61
    10ee:	de b7       	in	r29, 0x3e	; 62
    10f0:	27 97       	sbiw	r28, 0x07	; 7
    10f2:	cd bf       	out	0x3d, r28	; 61
    10f4:	de bf       	out	0x3e, r29	; 62
		.paritytype = USART_SERIAL_PARITY,
		.stopbits = USART_SERIAL_STOP_BIT
	};

	//Must set TX pin as output
	PORTC.DIRSET=0b00001000;
    10f6:	e0 e4       	ldi	r30, 0x40	; 64
    10f8:	f6 e0       	ldi	r31, 0x06	; 6
    10fa:	88 e0       	ldi	r24, 0x08	; 8
    10fc:	81 83       	std	Z+1, r24	; 0x01
	PORTC.OUTSET=0b00001000;
    10fe:	85 83       	std	Z+5, r24	; 0x05
	PORTC.OUT=0xFF;
    1100:	8f ef       	ldi	r24, 0xFF	; 255
    1102:	84 83       	std	Z+4, r24	; 0x04
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
    1104:	80 ea       	ldi	r24, 0xA0	; 160
    1106:	98 e0       	ldi	r25, 0x08	; 8
    1108:	80 93 1d 20 	sts	0x201D, r24	; 0x80201d <stdio_base>
    110c:	90 93 1e 20 	sts	0x201E, r25	; 0x80201e <stdio_base+0x1>
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
    1110:	82 e7       	ldi	r24, 0x72	; 114
    1112:	98 e0       	ldi	r25, 0x08	; 8
    1114:	80 93 1b 20 	sts	0x201B, r24	; 0x80201b <ptr_put>
    1118:	90 93 1c 20 	sts	0x201C, r25	; 0x80201c <ptr_put+0x1>
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
    111c:	8a e6       	ldi	r24, 0x6A	; 106
    111e:	98 e0       	ldi	r25, 0x08	; 8
    1120:	80 93 19 20 	sts	0x2019, r24	; 0x802019 <ptr_get>
    1124:	90 93 1a 20 	sts	0x201A, r25	; 0x80201a <ptr_get+0x1>
static inline bool usart_serial_init(usart_if usart, const
		usart_serial_options_t *options)
{
	// USART options.
	usart_rs232_options_t usart_rs232_options;
	usart_rs232_options.charlength   = options->charlength;
    1128:	e6 e0       	ldi	r30, 0x06	; 6
    112a:	f0 e2       	ldi	r31, 0x20	; 32
    112c:	84 81       	ldd	r24, Z+4	; 0x04
    112e:	8d 83       	std	Y+5, r24	; 0x05
	usart_rs232_options.paritytype   = options->paritytype;
    1130:	85 81       	ldd	r24, Z+5	; 0x05
    1132:	8e 83       	std	Y+6, r24	; 0x06
	usart_rs232_options.stopbits     = options->stopbits;
    1134:	86 81       	ldd	r24, Z+6	; 0x06
    1136:	8f 83       	std	Y+7, r24	; 0x07
	usart_rs232_options.baudrate     = options->baudrate;
    1138:	80 81       	ld	r24, Z
    113a:	91 81       	ldd	r25, Z+1	; 0x01
    113c:	a2 81       	ldd	r26, Z+2	; 0x02
    113e:	b3 81       	ldd	r27, Z+3	; 0x03
    1140:	89 83       	std	Y+1, r24	; 0x01
    1142:	9a 83       	std	Y+2, r25	; 0x02
    1144:	ab 83       	std	Y+3, r26	; 0x03
    1146:	bc 83       	std	Y+4, r27	; 0x04

#ifdef USARTC0
	if((uint16_t)usart == (uint16_t)&USARTC0) {
		sysclk_enable_module(SYSCLK_PORT_C,PR_USART0_bm);
    1148:	60 e1       	ldi	r22, 0x10	; 16
    114a:	83 e0       	ldi	r24, 0x03	; 3
    114c:	77 da       	rcall	.-2834   	; 0x63c <sysclk_enable_module>
#ifdef USARTF1
	if((uint16_t)usart == (uint16_t)&USARTF1) {
		sysclk_enable_module(SYSCLK_PORT_F,PR_USART1_bm);
	}
#endif
	if (usart_init_rs232(usart, &usart_rs232_options)) {
    114e:	be 01       	movw	r22, r28
    1150:	6f 5f       	subi	r22, 0xFF	; 255
    1152:	7f 4f       	sbci	r23, 0xFF	; 255
    1154:	80 ea       	ldi	r24, 0xA0	; 160
    1156:	98 e0       	ldi	r25, 0x08	; 8
    1158:	c4 dd       	rcall	.-1144   	; 0xce2 <usart_init_rs232>
# endif

# if defined(__GNUC__)
#  if (XMEGA || MEGA_RF)
	// For AVR GCC libc print redirection uses fdevopen.
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
    115a:	6a e2       	ldi	r22, 0x2A	; 42
    115c:	73 e0       	ldi	r23, 0x03	; 3
    115e:	83 e4       	ldi	r24, 0x43	; 67
    1160:	93 e0       	ldi	r25, 0x03	; 3
    1162:	b0 d5       	rcall	.+2912   	; 0x1cc4 <fdevopen>

	stdio_serial_init(&USARTC0, &usart_options); //ASF function that initializes the UART peripheral
}
    1164:	27 96       	adiw	r28, 0x07	; 7
    1166:	cd bf       	out	0x3d, r28	; 61
    1168:	de bf       	out	0x3e, r29	; 62
    116a:	df 91       	pop	r29
    116c:	cf 91       	pop	r28
    116e:	08 95       	ret

00001170 <sysclk_enable_peripheral_clock>:
 *
 * \param module Pointer to the module's base address.
 */
static inline void sysclk_enable_peripheral_clock(const volatile void *module)
{
	if (module == NULL) {
    1170:	00 97       	sbiw	r24, 0x00	; 0
    1172:	09 f4       	brne	.+2      	; 0x1176 <sysclk_enable_peripheral_clock+0x6>
    1174:	35 c1       	rjmp	.+618    	; 0x13e0 <sysclk_enable_peripheral_clock+0x270>
		Assert(false);
	}
#ifdef AES
	else if (module == &AES) {
    1176:	80 3c       	cpi	r24, 0xC0	; 192
    1178:	91 05       	cpc	r25, r1
    117a:	21 f4       	brne	.+8      	; 0x1184 <sysclk_enable_peripheral_clock+0x14>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_AES);
    117c:	60 e1       	ldi	r22, 0x10	; 16
    117e:	80 e0       	ldi	r24, 0x00	; 0
    1180:	5d ca       	rjmp	.-2886   	; 0x63c <sysclk_enable_module>
    1182:	08 95       	ret
	}
#endif
#ifdef EBI
	else if (module == &EBI) {
    1184:	80 34       	cpi	r24, 0x40	; 64
    1186:	24 e0       	ldi	r18, 0x04	; 4
    1188:	92 07       	cpc	r25, r18
    118a:	21 f4       	brne	.+8      	; 0x1194 <sysclk_enable_peripheral_clock+0x24>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_EBI);
    118c:	68 e0       	ldi	r22, 0x08	; 8
    118e:	80 e0       	ldi	r24, 0x00	; 0
    1190:	55 ca       	rjmp	.-2902   	; 0x63c <sysclk_enable_module>
    1192:	08 95       	ret
	}
#endif
#ifdef RTC
	else if (module == &RTC) {
    1194:	81 15       	cp	r24, r1
    1196:	24 e0       	ldi	r18, 0x04	; 4
    1198:	92 07       	cpc	r25, r18
    119a:	21 f4       	brne	.+8      	; 0x11a4 <sysclk_enable_peripheral_clock+0x34>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_RTC);
    119c:	64 e0       	ldi	r22, 0x04	; 4
    119e:	80 e0       	ldi	r24, 0x00	; 0
    11a0:	4d ca       	rjmp	.-2918   	; 0x63c <sysclk_enable_module>
    11a2:	08 95       	ret
	}
#endif
#ifdef EVSYS
	else if (module == &EVSYS) {
    11a4:	80 38       	cpi	r24, 0x80	; 128
    11a6:	21 e0       	ldi	r18, 0x01	; 1
    11a8:	92 07       	cpc	r25, r18
    11aa:	21 f4       	brne	.+8      	; 0x11b4 <sysclk_enable_peripheral_clock+0x44>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_EVSYS);
    11ac:	62 e0       	ldi	r22, 0x02	; 2
    11ae:	80 e0       	ldi	r24, 0x00	; 0
    11b0:	45 ca       	rjmp	.-2934   	; 0x63c <sysclk_enable_module>
    11b2:	08 95       	ret
	}
#endif
#ifdef DMA
	else if (module == &DMA) {
    11b4:	81 15       	cp	r24, r1
    11b6:	21 e0       	ldi	r18, 0x01	; 1
    11b8:	92 07       	cpc	r25, r18
    11ba:	21 f4       	brne	.+8      	; 0x11c4 <sysclk_enable_peripheral_clock+0x54>
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_DMA);
    11bc:	61 e0       	ldi	r22, 0x01	; 1
    11be:	80 e0       	ldi	r24, 0x00	; 0
    11c0:	3d ca       	rjmp	.-2950   	; 0x63c <sysclk_enable_module>
    11c2:	08 95       	ret
	else if (module == &EDMA) {
		sysclk_enable_module(SYSCLK_PORT_GEN, SYSCLK_EDMA);
	}
#endif
#ifdef ACA
	else if (module == &ACA) {
    11c4:	80 38       	cpi	r24, 0x80	; 128
    11c6:	23 e0       	ldi	r18, 0x03	; 3
    11c8:	92 07       	cpc	r25, r18
    11ca:	21 f4       	brne	.+8      	; 0x11d4 <sysclk_enable_peripheral_clock+0x64>
		sysclk_enable_module(SYSCLK_PORT_A, SYSCLK_AC);
    11cc:	61 e0       	ldi	r22, 0x01	; 1
    11ce:	81 e0       	ldi	r24, 0x01	; 1
    11d0:	35 ca       	rjmp	.-2966   	; 0x63c <sysclk_enable_module>
    11d2:	08 95       	ret
	}
#endif
#ifdef ACB
	else if (module == &ACB) {
    11d4:	80 39       	cpi	r24, 0x90	; 144
    11d6:	23 e0       	ldi	r18, 0x03	; 3
    11d8:	92 07       	cpc	r25, r18
    11da:	21 f4       	brne	.+8      	; 0x11e4 <sysclk_enable_peripheral_clock+0x74>
		sysclk_enable_module(SYSCLK_PORT_B, SYSCLK_AC);
    11dc:	61 e0       	ldi	r22, 0x01	; 1
    11de:	82 e0       	ldi	r24, 0x02	; 2
    11e0:	2d ca       	rjmp	.-2982   	; 0x63c <sysclk_enable_module>
    11e2:	08 95       	ret
	}
#endif
#ifdef ADCA
	else if (module == &ADCA) {
    11e4:	81 15       	cp	r24, r1
    11e6:	22 e0       	ldi	r18, 0x02	; 2
    11e8:	92 07       	cpc	r25, r18
    11ea:	21 f4       	brne	.+8      	; 0x11f4 <sysclk_enable_peripheral_clock+0x84>
		sysclk_enable_module(SYSCLK_PORT_A, SYSCLK_ADC);
    11ec:	62 e0       	ldi	r22, 0x02	; 2
    11ee:	81 e0       	ldi	r24, 0x01	; 1
    11f0:	25 ca       	rjmp	.-2998   	; 0x63c <sysclk_enable_module>
    11f2:	08 95       	ret
	}
#endif
#ifdef ADCB
	else if (module == &ADCB) {
    11f4:	80 34       	cpi	r24, 0x40	; 64
    11f6:	22 e0       	ldi	r18, 0x02	; 2
    11f8:	92 07       	cpc	r25, r18
    11fa:	21 f4       	brne	.+8      	; 0x1204 <sysclk_enable_peripheral_clock+0x94>
		sysclk_enable_module(SYSCLK_PORT_B, SYSCLK_ADC);
    11fc:	62 e0       	ldi	r22, 0x02	; 2
    11fe:	82 e0       	ldi	r24, 0x02	; 2
    1200:	1d ca       	rjmp	.-3014   	; 0x63c <sysclk_enable_module>
    1202:	08 95       	ret
	}
#endif
#ifdef DACA
	else if (module == &DACA) {
    1204:	81 15       	cp	r24, r1
    1206:	23 e0       	ldi	r18, 0x03	; 3
    1208:	92 07       	cpc	r25, r18
    120a:	21 f4       	brne	.+8      	; 0x1214 <sysclk_enable_peripheral_clock+0xa4>
		sysclk_enable_module(SYSCLK_PORT_A, SYSCLK_DAC);
    120c:	64 e0       	ldi	r22, 0x04	; 4
    120e:	81 e0       	ldi	r24, 0x01	; 1
    1210:	15 ca       	rjmp	.-3030   	; 0x63c <sysclk_enable_module>
    1212:	08 95       	ret
	}
#endif
// Workaround for bad XMEGA D header file
#if !XMEGA_D
#ifdef DACB
	else if (module == &DACB) {
    1214:	80 32       	cpi	r24, 0x20	; 32
    1216:	23 e0       	ldi	r18, 0x03	; 3
    1218:	92 07       	cpc	r25, r18
    121a:	21 f4       	brne	.+8      	; 0x1224 <sysclk_enable_peripheral_clock+0xb4>
		sysclk_enable_module(SYSCLK_PORT_B, SYSCLK_DAC);
    121c:	64 e0       	ldi	r22, 0x04	; 4
    121e:	82 e0       	ldi	r24, 0x02	; 2
    1220:	0d ca       	rjmp	.-3046   	; 0x63c <sysclk_enable_module>
    1222:	08 95       	ret
	}
#endif
#endif // Workaround end
#ifdef TCC0
	else if (module == &TCC0) {
    1224:	81 15       	cp	r24, r1
    1226:	28 e0       	ldi	r18, 0x08	; 8
    1228:	92 07       	cpc	r25, r18
    122a:	21 f4       	brne	.+8      	; 0x1234 <sysclk_enable_peripheral_clock+0xc4>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC0);
    122c:	61 e0       	ldi	r22, 0x01	; 1
    122e:	83 e0       	ldi	r24, 0x03	; 3
    1230:	05 ca       	rjmp	.-3062   	; 0x63c <sysclk_enable_module>
    1232:	08 95       	ret
	}
#endif
#ifdef TCD0
	else if (module == &TCD0) {
    1234:	81 15       	cp	r24, r1
    1236:	29 e0       	ldi	r18, 0x09	; 9
    1238:	92 07       	cpc	r25, r18
    123a:	21 f4       	brne	.+8      	; 0x1244 <sysclk_enable_peripheral_clock+0xd4>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC0);
    123c:	61 e0       	ldi	r22, 0x01	; 1
    123e:	84 e0       	ldi	r24, 0x04	; 4
    1240:	fd c9       	rjmp	.-3078   	; 0x63c <sysclk_enable_module>
    1242:	08 95       	ret
	}
#endif
#ifdef TCE0
	else if (module == &TCE0) {
    1244:	81 15       	cp	r24, r1
    1246:	2a e0       	ldi	r18, 0x0A	; 10
    1248:	92 07       	cpc	r25, r18
    124a:	21 f4       	brne	.+8      	; 0x1254 <sysclk_enable_peripheral_clock+0xe4>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC0);
    124c:	61 e0       	ldi	r22, 0x01	; 1
    124e:	85 e0       	ldi	r24, 0x05	; 5
    1250:	f5 c9       	rjmp	.-3094   	; 0x63c <sysclk_enable_module>
    1252:	08 95       	ret
	}
#endif
#ifdef TCF0
	else if (module == &TCF0) {
    1254:	81 15       	cp	r24, r1
    1256:	2b e0       	ldi	r18, 0x0B	; 11
    1258:	92 07       	cpc	r25, r18
    125a:	21 f4       	brne	.+8      	; 0x1264 <sysclk_enable_peripheral_clock+0xf4>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TC0);
    125c:	61 e0       	ldi	r22, 0x01	; 1
    125e:	86 e0       	ldi	r24, 0x06	; 6
    1260:	ed c9       	rjmp	.-3110   	; 0x63c <sysclk_enable_module>
    1262:	08 95       	ret
	}
#endif
#ifdef TCC1
	else if (module == &TCC1) {
    1264:	80 34       	cpi	r24, 0x40	; 64
    1266:	28 e0       	ldi	r18, 0x08	; 8
    1268:	92 07       	cpc	r25, r18
    126a:	21 f4       	brne	.+8      	; 0x1274 <sysclk_enable_peripheral_clock+0x104>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TC1);
    126c:	62 e0       	ldi	r22, 0x02	; 2
    126e:	83 e0       	ldi	r24, 0x03	; 3
    1270:	e5 c9       	rjmp	.-3126   	; 0x63c <sysclk_enable_module>
    1272:	08 95       	ret
	}
#endif
#ifdef TCD1
	else if (module == &TCD1) {
    1274:	80 34       	cpi	r24, 0x40	; 64
    1276:	29 e0       	ldi	r18, 0x09	; 9
    1278:	92 07       	cpc	r25, r18
    127a:	21 f4       	brne	.+8      	; 0x1284 <sysclk_enable_peripheral_clock+0x114>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC1);
    127c:	62 e0       	ldi	r22, 0x02	; 2
    127e:	84 e0       	ldi	r24, 0x04	; 4
    1280:	dd c9       	rjmp	.-3142   	; 0x63c <sysclk_enable_module>
    1282:	08 95       	ret
	}
#endif
#ifdef TCE1
	else if (module == &TCE1) {
    1284:	80 34       	cpi	r24, 0x40	; 64
    1286:	2a e0       	ldi	r18, 0x0A	; 10
    1288:	92 07       	cpc	r25, r18
    128a:	21 f4       	brne	.+8      	; 0x1294 <sysclk_enable_peripheral_clock+0x124>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TC1);
    128c:	62 e0       	ldi	r22, 0x02	; 2
    128e:	85 e0       	ldi	r24, 0x05	; 5
    1290:	d5 c9       	rjmp	.-3158   	; 0x63c <sysclk_enable_module>
    1292:	08 95       	ret
	}
#endif
#ifdef TCF1
	else if (module == &TCF1) {
    1294:	80 34       	cpi	r24, 0x40	; 64
    1296:	2b e0       	ldi	r18, 0x0B	; 11
    1298:	92 07       	cpc	r25, r18
    129a:	21 f4       	brne	.+8      	; 0x12a4 <sysclk_enable_peripheral_clock+0x134>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TC1);
    129c:	62 e0       	ldi	r22, 0x02	; 2
    129e:	86 e0       	ldi	r24, 0x06	; 6
    12a0:	cd c9       	rjmp	.-3174   	; 0x63c <sysclk_enable_module>
    12a2:	08 95       	ret
	else if (module == &TCD5) {
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TC5);
	}
#endif
#ifdef HIRESC
	else if (module == &HIRESC) {
    12a4:	80 39       	cpi	r24, 0x90	; 144
    12a6:	28 e0       	ldi	r18, 0x08	; 8
    12a8:	92 07       	cpc	r25, r18
    12aa:	21 f4       	brne	.+8      	; 0x12b4 <sysclk_enable_peripheral_clock+0x144>
			sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_HIRES);
    12ac:	64 e0       	ldi	r22, 0x04	; 4
    12ae:	83 e0       	ldi	r24, 0x03	; 3
    12b0:	c5 c9       	rjmp	.-3190   	; 0x63c <sysclk_enable_module>
    12b2:	08 95       	ret
	}
#endif
#ifdef HIRESD
	else if (module == &HIRESD) {
    12b4:	80 39       	cpi	r24, 0x90	; 144
    12b6:	29 e0       	ldi	r18, 0x09	; 9
    12b8:	92 07       	cpc	r25, r18
    12ba:	21 f4       	brne	.+8      	; 0x12c4 <sysclk_enable_peripheral_clock+0x154>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_HIRES);
    12bc:	64 e0       	ldi	r22, 0x04	; 4
    12be:	84 e0       	ldi	r24, 0x04	; 4
    12c0:	bd c9       	rjmp	.-3206   	; 0x63c <sysclk_enable_module>
    12c2:	08 95       	ret
	}
#endif
#ifdef HIRESE
	else if (module == &HIRESE) {
    12c4:	80 39       	cpi	r24, 0x90	; 144
    12c6:	2a e0       	ldi	r18, 0x0A	; 10
    12c8:	92 07       	cpc	r25, r18
    12ca:	21 f4       	brne	.+8      	; 0x12d4 <sysclk_enable_peripheral_clock+0x164>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_HIRES);
    12cc:	64 e0       	ldi	r22, 0x04	; 4
    12ce:	85 e0       	ldi	r24, 0x05	; 5
    12d0:	b5 c9       	rjmp	.-3222   	; 0x63c <sysclk_enable_module>
    12d2:	08 95       	ret
	}
#endif
#ifdef HIRESF
	else if (module == &HIRESF) {
    12d4:	80 39       	cpi	r24, 0x90	; 144
    12d6:	2b e0       	ldi	r18, 0x0B	; 11
    12d8:	92 07       	cpc	r25, r18
    12da:	21 f4       	brne	.+8      	; 0x12e4 <sysclk_enable_peripheral_clock+0x174>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_HIRES);
    12dc:	64 e0       	ldi	r22, 0x04	; 4
    12de:	86 e0       	ldi	r24, 0x06	; 6
    12e0:	ad c9       	rjmp	.-3238   	; 0x63c <sysclk_enable_module>
    12e2:	08 95       	ret
	}
#endif
#ifdef SPIC
	else if (module == &SPIC) {
    12e4:	80 3c       	cpi	r24, 0xC0	; 192
    12e6:	28 e0       	ldi	r18, 0x08	; 8
    12e8:	92 07       	cpc	r25, r18
    12ea:	21 f4       	brne	.+8      	; 0x12f4 <sysclk_enable_peripheral_clock+0x184>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_SPI);
    12ec:	68 e0       	ldi	r22, 0x08	; 8
    12ee:	83 e0       	ldi	r24, 0x03	; 3
    12f0:	a5 c9       	rjmp	.-3254   	; 0x63c <sysclk_enable_module>
    12f2:	08 95       	ret
	}
#endif
#ifdef SPID
	else if (module == &SPID) {
    12f4:	80 3c       	cpi	r24, 0xC0	; 192
    12f6:	29 e0       	ldi	r18, 0x09	; 9
    12f8:	92 07       	cpc	r25, r18
    12fa:	21 f4       	brne	.+8      	; 0x1304 <sysclk_enable_peripheral_clock+0x194>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_SPI);
    12fc:	68 e0       	ldi	r22, 0x08	; 8
    12fe:	84 e0       	ldi	r24, 0x04	; 4
    1300:	9d c9       	rjmp	.-3270   	; 0x63c <sysclk_enable_module>
    1302:	08 95       	ret
	}
#endif
#ifdef SPIE
	else if (module == &SPIE) {
    1304:	80 3c       	cpi	r24, 0xC0	; 192
    1306:	2a e0       	ldi	r18, 0x0A	; 10
    1308:	92 07       	cpc	r25, r18
    130a:	21 f4       	brne	.+8      	; 0x1314 <sysclk_enable_peripheral_clock+0x1a4>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_SPI);
    130c:	68 e0       	ldi	r22, 0x08	; 8
    130e:	85 e0       	ldi	r24, 0x05	; 5
    1310:	95 c9       	rjmp	.-3286   	; 0x63c <sysclk_enable_module>
    1312:	08 95       	ret
	}
#endif
#ifdef SPIF
	else if (module == &SPIF) {
    1314:	80 3c       	cpi	r24, 0xC0	; 192
    1316:	2b e0       	ldi	r18, 0x0B	; 11
    1318:	92 07       	cpc	r25, r18
    131a:	21 f4       	brne	.+8      	; 0x1324 <sysclk_enable_peripheral_clock+0x1b4>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_SPI);
    131c:	68 e0       	ldi	r22, 0x08	; 8
    131e:	86 e0       	ldi	r24, 0x06	; 6
    1320:	8d c9       	rjmp	.-3302   	; 0x63c <sysclk_enable_module>
    1322:	08 95       	ret
	}
#endif
#ifdef USARTC0
	else if (module == &USARTC0) {
    1324:	80 3a       	cpi	r24, 0xA0	; 160
    1326:	28 e0       	ldi	r18, 0x08	; 8
    1328:	92 07       	cpc	r25, r18
    132a:	21 f4       	brne	.+8      	; 0x1334 <sysclk_enable_peripheral_clock+0x1c4>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_USART0);
    132c:	60 e1       	ldi	r22, 0x10	; 16
    132e:	83 e0       	ldi	r24, 0x03	; 3
    1330:	85 c9       	rjmp	.-3318   	; 0x63c <sysclk_enable_module>
    1332:	08 95       	ret
	}
#endif
#ifdef USARTD0
	else if (module == &USARTD0) {
    1334:	80 3a       	cpi	r24, 0xA0	; 160
    1336:	29 e0       	ldi	r18, 0x09	; 9
    1338:	92 07       	cpc	r25, r18
    133a:	21 f4       	brne	.+8      	; 0x1344 <sysclk_enable_peripheral_clock+0x1d4>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_USART0);
    133c:	60 e1       	ldi	r22, 0x10	; 16
    133e:	84 e0       	ldi	r24, 0x04	; 4
    1340:	7d c9       	rjmp	.-3334   	; 0x63c <sysclk_enable_module>
    1342:	08 95       	ret
	}
#endif
#ifdef USARTE0
	else if (module == &USARTE0) {
    1344:	80 3a       	cpi	r24, 0xA0	; 160
    1346:	2a e0       	ldi	r18, 0x0A	; 10
    1348:	92 07       	cpc	r25, r18
    134a:	21 f4       	brne	.+8      	; 0x1354 <sysclk_enable_peripheral_clock+0x1e4>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_USART0);
    134c:	60 e1       	ldi	r22, 0x10	; 16
    134e:	85 e0       	ldi	r24, 0x05	; 5
    1350:	75 c9       	rjmp	.-3350   	; 0x63c <sysclk_enable_module>
    1352:	08 95       	ret
	}
#endif
#ifdef USARTF0
	else if (module == &USARTF0) {
    1354:	80 3a       	cpi	r24, 0xA0	; 160
    1356:	2b e0       	ldi	r18, 0x0B	; 11
    1358:	92 07       	cpc	r25, r18
    135a:	21 f4       	brne	.+8      	; 0x1364 <sysclk_enable_peripheral_clock+0x1f4>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_USART0);
    135c:	60 e1       	ldi	r22, 0x10	; 16
    135e:	86 e0       	ldi	r24, 0x06	; 6
    1360:	6d c9       	rjmp	.-3366   	; 0x63c <sysclk_enable_module>
    1362:	08 95       	ret
	}
#endif
#ifdef USARTC1
	else if (module == &USARTC1) {
    1364:	80 3b       	cpi	r24, 0xB0	; 176
    1366:	28 e0       	ldi	r18, 0x08	; 8
    1368:	92 07       	cpc	r25, r18
    136a:	21 f4       	brne	.+8      	; 0x1374 <sysclk_enable_peripheral_clock+0x204>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_USART1);
    136c:	60 e2       	ldi	r22, 0x20	; 32
    136e:	83 e0       	ldi	r24, 0x03	; 3
    1370:	65 c9       	rjmp	.-3382   	; 0x63c <sysclk_enable_module>
    1372:	08 95       	ret
	}
#endif
#ifdef USARTD1
	else if (module == &USARTD1) {
    1374:	80 3b       	cpi	r24, 0xB0	; 176
    1376:	29 e0       	ldi	r18, 0x09	; 9
    1378:	92 07       	cpc	r25, r18
    137a:	21 f4       	brne	.+8      	; 0x1384 <sysclk_enable_peripheral_clock+0x214>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_USART1);
    137c:	60 e2       	ldi	r22, 0x20	; 32
    137e:	84 e0       	ldi	r24, 0x04	; 4
    1380:	5d c9       	rjmp	.-3398   	; 0x63c <sysclk_enable_module>
    1382:	08 95       	ret
	}
#endif
#ifdef USARTE1
	else if (module == &USARTE1) {
    1384:	80 3b       	cpi	r24, 0xB0	; 176
    1386:	2a e0       	ldi	r18, 0x0A	; 10
    1388:	92 07       	cpc	r25, r18
    138a:	21 f4       	brne	.+8      	; 0x1394 <sysclk_enable_peripheral_clock+0x224>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_USART1);
    138c:	60 e2       	ldi	r22, 0x20	; 32
    138e:	85 e0       	ldi	r24, 0x05	; 5
    1390:	55 c9       	rjmp	.-3414   	; 0x63c <sysclk_enable_module>
    1392:	08 95       	ret
	}
#endif
#ifdef USARTF1
	else if (module == &USARTF1) {
    1394:	80 3b       	cpi	r24, 0xB0	; 176
    1396:	2b e0       	ldi	r18, 0x0B	; 11
    1398:	92 07       	cpc	r25, r18
    139a:	21 f4       	brne	.+8      	; 0x13a4 <sysclk_enable_peripheral_clock+0x234>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_USART1);
    139c:	60 e2       	ldi	r22, 0x20	; 32
    139e:	86 e0       	ldi	r24, 0x06	; 6
    13a0:	4d c9       	rjmp	.-3430   	; 0x63c <sysclk_enable_module>
    13a2:	08 95       	ret
	}
#endif
#ifdef TWIC
	else if (module == &TWIC) {
    13a4:	80 38       	cpi	r24, 0x80	; 128
    13a6:	24 e0       	ldi	r18, 0x04	; 4
    13a8:	92 07       	cpc	r25, r18
    13aa:	21 f4       	brne	.+8      	; 0x13b4 <sysclk_enable_peripheral_clock+0x244>
		sysclk_enable_module(SYSCLK_PORT_C, SYSCLK_TWI);
    13ac:	60 e4       	ldi	r22, 0x40	; 64
    13ae:	83 e0       	ldi	r24, 0x03	; 3
    13b0:	45 c9       	rjmp	.-3446   	; 0x63c <sysclk_enable_module>
    13b2:	08 95       	ret
	}
#endif
#ifdef TWID
	else if (module == &TWID) {
    13b4:	80 39       	cpi	r24, 0x90	; 144
    13b6:	24 e0       	ldi	r18, 0x04	; 4
    13b8:	92 07       	cpc	r25, r18
    13ba:	21 f4       	brne	.+8      	; 0x13c4 <sysclk_enable_peripheral_clock+0x254>
		sysclk_enable_module(SYSCLK_PORT_D, SYSCLK_TWI);
    13bc:	60 e4       	ldi	r22, 0x40	; 64
    13be:	84 e0       	ldi	r24, 0x04	; 4
    13c0:	3d c9       	rjmp	.-3462   	; 0x63c <sysclk_enable_module>
    13c2:	08 95       	ret
	}
#endif
#ifdef TWIE
	else if (module == &TWIE) {
    13c4:	80 3a       	cpi	r24, 0xA0	; 160
    13c6:	24 e0       	ldi	r18, 0x04	; 4
    13c8:	92 07       	cpc	r25, r18
    13ca:	21 f4       	brne	.+8      	; 0x13d4 <sysclk_enable_peripheral_clock+0x264>
		sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_TWI);
    13cc:	60 e4       	ldi	r22, 0x40	; 64
    13ce:	85 e0       	ldi	r24, 0x05	; 5
    13d0:	35 c9       	rjmp	.-3478   	; 0x63c <sysclk_enable_module>
    13d2:	08 95       	ret
	}
#endif
#ifdef TWIF
	else if (module == &TWIF) {
    13d4:	80 3b       	cpi	r24, 0xB0	; 176
    13d6:	94 40       	sbci	r25, 0x04	; 4
    13d8:	19 f4       	brne	.+6      	; 0x13e0 <sysclk_enable_peripheral_clock+0x270>
		sysclk_enable_module(SYSCLK_PORT_F, SYSCLK_TWI);
    13da:	60 e4       	ldi	r22, 0x40	; 64
    13dc:	86 e0       	ldi	r24, 0x06	; 6
    13de:	2e c9       	rjmp	.-3492   	; 0x63c <sysclk_enable_module>
    13e0:	08 95       	ret

000013e2 <main>:
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

int main (void)
{
	/* Initialize the system clock, 32MHz, this also turns off all peripheral clocks */
	sysclk_init();
    13e2:	05 d9       	rcall	.-3574   	; 0x5ee <sysclk_init>
	sysclk_enable_peripheral_clock(&USARTC0); //For every peripheral, you must enable the clock like shown here. Ex. Timer counters, SPI, ADCs
    13e4:	80 ea       	ldi	r24, 0xA0	; 160
    13e6:	98 e0       	ldi	r25, 0x08	; 8
    13e8:	c3 de       	rcall	.-634    	; 0x1170 <sysclk_enable_peripheral_clock>
	sysclk_enable_peripheral_clock(&ADCA); //Analog to Digital Converter clock initialization.
    13ea:	80 e0       	ldi	r24, 0x00	; 0
    13ec:	92 e0       	ldi	r25, 0x02	; 2
    13ee:	c0 de       	rcall	.-640    	; 0x1170 <sysclk_enable_peripheral_clock>
	sysclk_enable_peripheral_clock(&TCE0); //Timer Counter clock initialization
    13f0:	80 e0       	ldi	r24, 0x00	; 0
    13f2:	9a e0       	ldi	r25, 0x0A	; 10
    13f4:	bd de       	rcall	.-646    	; 0x1170 <sysclk_enable_peripheral_clock>
	
	/* Example, Timer Counter on PORTE */
	
	sysclk_enable_module(SYSCLK_PORT_E, SYSCLK_HIRES); //You must have this line for every timer counter due to a flaw in the design of the chip
    13f6:	64 e0       	ldi	r22, 0x04	; 4
    13f8:	85 e0       	ldi	r24, 0x05	; 5
    13fa:	20 d9       	rcall	.-3520   	; 0x63c <sysclk_enable_module>
	
	/* Initializations */;
	UART_Comms_Init();
    13fc:	75 de       	rcall	.-790    	; 0x10e8 <UART_Comms_Init>
	//TCE0_init(12499,100);
	ADC_init();
    13fe:	d2 dd       	rcall	.-1116   	; 0xfa4 <ADC_init>
	/* Flight Code */
	PORTE.DIR = 0b11111111; //Sets all the pins on PORTE as an output.
    1400:	e0 e8       	ldi	r30, 0x80	; 128
    1402:	f6 e0       	ldi	r31, 0x06	; 6
    1404:	8f ef       	ldi	r24, 0xFF	; 255
    1406:	80 83       	st	Z, r24
	PORTE.OUT = 0b00000000; //Sets all of the pins voltage levels to 0V, which is logic 0 in programming.
    1408:	14 82       	std	Z+4, r1	; 0x04

	while (1){
		test();
    140a:	c1 d8       	rcall	.-3710   	; 0x58e <test>
		//flightStateTwo();
		//flightStateThree();
		
		//Already written TEST cases
		//printf("%i\n", ADC_test(250)); //Print the value that ADC_test returns, with a 250ms delay before the print.
		lightChase(100); //Runs function lightChase with a 50ms delay before switching each light.
    140c:	84 e6       	ldi	r24, 0x64	; 100
    140e:	42 d8       	rcall	.-3964   	; 0x494 <lightChase>

	}
    1410:	fc cf       	rjmp	.-8      	; 0x140a <main+0x28>

00001412 <__subsf3>:
    1412:	50 58       	subi	r21, 0x80	; 128

00001414 <__addsf3>:
    1414:	bb 27       	eor	r27, r27
    1416:	aa 27       	eor	r26, r26
    1418:	0e d0       	rcall	.+28     	; 0x1436 <__addsf3x>
    141a:	d0 c1       	rjmp	.+928    	; 0x17bc <__fp_round>
    141c:	c1 d1       	rcall	.+898    	; 0x17a0 <__fp_pscA>
    141e:	30 f0       	brcs	.+12     	; 0x142c <__addsf3+0x18>
    1420:	c6 d1       	rcall	.+908    	; 0x17ae <__fp_pscB>
    1422:	20 f0       	brcs	.+8      	; 0x142c <__addsf3+0x18>
    1424:	31 f4       	brne	.+12     	; 0x1432 <__addsf3+0x1e>
    1426:	9f 3f       	cpi	r25, 0xFF	; 255
    1428:	11 f4       	brne	.+4      	; 0x142e <__addsf3+0x1a>
    142a:	1e f4       	brtc	.+6      	; 0x1432 <__addsf3+0x1e>
    142c:	a6 c1       	rjmp	.+844    	; 0x177a <__fp_nan>
    142e:	0e f4       	brtc	.+2      	; 0x1432 <__addsf3+0x1e>
    1430:	e0 95       	com	r30
    1432:	e7 fb       	bst	r30, 7
    1434:	9c c1       	rjmp	.+824    	; 0x176e <__fp_inf>

00001436 <__addsf3x>:
    1436:	e9 2f       	mov	r30, r25
    1438:	d2 d1       	rcall	.+932    	; 0x17de <__fp_split3>
    143a:	80 f3       	brcs	.-32     	; 0x141c <__addsf3+0x8>
    143c:	ba 17       	cp	r27, r26
    143e:	62 07       	cpc	r22, r18
    1440:	73 07       	cpc	r23, r19
    1442:	84 07       	cpc	r24, r20
    1444:	95 07       	cpc	r25, r21
    1446:	18 f0       	brcs	.+6      	; 0x144e <__addsf3x+0x18>
    1448:	71 f4       	brne	.+28     	; 0x1466 <__addsf3x+0x30>
    144a:	9e f5       	brtc	.+102    	; 0x14b2 <__addsf3x+0x7c>
    144c:	ea c1       	rjmp	.+980    	; 0x1822 <__fp_zero>
    144e:	0e f4       	brtc	.+2      	; 0x1452 <__addsf3x+0x1c>
    1450:	e0 95       	com	r30
    1452:	0b 2e       	mov	r0, r27
    1454:	ba 2f       	mov	r27, r26
    1456:	a0 2d       	mov	r26, r0
    1458:	0b 01       	movw	r0, r22
    145a:	b9 01       	movw	r22, r18
    145c:	90 01       	movw	r18, r0
    145e:	0c 01       	movw	r0, r24
    1460:	ca 01       	movw	r24, r20
    1462:	a0 01       	movw	r20, r0
    1464:	11 24       	eor	r1, r1
    1466:	ff 27       	eor	r31, r31
    1468:	59 1b       	sub	r21, r25
    146a:	99 f0       	breq	.+38     	; 0x1492 <__addsf3x+0x5c>
    146c:	59 3f       	cpi	r21, 0xF9	; 249
    146e:	50 f4       	brcc	.+20     	; 0x1484 <__addsf3x+0x4e>
    1470:	50 3e       	cpi	r21, 0xE0	; 224
    1472:	68 f1       	brcs	.+90     	; 0x14ce <__addsf3x+0x98>
    1474:	1a 16       	cp	r1, r26
    1476:	f0 40       	sbci	r31, 0x00	; 0
    1478:	a2 2f       	mov	r26, r18
    147a:	23 2f       	mov	r18, r19
    147c:	34 2f       	mov	r19, r20
    147e:	44 27       	eor	r20, r20
    1480:	58 5f       	subi	r21, 0xF8	; 248
    1482:	f3 cf       	rjmp	.-26     	; 0x146a <__addsf3x+0x34>
    1484:	46 95       	lsr	r20
    1486:	37 95       	ror	r19
    1488:	27 95       	ror	r18
    148a:	a7 95       	ror	r26
    148c:	f0 40       	sbci	r31, 0x00	; 0
    148e:	53 95       	inc	r21
    1490:	c9 f7       	brne	.-14     	; 0x1484 <__addsf3x+0x4e>
    1492:	7e f4       	brtc	.+30     	; 0x14b2 <__addsf3x+0x7c>
    1494:	1f 16       	cp	r1, r31
    1496:	ba 0b       	sbc	r27, r26
    1498:	62 0b       	sbc	r22, r18
    149a:	73 0b       	sbc	r23, r19
    149c:	84 0b       	sbc	r24, r20
    149e:	ba f0       	brmi	.+46     	; 0x14ce <__addsf3x+0x98>
    14a0:	91 50       	subi	r25, 0x01	; 1
    14a2:	a1 f0       	breq	.+40     	; 0x14cc <__addsf3x+0x96>
    14a4:	ff 0f       	add	r31, r31
    14a6:	bb 1f       	adc	r27, r27
    14a8:	66 1f       	adc	r22, r22
    14aa:	77 1f       	adc	r23, r23
    14ac:	88 1f       	adc	r24, r24
    14ae:	c2 f7       	brpl	.-16     	; 0x14a0 <__addsf3x+0x6a>
    14b0:	0e c0       	rjmp	.+28     	; 0x14ce <__addsf3x+0x98>
    14b2:	ba 0f       	add	r27, r26
    14b4:	62 1f       	adc	r22, r18
    14b6:	73 1f       	adc	r23, r19
    14b8:	84 1f       	adc	r24, r20
    14ba:	48 f4       	brcc	.+18     	; 0x14ce <__addsf3x+0x98>
    14bc:	87 95       	ror	r24
    14be:	77 95       	ror	r23
    14c0:	67 95       	ror	r22
    14c2:	b7 95       	ror	r27
    14c4:	f7 95       	ror	r31
    14c6:	9e 3f       	cpi	r25, 0xFE	; 254
    14c8:	08 f0       	brcs	.+2      	; 0x14cc <__addsf3x+0x96>
    14ca:	b3 cf       	rjmp	.-154    	; 0x1432 <__addsf3+0x1e>
    14cc:	93 95       	inc	r25
    14ce:	88 0f       	add	r24, r24
    14d0:	08 f0       	brcs	.+2      	; 0x14d4 <__addsf3x+0x9e>
    14d2:	99 27       	eor	r25, r25
    14d4:	ee 0f       	add	r30, r30
    14d6:	97 95       	ror	r25
    14d8:	87 95       	ror	r24
    14da:	08 95       	ret

000014dc <__divsf3>:
    14dc:	0c d0       	rcall	.+24     	; 0x14f6 <__divsf3x>
    14de:	6e c1       	rjmp	.+732    	; 0x17bc <__fp_round>
    14e0:	66 d1       	rcall	.+716    	; 0x17ae <__fp_pscB>
    14e2:	40 f0       	brcs	.+16     	; 0x14f4 <__divsf3+0x18>
    14e4:	5d d1       	rcall	.+698    	; 0x17a0 <__fp_pscA>
    14e6:	30 f0       	brcs	.+12     	; 0x14f4 <__divsf3+0x18>
    14e8:	21 f4       	brne	.+8      	; 0x14f2 <__divsf3+0x16>
    14ea:	5f 3f       	cpi	r21, 0xFF	; 255
    14ec:	19 f0       	breq	.+6      	; 0x14f4 <__divsf3+0x18>
    14ee:	3f c1       	rjmp	.+638    	; 0x176e <__fp_inf>
    14f0:	51 11       	cpse	r21, r1
    14f2:	98 c1       	rjmp	.+816    	; 0x1824 <__fp_szero>
    14f4:	42 c1       	rjmp	.+644    	; 0x177a <__fp_nan>

000014f6 <__divsf3x>:
    14f6:	73 d1       	rcall	.+742    	; 0x17de <__fp_split3>
    14f8:	98 f3       	brcs	.-26     	; 0x14e0 <__divsf3+0x4>

000014fa <__divsf3_pse>:
    14fa:	99 23       	and	r25, r25
    14fc:	c9 f3       	breq	.-14     	; 0x14f0 <__divsf3+0x14>
    14fe:	55 23       	and	r21, r21
    1500:	b1 f3       	breq	.-20     	; 0x14ee <__divsf3+0x12>
    1502:	95 1b       	sub	r25, r21
    1504:	55 0b       	sbc	r21, r21
    1506:	bb 27       	eor	r27, r27
    1508:	aa 27       	eor	r26, r26
    150a:	62 17       	cp	r22, r18
    150c:	73 07       	cpc	r23, r19
    150e:	84 07       	cpc	r24, r20
    1510:	38 f0       	brcs	.+14     	; 0x1520 <__divsf3_pse+0x26>
    1512:	9f 5f       	subi	r25, 0xFF	; 255
    1514:	5f 4f       	sbci	r21, 0xFF	; 255
    1516:	22 0f       	add	r18, r18
    1518:	33 1f       	adc	r19, r19
    151a:	44 1f       	adc	r20, r20
    151c:	aa 1f       	adc	r26, r26
    151e:	a9 f3       	breq	.-22     	; 0x150a <__divsf3_pse+0x10>
    1520:	33 d0       	rcall	.+102    	; 0x1588 <__divsf3_pse+0x8e>
    1522:	0e 2e       	mov	r0, r30
    1524:	3a f0       	brmi	.+14     	; 0x1534 <__divsf3_pse+0x3a>
    1526:	e0 e8       	ldi	r30, 0x80	; 128
    1528:	30 d0       	rcall	.+96     	; 0x158a <__divsf3_pse+0x90>
    152a:	91 50       	subi	r25, 0x01	; 1
    152c:	50 40       	sbci	r21, 0x00	; 0
    152e:	e6 95       	lsr	r30
    1530:	00 1c       	adc	r0, r0
    1532:	ca f7       	brpl	.-14     	; 0x1526 <__divsf3_pse+0x2c>
    1534:	29 d0       	rcall	.+82     	; 0x1588 <__divsf3_pse+0x8e>
    1536:	fe 2f       	mov	r31, r30
    1538:	27 d0       	rcall	.+78     	; 0x1588 <__divsf3_pse+0x8e>
    153a:	66 0f       	add	r22, r22
    153c:	77 1f       	adc	r23, r23
    153e:	88 1f       	adc	r24, r24
    1540:	bb 1f       	adc	r27, r27
    1542:	26 17       	cp	r18, r22
    1544:	37 07       	cpc	r19, r23
    1546:	48 07       	cpc	r20, r24
    1548:	ab 07       	cpc	r26, r27
    154a:	b0 e8       	ldi	r27, 0x80	; 128
    154c:	09 f0       	breq	.+2      	; 0x1550 <__divsf3_pse+0x56>
    154e:	bb 0b       	sbc	r27, r27
    1550:	80 2d       	mov	r24, r0
    1552:	bf 01       	movw	r22, r30
    1554:	ff 27       	eor	r31, r31
    1556:	93 58       	subi	r25, 0x83	; 131
    1558:	5f 4f       	sbci	r21, 0xFF	; 255
    155a:	2a f0       	brmi	.+10     	; 0x1566 <__divsf3_pse+0x6c>
    155c:	9e 3f       	cpi	r25, 0xFE	; 254
    155e:	51 05       	cpc	r21, r1
    1560:	68 f0       	brcs	.+26     	; 0x157c <__divsf3_pse+0x82>
    1562:	05 c1       	rjmp	.+522    	; 0x176e <__fp_inf>
    1564:	5f c1       	rjmp	.+702    	; 0x1824 <__fp_szero>
    1566:	5f 3f       	cpi	r21, 0xFF	; 255
    1568:	ec f3       	brlt	.-6      	; 0x1564 <__divsf3_pse+0x6a>
    156a:	98 3e       	cpi	r25, 0xE8	; 232
    156c:	dc f3       	brlt	.-10     	; 0x1564 <__divsf3_pse+0x6a>
    156e:	86 95       	lsr	r24
    1570:	77 95       	ror	r23
    1572:	67 95       	ror	r22
    1574:	b7 95       	ror	r27
    1576:	f7 95       	ror	r31
    1578:	9f 5f       	subi	r25, 0xFF	; 255
    157a:	c9 f7       	brne	.-14     	; 0x156e <__divsf3_pse+0x74>
    157c:	88 0f       	add	r24, r24
    157e:	91 1d       	adc	r25, r1
    1580:	96 95       	lsr	r25
    1582:	87 95       	ror	r24
    1584:	97 f9       	bld	r25, 7
    1586:	08 95       	ret
    1588:	e1 e0       	ldi	r30, 0x01	; 1
    158a:	66 0f       	add	r22, r22
    158c:	77 1f       	adc	r23, r23
    158e:	88 1f       	adc	r24, r24
    1590:	bb 1f       	adc	r27, r27
    1592:	62 17       	cp	r22, r18
    1594:	73 07       	cpc	r23, r19
    1596:	84 07       	cpc	r24, r20
    1598:	ba 07       	cpc	r27, r26
    159a:	20 f0       	brcs	.+8      	; 0x15a4 <__divsf3_pse+0xaa>
    159c:	62 1b       	sub	r22, r18
    159e:	73 0b       	sbc	r23, r19
    15a0:	84 0b       	sbc	r24, r20
    15a2:	ba 0b       	sbc	r27, r26
    15a4:	ee 1f       	adc	r30, r30
    15a6:	88 f7       	brcc	.-30     	; 0x158a <__divsf3_pse+0x90>
    15a8:	e0 95       	com	r30
    15aa:	08 95       	ret

000015ac <__fixsfdi>:
    15ac:	be e3       	ldi	r27, 0x3E	; 62
    15ae:	04 d0       	rcall	.+8      	; 0x15b8 <__fixunssfdi+0x2>
    15b0:	08 f4       	brcc	.+2      	; 0x15b4 <__fixsfdi+0x8>
    15b2:	90 e8       	ldi	r25, 0x80	; 128
    15b4:	08 95       	ret

000015b6 <__fixunssfdi>:
    15b6:	bf e3       	ldi	r27, 0x3F	; 63
    15b8:	22 27       	eor	r18, r18
    15ba:	33 27       	eor	r19, r19
    15bc:	a9 01       	movw	r20, r18
    15be:	17 d1       	rcall	.+558    	; 0x17ee <__fp_splitA>
    15c0:	58 f1       	brcs	.+86     	; 0x1618 <__fixunssfdi+0x62>
    15c2:	9f 57       	subi	r25, 0x7F	; 127
    15c4:	40 f1       	brcs	.+80     	; 0x1616 <__fixunssfdi+0x60>
    15c6:	b9 17       	cp	r27, r25
    15c8:	38 f1       	brcs	.+78     	; 0x1618 <__fixunssfdi+0x62>
    15ca:	bf e3       	ldi	r27, 0x3F	; 63
    15cc:	b9 1b       	sub	r27, r25
    15ce:	99 27       	eor	r25, r25
    15d0:	b8 50       	subi	r27, 0x08	; 8
    15d2:	3a f4       	brpl	.+14     	; 0x15e2 <__fixunssfdi+0x2c>
    15d4:	66 0f       	add	r22, r22
    15d6:	77 1f       	adc	r23, r23
    15d8:	88 1f       	adc	r24, r24
    15da:	99 1f       	adc	r25, r25
    15dc:	b3 95       	inc	r27
    15de:	d2 f3       	brmi	.-12     	; 0x15d4 <__fixunssfdi+0x1e>
    15e0:	16 c0       	rjmp	.+44     	; 0x160e <__fixunssfdi+0x58>
    15e2:	b8 50       	subi	r27, 0x08	; 8
    15e4:	4a f0       	brmi	.+18     	; 0x15f8 <__fixunssfdi+0x42>
    15e6:	23 2f       	mov	r18, r19
    15e8:	34 2f       	mov	r19, r20
    15ea:	45 2f       	mov	r20, r21
    15ec:	56 2f       	mov	r21, r22
    15ee:	67 2f       	mov	r22, r23
    15f0:	78 2f       	mov	r23, r24
    15f2:	88 27       	eor	r24, r24
    15f4:	b8 50       	subi	r27, 0x08	; 8
    15f6:	ba f7       	brpl	.-18     	; 0x15e6 <__fixunssfdi+0x30>
    15f8:	b8 5f       	subi	r27, 0xF8	; 248
    15fa:	49 f0       	breq	.+18     	; 0x160e <__fixunssfdi+0x58>
    15fc:	86 95       	lsr	r24
    15fe:	77 95       	ror	r23
    1600:	67 95       	ror	r22
    1602:	57 95       	ror	r21
    1604:	47 95       	ror	r20
    1606:	37 95       	ror	r19
    1608:	27 95       	ror	r18
    160a:	ba 95       	dec	r27
    160c:	b9 f7       	brne	.-18     	; 0x15fc <__fixunssfdi+0x46>
    160e:	0e f4       	brtc	.+2      	; 0x1612 <__fixunssfdi+0x5c>
    1610:	b7 d0       	rcall	.+366    	; 0x1780 <__fp_negdi>
    1612:	88 94       	clc
    1614:	08 95       	ret
    1616:	88 94       	clc
    1618:	60 e0       	ldi	r22, 0x00	; 0
    161a:	70 e0       	ldi	r23, 0x00	; 0
    161c:	cb 01       	movw	r24, r22
    161e:	08 95       	ret

00001620 <__fixunssfsi>:
    1620:	e6 d0       	rcall	.+460    	; 0x17ee <__fp_splitA>
    1622:	88 f0       	brcs	.+34     	; 0x1646 <__fixunssfsi+0x26>
    1624:	9f 57       	subi	r25, 0x7F	; 127
    1626:	90 f0       	brcs	.+36     	; 0x164c <__fixunssfsi+0x2c>
    1628:	b9 2f       	mov	r27, r25
    162a:	99 27       	eor	r25, r25
    162c:	b7 51       	subi	r27, 0x17	; 23
    162e:	a0 f0       	brcs	.+40     	; 0x1658 <__fixunssfsi+0x38>
    1630:	d1 f0       	breq	.+52     	; 0x1666 <__fixunssfsi+0x46>
    1632:	66 0f       	add	r22, r22
    1634:	77 1f       	adc	r23, r23
    1636:	88 1f       	adc	r24, r24
    1638:	99 1f       	adc	r25, r25
    163a:	1a f0       	brmi	.+6      	; 0x1642 <__fixunssfsi+0x22>
    163c:	ba 95       	dec	r27
    163e:	c9 f7       	brne	.-14     	; 0x1632 <__fixunssfsi+0x12>
    1640:	12 c0       	rjmp	.+36     	; 0x1666 <__fixunssfsi+0x46>
    1642:	b1 30       	cpi	r27, 0x01	; 1
    1644:	81 f0       	breq	.+32     	; 0x1666 <__fixunssfsi+0x46>
    1646:	ed d0       	rcall	.+474    	; 0x1822 <__fp_zero>
    1648:	b1 e0       	ldi	r27, 0x01	; 1
    164a:	08 95       	ret
    164c:	ea c0       	rjmp	.+468    	; 0x1822 <__fp_zero>
    164e:	67 2f       	mov	r22, r23
    1650:	78 2f       	mov	r23, r24
    1652:	88 27       	eor	r24, r24
    1654:	b8 5f       	subi	r27, 0xF8	; 248
    1656:	39 f0       	breq	.+14     	; 0x1666 <__fixunssfsi+0x46>
    1658:	b9 3f       	cpi	r27, 0xF9	; 249
    165a:	cc f3       	brlt	.-14     	; 0x164e <__fixunssfsi+0x2e>
    165c:	86 95       	lsr	r24
    165e:	77 95       	ror	r23
    1660:	67 95       	ror	r22
    1662:	b3 95       	inc	r27
    1664:	d9 f7       	brne	.-10     	; 0x165c <__fixunssfsi+0x3c>
    1666:	3e f4       	brtc	.+14     	; 0x1676 <__fixunssfsi+0x56>
    1668:	90 95       	com	r25
    166a:	80 95       	com	r24
    166c:	70 95       	com	r23
    166e:	61 95       	neg	r22
    1670:	7f 4f       	sbci	r23, 0xFF	; 255
    1672:	8f 4f       	sbci	r24, 0xFF	; 255
    1674:	9f 4f       	sbci	r25, 0xFF	; 255
    1676:	08 95       	ret

00001678 <__floatunsisf>:
    1678:	e8 94       	clt
    167a:	09 c0       	rjmp	.+18     	; 0x168e <__floatsisf+0x12>

0000167c <__floatsisf>:
    167c:	97 fb       	bst	r25, 7
    167e:	3e f4       	brtc	.+14     	; 0x168e <__floatsisf+0x12>
    1680:	90 95       	com	r25
    1682:	80 95       	com	r24
    1684:	70 95       	com	r23
    1686:	61 95       	neg	r22
    1688:	7f 4f       	sbci	r23, 0xFF	; 255
    168a:	8f 4f       	sbci	r24, 0xFF	; 255
    168c:	9f 4f       	sbci	r25, 0xFF	; 255
    168e:	99 23       	and	r25, r25
    1690:	a9 f0       	breq	.+42     	; 0x16bc <__floatsisf+0x40>
    1692:	f9 2f       	mov	r31, r25
    1694:	96 e9       	ldi	r25, 0x96	; 150
    1696:	bb 27       	eor	r27, r27
    1698:	93 95       	inc	r25
    169a:	f6 95       	lsr	r31
    169c:	87 95       	ror	r24
    169e:	77 95       	ror	r23
    16a0:	67 95       	ror	r22
    16a2:	b7 95       	ror	r27
    16a4:	f1 11       	cpse	r31, r1
    16a6:	f8 cf       	rjmp	.-16     	; 0x1698 <__floatsisf+0x1c>
    16a8:	fa f4       	brpl	.+62     	; 0x16e8 <__floatsisf+0x6c>
    16aa:	bb 0f       	add	r27, r27
    16ac:	11 f4       	brne	.+4      	; 0x16b2 <__floatsisf+0x36>
    16ae:	60 ff       	sbrs	r22, 0
    16b0:	1b c0       	rjmp	.+54     	; 0x16e8 <__floatsisf+0x6c>
    16b2:	6f 5f       	subi	r22, 0xFF	; 255
    16b4:	7f 4f       	sbci	r23, 0xFF	; 255
    16b6:	8f 4f       	sbci	r24, 0xFF	; 255
    16b8:	9f 4f       	sbci	r25, 0xFF	; 255
    16ba:	16 c0       	rjmp	.+44     	; 0x16e8 <__floatsisf+0x6c>
    16bc:	88 23       	and	r24, r24
    16be:	11 f0       	breq	.+4      	; 0x16c4 <__floatsisf+0x48>
    16c0:	96 e9       	ldi	r25, 0x96	; 150
    16c2:	11 c0       	rjmp	.+34     	; 0x16e6 <__floatsisf+0x6a>
    16c4:	77 23       	and	r23, r23
    16c6:	21 f0       	breq	.+8      	; 0x16d0 <__floatsisf+0x54>
    16c8:	9e e8       	ldi	r25, 0x8E	; 142
    16ca:	87 2f       	mov	r24, r23
    16cc:	76 2f       	mov	r23, r22
    16ce:	05 c0       	rjmp	.+10     	; 0x16da <__floatsisf+0x5e>
    16d0:	66 23       	and	r22, r22
    16d2:	71 f0       	breq	.+28     	; 0x16f0 <__floatsisf+0x74>
    16d4:	96 e8       	ldi	r25, 0x86	; 134
    16d6:	86 2f       	mov	r24, r22
    16d8:	70 e0       	ldi	r23, 0x00	; 0
    16da:	60 e0       	ldi	r22, 0x00	; 0
    16dc:	2a f0       	brmi	.+10     	; 0x16e8 <__floatsisf+0x6c>
    16de:	9a 95       	dec	r25
    16e0:	66 0f       	add	r22, r22
    16e2:	77 1f       	adc	r23, r23
    16e4:	88 1f       	adc	r24, r24
    16e6:	da f7       	brpl	.-10     	; 0x16de <__floatsisf+0x62>
    16e8:	88 0f       	add	r24, r24
    16ea:	96 95       	lsr	r25
    16ec:	87 95       	ror	r24
    16ee:	97 f9       	bld	r25, 7
    16f0:	08 95       	ret

000016f2 <__floatundisf>:
    16f2:	e8 94       	clt

000016f4 <__fp_di2sf>:
    16f4:	f9 2f       	mov	r31, r25
    16f6:	96 eb       	ldi	r25, 0xB6	; 182
    16f8:	ff 23       	and	r31, r31
    16fa:	81 f0       	breq	.+32     	; 0x171c <__fp_di2sf+0x28>
    16fc:	12 16       	cp	r1, r18
    16fe:	13 06       	cpc	r1, r19
    1700:	14 06       	cpc	r1, r20
    1702:	44 0b       	sbc	r20, r20
    1704:	93 95       	inc	r25
    1706:	f6 95       	lsr	r31
    1708:	87 95       	ror	r24
    170a:	77 95       	ror	r23
    170c:	67 95       	ror	r22
    170e:	57 95       	ror	r21
    1710:	40 40       	sbci	r20, 0x00	; 0
    1712:	ff 23       	and	r31, r31
    1714:	b9 f7       	brne	.-18     	; 0x1704 <__fp_di2sf+0x10>
    1716:	1b c0       	rjmp	.+54     	; 0x174e <__fp_di2sf+0x5a>
    1718:	99 27       	eor	r25, r25
    171a:	08 95       	ret
    171c:	88 23       	and	r24, r24
    171e:	51 f4       	brne	.+20     	; 0x1734 <__fp_di2sf+0x40>
    1720:	98 50       	subi	r25, 0x08	; 8
    1722:	d2 f7       	brpl	.-12     	; 0x1718 <__fp_di2sf+0x24>
    1724:	87 2b       	or	r24, r23
    1726:	76 2f       	mov	r23, r22
    1728:	65 2f       	mov	r22, r21
    172a:	54 2f       	mov	r21, r20
    172c:	43 2f       	mov	r20, r19
    172e:	32 2f       	mov	r19, r18
    1730:	20 e0       	ldi	r18, 0x00	; 0
    1732:	b1 f3       	breq	.-20     	; 0x1720 <__fp_di2sf+0x2c>
    1734:	12 16       	cp	r1, r18
    1736:	13 06       	cpc	r1, r19
    1738:	14 06       	cpc	r1, r20
    173a:	44 0b       	sbc	r20, r20
    173c:	88 23       	and	r24, r24
    173e:	3a f0       	brmi	.+14     	; 0x174e <__fp_di2sf+0x5a>
    1740:	9a 95       	dec	r25
    1742:	44 0f       	add	r20, r20
    1744:	55 1f       	adc	r21, r21
    1746:	66 1f       	adc	r22, r22
    1748:	77 1f       	adc	r23, r23
    174a:	88 1f       	adc	r24, r24
    174c:	ca f7       	brpl	.-14     	; 0x1740 <__fp_di2sf+0x4c>
    174e:	55 23       	and	r21, r21
    1750:	4a f4       	brpl	.+18     	; 0x1764 <__fp_di2sf+0x70>
    1752:	44 0f       	add	r20, r20
    1754:	55 1f       	adc	r21, r21
    1756:	11 f4       	brne	.+4      	; 0x175c <__fp_di2sf+0x68>
    1758:	60 ff       	sbrs	r22, 0
    175a:	04 c0       	rjmp	.+8      	; 0x1764 <__fp_di2sf+0x70>
    175c:	6f 5f       	subi	r22, 0xFF	; 255
    175e:	7f 4f       	sbci	r23, 0xFF	; 255
    1760:	8f 4f       	sbci	r24, 0xFF	; 255
    1762:	9f 4f       	sbci	r25, 0xFF	; 255
    1764:	88 0f       	add	r24, r24
    1766:	96 95       	lsr	r25
    1768:	87 95       	ror	r24
    176a:	97 f9       	bld	r25, 7
    176c:	08 95       	ret

0000176e <__fp_inf>:
    176e:	97 f9       	bld	r25, 7
    1770:	9f 67       	ori	r25, 0x7F	; 127
    1772:	80 e8       	ldi	r24, 0x80	; 128
    1774:	70 e0       	ldi	r23, 0x00	; 0
    1776:	60 e0       	ldi	r22, 0x00	; 0
    1778:	08 95       	ret

0000177a <__fp_nan>:
    177a:	9f ef       	ldi	r25, 0xFF	; 255
    177c:	80 ec       	ldi	r24, 0xC0	; 192
    177e:	08 95       	ret

00001780 <__fp_negdi>:
    1780:	90 95       	com	r25
    1782:	80 95       	com	r24
    1784:	70 95       	com	r23
    1786:	60 95       	com	r22
    1788:	50 95       	com	r21
    178a:	40 95       	com	r20
    178c:	30 95       	com	r19
    178e:	21 95       	neg	r18
    1790:	3f 4f       	sbci	r19, 0xFF	; 255
    1792:	4f 4f       	sbci	r20, 0xFF	; 255
    1794:	5f 4f       	sbci	r21, 0xFF	; 255
    1796:	6f 4f       	sbci	r22, 0xFF	; 255
    1798:	7f 4f       	sbci	r23, 0xFF	; 255
    179a:	8f 4f       	sbci	r24, 0xFF	; 255
    179c:	9f 4f       	sbci	r25, 0xFF	; 255
    179e:	08 95       	ret

000017a0 <__fp_pscA>:
    17a0:	00 24       	eor	r0, r0
    17a2:	0a 94       	dec	r0
    17a4:	16 16       	cp	r1, r22
    17a6:	17 06       	cpc	r1, r23
    17a8:	18 06       	cpc	r1, r24
    17aa:	09 06       	cpc	r0, r25
    17ac:	08 95       	ret

000017ae <__fp_pscB>:
    17ae:	00 24       	eor	r0, r0
    17b0:	0a 94       	dec	r0
    17b2:	12 16       	cp	r1, r18
    17b4:	13 06       	cpc	r1, r19
    17b6:	14 06       	cpc	r1, r20
    17b8:	05 06       	cpc	r0, r21
    17ba:	08 95       	ret

000017bc <__fp_round>:
    17bc:	09 2e       	mov	r0, r25
    17be:	03 94       	inc	r0
    17c0:	00 0c       	add	r0, r0
    17c2:	11 f4       	brne	.+4      	; 0x17c8 <__fp_round+0xc>
    17c4:	88 23       	and	r24, r24
    17c6:	52 f0       	brmi	.+20     	; 0x17dc <__fp_round+0x20>
    17c8:	bb 0f       	add	r27, r27
    17ca:	40 f4       	brcc	.+16     	; 0x17dc <__fp_round+0x20>
    17cc:	bf 2b       	or	r27, r31
    17ce:	11 f4       	brne	.+4      	; 0x17d4 <__fp_round+0x18>
    17d0:	60 ff       	sbrs	r22, 0
    17d2:	04 c0       	rjmp	.+8      	; 0x17dc <__fp_round+0x20>
    17d4:	6f 5f       	subi	r22, 0xFF	; 255
    17d6:	7f 4f       	sbci	r23, 0xFF	; 255
    17d8:	8f 4f       	sbci	r24, 0xFF	; 255
    17da:	9f 4f       	sbci	r25, 0xFF	; 255
    17dc:	08 95       	ret

000017de <__fp_split3>:
    17de:	57 fd       	sbrc	r21, 7
    17e0:	90 58       	subi	r25, 0x80	; 128
    17e2:	44 0f       	add	r20, r20
    17e4:	55 1f       	adc	r21, r21
    17e6:	59 f0       	breq	.+22     	; 0x17fe <__fp_splitA+0x10>
    17e8:	5f 3f       	cpi	r21, 0xFF	; 255
    17ea:	71 f0       	breq	.+28     	; 0x1808 <__fp_splitA+0x1a>
    17ec:	47 95       	ror	r20

000017ee <__fp_splitA>:
    17ee:	88 0f       	add	r24, r24
    17f0:	97 fb       	bst	r25, 7
    17f2:	99 1f       	adc	r25, r25
    17f4:	61 f0       	breq	.+24     	; 0x180e <__fp_splitA+0x20>
    17f6:	9f 3f       	cpi	r25, 0xFF	; 255
    17f8:	79 f0       	breq	.+30     	; 0x1818 <__fp_splitA+0x2a>
    17fa:	87 95       	ror	r24
    17fc:	08 95       	ret
    17fe:	12 16       	cp	r1, r18
    1800:	13 06       	cpc	r1, r19
    1802:	14 06       	cpc	r1, r20
    1804:	55 1f       	adc	r21, r21
    1806:	f2 cf       	rjmp	.-28     	; 0x17ec <__fp_split3+0xe>
    1808:	46 95       	lsr	r20
    180a:	f1 df       	rcall	.-30     	; 0x17ee <__fp_splitA>
    180c:	08 c0       	rjmp	.+16     	; 0x181e <__fp_splitA+0x30>
    180e:	16 16       	cp	r1, r22
    1810:	17 06       	cpc	r1, r23
    1812:	18 06       	cpc	r1, r24
    1814:	99 1f       	adc	r25, r25
    1816:	f1 cf       	rjmp	.-30     	; 0x17fa <__fp_splitA+0xc>
    1818:	86 95       	lsr	r24
    181a:	71 05       	cpc	r23, r1
    181c:	61 05       	cpc	r22, r1
    181e:	08 94       	sec
    1820:	08 95       	ret

00001822 <__fp_zero>:
    1822:	e8 94       	clt

00001824 <__fp_szero>:
    1824:	bb 27       	eor	r27, r27
    1826:	66 27       	eor	r22, r22
    1828:	77 27       	eor	r23, r23
    182a:	cb 01       	movw	r24, r22
    182c:	97 f9       	bld	r25, 7
    182e:	08 95       	ret
    1830:	0e f0       	brts	.+2      	; 0x1834 <__fp_szero+0x10>
    1832:	23 c1       	rjmp	.+582    	; 0x1a7a <__fp_mpack>
    1834:	a2 cf       	rjmp	.-188    	; 0x177a <__fp_nan>
    1836:	68 94       	set
    1838:	9a cf       	rjmp	.-204    	; 0x176e <__fp_inf>

0000183a <log>:
    183a:	d9 df       	rcall	.-78     	; 0x17ee <__fp_splitA>
    183c:	c8 f3       	brcs	.-14     	; 0x1830 <__fp_szero+0xc>
    183e:	99 23       	and	r25, r25
    1840:	d1 f3       	breq	.-12     	; 0x1836 <__fp_szero+0x12>
    1842:	c6 f3       	brts	.-16     	; 0x1834 <__fp_szero+0x10>
    1844:	df 93       	push	r29
    1846:	cf 93       	push	r28
    1848:	1f 93       	push	r17
    184a:	0f 93       	push	r16
    184c:	ff 92       	push	r15
    184e:	c9 2f       	mov	r28, r25
    1850:	dd 27       	eor	r29, r29
    1852:	88 23       	and	r24, r24
    1854:	2a f0       	brmi	.+10     	; 0x1860 <log+0x26>
    1856:	21 97       	sbiw	r28, 0x01	; 1
    1858:	66 0f       	add	r22, r22
    185a:	77 1f       	adc	r23, r23
    185c:	88 1f       	adc	r24, r24
    185e:	da f7       	brpl	.-10     	; 0x1856 <log+0x1c>
    1860:	20 e0       	ldi	r18, 0x00	; 0
    1862:	30 e0       	ldi	r19, 0x00	; 0
    1864:	40 e8       	ldi	r20, 0x80	; 128
    1866:	5f eb       	ldi	r21, 0xBF	; 191
    1868:	9f e3       	ldi	r25, 0x3F	; 63
    186a:	88 39       	cpi	r24, 0x98	; 152
    186c:	20 f0       	brcs	.+8      	; 0x1876 <log+0x3c>
    186e:	80 3e       	cpi	r24, 0xE0	; 224
    1870:	30 f0       	brcs	.+12     	; 0x187e <log+0x44>
    1872:	21 96       	adiw	r28, 0x01	; 1
    1874:	8f 77       	andi	r24, 0x7F	; 127
    1876:	ce dd       	rcall	.-1124   	; 0x1414 <__addsf3>
    1878:	e4 ef       	ldi	r30, 0xF4	; 244
    187a:	f1 e0       	ldi	r31, 0x01	; 1
    187c:	03 c0       	rjmp	.+6      	; 0x1884 <log+0x4a>
    187e:	ca dd       	rcall	.-1132   	; 0x1414 <__addsf3>
    1880:	e1 e2       	ldi	r30, 0x21	; 33
    1882:	f2 e0       	ldi	r31, 0x02	; 2
    1884:	08 d1       	rcall	.+528    	; 0x1a96 <__fp_powser>
    1886:	8b 01       	movw	r16, r22
    1888:	be 01       	movw	r22, r28
    188a:	ec 01       	movw	r28, r24
    188c:	fb 2e       	mov	r15, r27
    188e:	6f 57       	subi	r22, 0x7F	; 127
    1890:	71 09       	sbc	r23, r1
    1892:	75 95       	asr	r23
    1894:	77 1f       	adc	r23, r23
    1896:	88 0b       	sbc	r24, r24
    1898:	99 0b       	sbc	r25, r25
    189a:	f0 de       	rcall	.-544    	; 0x167c <__floatsisf>
    189c:	28 e1       	ldi	r18, 0x18	; 24
    189e:	32 e7       	ldi	r19, 0x72	; 114
    18a0:	41 e3       	ldi	r20, 0x31	; 49
    18a2:	5f e3       	ldi	r21, 0x3F	; 63
    18a4:	16 d0       	rcall	.+44     	; 0x18d2 <__mulsf3x>
    18a6:	af 2d       	mov	r26, r15
    18a8:	98 01       	movw	r18, r16
    18aa:	ae 01       	movw	r20, r28
    18ac:	ff 90       	pop	r15
    18ae:	0f 91       	pop	r16
    18b0:	1f 91       	pop	r17
    18b2:	cf 91       	pop	r28
    18b4:	df 91       	pop	r29
    18b6:	bf dd       	rcall	.-1154   	; 0x1436 <__addsf3x>
    18b8:	81 cf       	rjmp	.-254    	; 0x17bc <__fp_round>

000018ba <__mulsf3>:
    18ba:	0b d0       	rcall	.+22     	; 0x18d2 <__mulsf3x>
    18bc:	7f cf       	rjmp	.-258    	; 0x17bc <__fp_round>
    18be:	70 df       	rcall	.-288    	; 0x17a0 <__fp_pscA>
    18c0:	28 f0       	brcs	.+10     	; 0x18cc <__mulsf3+0x12>
    18c2:	75 df       	rcall	.-278    	; 0x17ae <__fp_pscB>
    18c4:	18 f0       	brcs	.+6      	; 0x18cc <__mulsf3+0x12>
    18c6:	95 23       	and	r25, r21
    18c8:	09 f0       	breq	.+2      	; 0x18cc <__mulsf3+0x12>
    18ca:	51 cf       	rjmp	.-350    	; 0x176e <__fp_inf>
    18cc:	56 cf       	rjmp	.-340    	; 0x177a <__fp_nan>
    18ce:	11 24       	eor	r1, r1
    18d0:	a9 cf       	rjmp	.-174    	; 0x1824 <__fp_szero>

000018d2 <__mulsf3x>:
    18d2:	85 df       	rcall	.-246    	; 0x17de <__fp_split3>
    18d4:	a0 f3       	brcs	.-24     	; 0x18be <__mulsf3+0x4>

000018d6 <__mulsf3_pse>:
    18d6:	95 9f       	mul	r25, r21
    18d8:	d1 f3       	breq	.-12     	; 0x18ce <__mulsf3+0x14>
    18da:	95 0f       	add	r25, r21
    18dc:	50 e0       	ldi	r21, 0x00	; 0
    18de:	55 1f       	adc	r21, r21
    18e0:	62 9f       	mul	r22, r18
    18e2:	f0 01       	movw	r30, r0
    18e4:	72 9f       	mul	r23, r18
    18e6:	bb 27       	eor	r27, r27
    18e8:	f0 0d       	add	r31, r0
    18ea:	b1 1d       	adc	r27, r1
    18ec:	63 9f       	mul	r22, r19
    18ee:	aa 27       	eor	r26, r26
    18f0:	f0 0d       	add	r31, r0
    18f2:	b1 1d       	adc	r27, r1
    18f4:	aa 1f       	adc	r26, r26
    18f6:	64 9f       	mul	r22, r20
    18f8:	66 27       	eor	r22, r22
    18fa:	b0 0d       	add	r27, r0
    18fc:	a1 1d       	adc	r26, r1
    18fe:	66 1f       	adc	r22, r22
    1900:	82 9f       	mul	r24, r18
    1902:	22 27       	eor	r18, r18
    1904:	b0 0d       	add	r27, r0
    1906:	a1 1d       	adc	r26, r1
    1908:	62 1f       	adc	r22, r18
    190a:	73 9f       	mul	r23, r19
    190c:	b0 0d       	add	r27, r0
    190e:	a1 1d       	adc	r26, r1
    1910:	62 1f       	adc	r22, r18
    1912:	83 9f       	mul	r24, r19
    1914:	a0 0d       	add	r26, r0
    1916:	61 1d       	adc	r22, r1
    1918:	22 1f       	adc	r18, r18
    191a:	74 9f       	mul	r23, r20
    191c:	33 27       	eor	r19, r19
    191e:	a0 0d       	add	r26, r0
    1920:	61 1d       	adc	r22, r1
    1922:	23 1f       	adc	r18, r19
    1924:	84 9f       	mul	r24, r20
    1926:	60 0d       	add	r22, r0
    1928:	21 1d       	adc	r18, r1
    192a:	82 2f       	mov	r24, r18
    192c:	76 2f       	mov	r23, r22
    192e:	6a 2f       	mov	r22, r26
    1930:	11 24       	eor	r1, r1
    1932:	9f 57       	subi	r25, 0x7F	; 127
    1934:	50 40       	sbci	r21, 0x00	; 0
    1936:	8a f0       	brmi	.+34     	; 0x195a <__mulsf3_pse+0x84>
    1938:	e1 f0       	breq	.+56     	; 0x1972 <__mulsf3_pse+0x9c>
    193a:	88 23       	and	r24, r24
    193c:	4a f0       	brmi	.+18     	; 0x1950 <__mulsf3_pse+0x7a>
    193e:	ee 0f       	add	r30, r30
    1940:	ff 1f       	adc	r31, r31
    1942:	bb 1f       	adc	r27, r27
    1944:	66 1f       	adc	r22, r22
    1946:	77 1f       	adc	r23, r23
    1948:	88 1f       	adc	r24, r24
    194a:	91 50       	subi	r25, 0x01	; 1
    194c:	50 40       	sbci	r21, 0x00	; 0
    194e:	a9 f7       	brne	.-22     	; 0x193a <__mulsf3_pse+0x64>
    1950:	9e 3f       	cpi	r25, 0xFE	; 254
    1952:	51 05       	cpc	r21, r1
    1954:	70 f0       	brcs	.+28     	; 0x1972 <__mulsf3_pse+0x9c>
    1956:	0b cf       	rjmp	.-490    	; 0x176e <__fp_inf>
    1958:	65 cf       	rjmp	.-310    	; 0x1824 <__fp_szero>
    195a:	5f 3f       	cpi	r21, 0xFF	; 255
    195c:	ec f3       	brlt	.-6      	; 0x1958 <__mulsf3_pse+0x82>
    195e:	98 3e       	cpi	r25, 0xE8	; 232
    1960:	dc f3       	brlt	.-10     	; 0x1958 <__mulsf3_pse+0x82>
    1962:	86 95       	lsr	r24
    1964:	77 95       	ror	r23
    1966:	67 95       	ror	r22
    1968:	b7 95       	ror	r27
    196a:	f7 95       	ror	r31
    196c:	e7 95       	ror	r30
    196e:	9f 5f       	subi	r25, 0xFF	; 255
    1970:	c1 f7       	brne	.-16     	; 0x1962 <__mulsf3_pse+0x8c>
    1972:	fe 2b       	or	r31, r30
    1974:	88 0f       	add	r24, r24
    1976:	91 1d       	adc	r25, r1
    1978:	96 95       	lsr	r25
    197a:	87 95       	ror	r24
    197c:	97 f9       	bld	r25, 7
    197e:	08 95       	ret

00001980 <pow>:
    1980:	fa 01       	movw	r30, r20
    1982:	ee 0f       	add	r30, r30
    1984:	ff 1f       	adc	r31, r31
    1986:	30 96       	adiw	r30, 0x00	; 0
    1988:	21 05       	cpc	r18, r1
    198a:	31 05       	cpc	r19, r1
    198c:	99 f1       	breq	.+102    	; 0x19f4 <pow+0x74>
    198e:	61 15       	cp	r22, r1
    1990:	71 05       	cpc	r23, r1
    1992:	61 f4       	brne	.+24     	; 0x19ac <pow+0x2c>
    1994:	80 38       	cpi	r24, 0x80	; 128
    1996:	bf e3       	ldi	r27, 0x3F	; 63
    1998:	9b 07       	cpc	r25, r27
    199a:	49 f1       	breq	.+82     	; 0x19ee <pow+0x6e>
    199c:	68 94       	set
    199e:	90 38       	cpi	r25, 0x80	; 128
    19a0:	81 05       	cpc	r24, r1
    19a2:	61 f0       	breq	.+24     	; 0x19bc <pow+0x3c>
    19a4:	80 38       	cpi	r24, 0x80	; 128
    19a6:	bf ef       	ldi	r27, 0xFF	; 255
    19a8:	9b 07       	cpc	r25, r27
    19aa:	41 f0       	breq	.+16     	; 0x19bc <pow+0x3c>
    19ac:	99 23       	and	r25, r25
    19ae:	42 f5       	brpl	.+80     	; 0x1a00 <pow+0x80>
    19b0:	ff 3f       	cpi	r31, 0xFF	; 255
    19b2:	e1 05       	cpc	r30, r1
    19b4:	31 05       	cpc	r19, r1
    19b6:	21 05       	cpc	r18, r1
    19b8:	11 f1       	breq	.+68     	; 0x19fe <pow+0x7e>
    19ba:	e8 94       	clt
    19bc:	08 94       	sec
    19be:	e7 95       	ror	r30
    19c0:	d9 01       	movw	r26, r18
    19c2:	aa 23       	and	r26, r26
    19c4:	29 f4       	brne	.+10     	; 0x19d0 <pow+0x50>
    19c6:	ab 2f       	mov	r26, r27
    19c8:	be 2f       	mov	r27, r30
    19ca:	f8 5f       	subi	r31, 0xF8	; 248
    19cc:	d0 f3       	brcs	.-12     	; 0x19c2 <pow+0x42>
    19ce:	10 c0       	rjmp	.+32     	; 0x19f0 <pow+0x70>
    19d0:	ff 5f       	subi	r31, 0xFF	; 255
    19d2:	70 f4       	brcc	.+28     	; 0x19f0 <pow+0x70>
    19d4:	a6 95       	lsr	r26
    19d6:	e0 f7       	brcc	.-8      	; 0x19d0 <pow+0x50>
    19d8:	f7 39       	cpi	r31, 0x97	; 151
    19da:	50 f0       	brcs	.+20     	; 0x19f0 <pow+0x70>
    19dc:	19 f0       	breq	.+6      	; 0x19e4 <pow+0x64>
    19de:	ff 3a       	cpi	r31, 0xAF	; 175
    19e0:	38 f4       	brcc	.+14     	; 0x19f0 <pow+0x70>
    19e2:	9f 77       	andi	r25, 0x7F	; 127
    19e4:	9f 93       	push	r25
    19e6:	0c d0       	rcall	.+24     	; 0x1a00 <pow+0x80>
    19e8:	0f 90       	pop	r0
    19ea:	07 fc       	sbrc	r0, 7
    19ec:	90 58       	subi	r25, 0x80	; 128
    19ee:	08 95       	ret
    19f0:	3e f0       	brts	.+14     	; 0x1a00 <pow+0x80>
    19f2:	c3 ce       	rjmp	.-634    	; 0x177a <__fp_nan>
    19f4:	60 e0       	ldi	r22, 0x00	; 0
    19f6:	70 e0       	ldi	r23, 0x00	; 0
    19f8:	80 e8       	ldi	r24, 0x80	; 128
    19fa:	9f e3       	ldi	r25, 0x3F	; 63
    19fc:	08 95       	ret
    19fe:	4f e7       	ldi	r20, 0x7F	; 127
    1a00:	9f 77       	andi	r25, 0x7F	; 127
    1a02:	5f 93       	push	r21
    1a04:	4f 93       	push	r20
    1a06:	3f 93       	push	r19
    1a08:	2f 93       	push	r18
    1a0a:	17 df       	rcall	.-466    	; 0x183a <log>
    1a0c:	2f 91       	pop	r18
    1a0e:	3f 91       	pop	r19
    1a10:	4f 91       	pop	r20
    1a12:	5f 91       	pop	r21
    1a14:	52 df       	rcall	.-348    	; 0x18ba <__mulsf3>
    1a16:	05 c0       	rjmp	.+10     	; 0x1a22 <exp>
    1a18:	19 f4       	brne	.+6      	; 0x1a20 <pow+0xa0>
    1a1a:	0e f0       	brts	.+2      	; 0x1a1e <pow+0x9e>
    1a1c:	a8 ce       	rjmp	.-688    	; 0x176e <__fp_inf>
    1a1e:	01 cf       	rjmp	.-510    	; 0x1822 <__fp_zero>
    1a20:	ac ce       	rjmp	.-680    	; 0x177a <__fp_nan>

00001a22 <exp>:
    1a22:	e5 de       	rcall	.-566    	; 0x17ee <__fp_splitA>
    1a24:	c8 f3       	brcs	.-14     	; 0x1a18 <pow+0x98>
    1a26:	96 38       	cpi	r25, 0x86	; 134
    1a28:	c0 f7       	brcc	.-16     	; 0x1a1a <pow+0x9a>
    1a2a:	07 f8       	bld	r0, 7
    1a2c:	0f 92       	push	r0
    1a2e:	e8 94       	clt
    1a30:	2b e3       	ldi	r18, 0x3B	; 59
    1a32:	3a ea       	ldi	r19, 0xAA	; 170
    1a34:	48 eb       	ldi	r20, 0xB8	; 184
    1a36:	5f e7       	ldi	r21, 0x7F	; 127
    1a38:	4e df       	rcall	.-356    	; 0x18d6 <__mulsf3_pse>
    1a3a:	0f 92       	push	r0
    1a3c:	0f 92       	push	r0
    1a3e:	0f 92       	push	r0
    1a40:	4d b7       	in	r20, 0x3d	; 61
    1a42:	5e b7       	in	r21, 0x3e	; 62
    1a44:	0f 92       	push	r0
    1a46:	89 d0       	rcall	.+274    	; 0x1b5a <modf>
    1a48:	ee e4       	ldi	r30, 0x4E	; 78
    1a4a:	f2 e0       	ldi	r31, 0x02	; 2
    1a4c:	24 d0       	rcall	.+72     	; 0x1a96 <__fp_powser>
    1a4e:	4f 91       	pop	r20
    1a50:	5f 91       	pop	r21
    1a52:	ef 91       	pop	r30
    1a54:	ff 91       	pop	r31
    1a56:	e5 95       	asr	r30
    1a58:	ee 1f       	adc	r30, r30
    1a5a:	ff 1f       	adc	r31, r31
    1a5c:	49 f0       	breq	.+18     	; 0x1a70 <exp+0x4e>
    1a5e:	fe 57       	subi	r31, 0x7E	; 126
    1a60:	e0 68       	ori	r30, 0x80	; 128
    1a62:	44 27       	eor	r20, r20
    1a64:	ee 0f       	add	r30, r30
    1a66:	44 1f       	adc	r20, r20
    1a68:	fa 95       	dec	r31
    1a6a:	e1 f7       	brne	.-8      	; 0x1a64 <exp+0x42>
    1a6c:	41 95       	neg	r20
    1a6e:	55 0b       	sbc	r21, r21
    1a70:	40 d0       	rcall	.+128    	; 0x1af2 <ldexp>
    1a72:	0f 90       	pop	r0
    1a74:	07 fe       	sbrs	r0, 7
    1a76:	34 c0       	rjmp	.+104    	; 0x1ae0 <inverse>
    1a78:	08 95       	ret

00001a7a <__fp_mpack>:
    1a7a:	9f 3f       	cpi	r25, 0xFF	; 255
    1a7c:	31 f0       	breq	.+12     	; 0x1a8a <__fp_mpack_finite+0xc>

00001a7e <__fp_mpack_finite>:
    1a7e:	91 50       	subi	r25, 0x01	; 1
    1a80:	20 f4       	brcc	.+8      	; 0x1a8a <__fp_mpack_finite+0xc>
    1a82:	87 95       	ror	r24
    1a84:	77 95       	ror	r23
    1a86:	67 95       	ror	r22
    1a88:	b7 95       	ror	r27
    1a8a:	88 0f       	add	r24, r24
    1a8c:	91 1d       	adc	r25, r1
    1a8e:	96 95       	lsr	r25
    1a90:	87 95       	ror	r24
    1a92:	97 f9       	bld	r25, 7
    1a94:	08 95       	ret

00001a96 <__fp_powser>:
    1a96:	df 93       	push	r29
    1a98:	cf 93       	push	r28
    1a9a:	1f 93       	push	r17
    1a9c:	0f 93       	push	r16
    1a9e:	ff 92       	push	r15
    1aa0:	ef 92       	push	r14
    1aa2:	df 92       	push	r13
    1aa4:	7b 01       	movw	r14, r22
    1aa6:	8c 01       	movw	r16, r24
    1aa8:	68 94       	set
    1aaa:	05 c0       	rjmp	.+10     	; 0x1ab6 <__fp_powser+0x20>
    1aac:	da 2e       	mov	r13, r26
    1aae:	ef 01       	movw	r28, r30
    1ab0:	10 df       	rcall	.-480    	; 0x18d2 <__mulsf3x>
    1ab2:	fe 01       	movw	r30, r28
    1ab4:	e8 94       	clt
    1ab6:	a5 91       	lpm	r26, Z+
    1ab8:	25 91       	lpm	r18, Z+
    1aba:	35 91       	lpm	r19, Z+
    1abc:	45 91       	lpm	r20, Z+
    1abe:	55 91       	lpm	r21, Z+
    1ac0:	ae f3       	brts	.-22     	; 0x1aac <__fp_powser+0x16>
    1ac2:	ef 01       	movw	r28, r30
    1ac4:	b8 dc       	rcall	.-1680   	; 0x1436 <__addsf3x>
    1ac6:	fe 01       	movw	r30, r28
    1ac8:	97 01       	movw	r18, r14
    1aca:	a8 01       	movw	r20, r16
    1acc:	da 94       	dec	r13
    1ace:	79 f7       	brne	.-34     	; 0x1aae <__fp_powser+0x18>
    1ad0:	df 90       	pop	r13
    1ad2:	ef 90       	pop	r14
    1ad4:	ff 90       	pop	r15
    1ad6:	0f 91       	pop	r16
    1ad8:	1f 91       	pop	r17
    1ada:	cf 91       	pop	r28
    1adc:	df 91       	pop	r29
    1ade:	08 95       	ret

00001ae0 <inverse>:
    1ae0:	9b 01       	movw	r18, r22
    1ae2:	ac 01       	movw	r20, r24
    1ae4:	60 e0       	ldi	r22, 0x00	; 0
    1ae6:	70 e0       	ldi	r23, 0x00	; 0
    1ae8:	80 e8       	ldi	r24, 0x80	; 128
    1aea:	9f e3       	ldi	r25, 0x3F	; 63
    1aec:	f7 cc       	rjmp	.-1554   	; 0x14dc <__divsf3>
    1aee:	3f ce       	rjmp	.-898    	; 0x176e <__fp_inf>
    1af0:	c4 cf       	rjmp	.-120    	; 0x1a7a <__fp_mpack>

00001af2 <ldexp>:
    1af2:	7d de       	rcall	.-774    	; 0x17ee <__fp_splitA>
    1af4:	e8 f3       	brcs	.-6      	; 0x1af0 <inverse+0x10>
    1af6:	99 23       	and	r25, r25
    1af8:	d9 f3       	breq	.-10     	; 0x1af0 <inverse+0x10>
    1afa:	94 0f       	add	r25, r20
    1afc:	51 1d       	adc	r21, r1
    1afe:	bb f3       	brvs	.-18     	; 0x1aee <inverse+0xe>
    1b00:	91 50       	subi	r25, 0x01	; 1
    1b02:	50 40       	sbci	r21, 0x00	; 0
    1b04:	94 f0       	brlt	.+36     	; 0x1b2a <ldexp+0x38>
    1b06:	59 f0       	breq	.+22     	; 0x1b1e <ldexp+0x2c>
    1b08:	88 23       	and	r24, r24
    1b0a:	32 f0       	brmi	.+12     	; 0x1b18 <ldexp+0x26>
    1b0c:	66 0f       	add	r22, r22
    1b0e:	77 1f       	adc	r23, r23
    1b10:	88 1f       	adc	r24, r24
    1b12:	91 50       	subi	r25, 0x01	; 1
    1b14:	50 40       	sbci	r21, 0x00	; 0
    1b16:	c1 f7       	brne	.-16     	; 0x1b08 <ldexp+0x16>
    1b18:	9e 3f       	cpi	r25, 0xFE	; 254
    1b1a:	51 05       	cpc	r21, r1
    1b1c:	44 f7       	brge	.-48     	; 0x1aee <inverse+0xe>
    1b1e:	88 0f       	add	r24, r24
    1b20:	91 1d       	adc	r25, r1
    1b22:	96 95       	lsr	r25
    1b24:	87 95       	ror	r24
    1b26:	97 f9       	bld	r25, 7
    1b28:	08 95       	ret
    1b2a:	5f 3f       	cpi	r21, 0xFF	; 255
    1b2c:	ac f0       	brlt	.+42     	; 0x1b58 <ldexp+0x66>
    1b2e:	98 3e       	cpi	r25, 0xE8	; 232
    1b30:	9c f0       	brlt	.+38     	; 0x1b58 <ldexp+0x66>
    1b32:	bb 27       	eor	r27, r27
    1b34:	86 95       	lsr	r24
    1b36:	77 95       	ror	r23
    1b38:	67 95       	ror	r22
    1b3a:	b7 95       	ror	r27
    1b3c:	08 f4       	brcc	.+2      	; 0x1b40 <ldexp+0x4e>
    1b3e:	b1 60       	ori	r27, 0x01	; 1
    1b40:	93 95       	inc	r25
    1b42:	c1 f7       	brne	.-16     	; 0x1b34 <ldexp+0x42>
    1b44:	bb 0f       	add	r27, r27
    1b46:	58 f7       	brcc	.-42     	; 0x1b1e <ldexp+0x2c>
    1b48:	11 f4       	brne	.+4      	; 0x1b4e <ldexp+0x5c>
    1b4a:	60 ff       	sbrs	r22, 0
    1b4c:	e8 cf       	rjmp	.-48     	; 0x1b1e <ldexp+0x2c>
    1b4e:	6f 5f       	subi	r22, 0xFF	; 255
    1b50:	7f 4f       	sbci	r23, 0xFF	; 255
    1b52:	8f 4f       	sbci	r24, 0xFF	; 255
    1b54:	9f 4f       	sbci	r25, 0xFF	; 255
    1b56:	e3 cf       	rjmp	.-58     	; 0x1b1e <ldexp+0x2c>
    1b58:	65 ce       	rjmp	.-822    	; 0x1824 <__fp_szero>

00001b5a <modf>:
    1b5a:	fa 01       	movw	r30, r20
    1b5c:	dc 01       	movw	r26, r24
    1b5e:	aa 0f       	add	r26, r26
    1b60:	bb 1f       	adc	r27, r27
    1b62:	9b 01       	movw	r18, r22
    1b64:	ac 01       	movw	r20, r24
    1b66:	bf 57       	subi	r27, 0x7F	; 127
    1b68:	28 f4       	brcc	.+10     	; 0x1b74 <modf+0x1a>
    1b6a:	22 27       	eor	r18, r18
    1b6c:	33 27       	eor	r19, r19
    1b6e:	44 27       	eor	r20, r20
    1b70:	50 78       	andi	r21, 0x80	; 128
    1b72:	1f c0       	rjmp	.+62     	; 0x1bb2 <modf+0x58>
    1b74:	b7 51       	subi	r27, 0x17	; 23
    1b76:	88 f4       	brcc	.+34     	; 0x1b9a <modf+0x40>
    1b78:	ab 2f       	mov	r26, r27
    1b7a:	00 24       	eor	r0, r0
    1b7c:	46 95       	lsr	r20
    1b7e:	37 95       	ror	r19
    1b80:	27 95       	ror	r18
    1b82:	01 1c       	adc	r0, r1
    1b84:	a3 95       	inc	r26
    1b86:	d2 f3       	brmi	.-12     	; 0x1b7c <modf+0x22>
    1b88:	00 20       	and	r0, r0
    1b8a:	69 f0       	breq	.+26     	; 0x1ba6 <modf+0x4c>
    1b8c:	22 0f       	add	r18, r18
    1b8e:	33 1f       	adc	r19, r19
    1b90:	44 1f       	adc	r20, r20
    1b92:	b3 95       	inc	r27
    1b94:	da f3       	brmi	.-10     	; 0x1b8c <modf+0x32>
    1b96:	0d d0       	rcall	.+26     	; 0x1bb2 <modf+0x58>
    1b98:	3c cc       	rjmp	.-1928   	; 0x1412 <__subsf3>
    1b9a:	61 30       	cpi	r22, 0x01	; 1
    1b9c:	71 05       	cpc	r23, r1
    1b9e:	a0 e8       	ldi	r26, 0x80	; 128
    1ba0:	8a 07       	cpc	r24, r26
    1ba2:	b9 46       	sbci	r27, 0x69	; 105
    1ba4:	30 f4       	brcc	.+12     	; 0x1bb2 <modf+0x58>
    1ba6:	9b 01       	movw	r18, r22
    1ba8:	ac 01       	movw	r20, r24
    1baa:	66 27       	eor	r22, r22
    1bac:	77 27       	eor	r23, r23
    1bae:	88 27       	eor	r24, r24
    1bb0:	90 78       	andi	r25, 0x80	; 128
    1bb2:	30 96       	adiw	r30, 0x00	; 0
    1bb4:	21 f0       	breq	.+8      	; 0x1bbe <modf+0x64>
    1bb6:	20 83       	st	Z, r18
    1bb8:	31 83       	std	Z+1, r19	; 0x01
    1bba:	42 83       	std	Z+2, r20	; 0x02
    1bbc:	53 83       	std	Z+3, r21	; 0x03
    1bbe:	08 95       	ret

00001bc0 <__udivmodsi4>:
    1bc0:	a1 e2       	ldi	r26, 0x21	; 33
    1bc2:	1a 2e       	mov	r1, r26
    1bc4:	aa 1b       	sub	r26, r26
    1bc6:	bb 1b       	sub	r27, r27
    1bc8:	fd 01       	movw	r30, r26
    1bca:	0d c0       	rjmp	.+26     	; 0x1be6 <__udivmodsi4_ep>

00001bcc <__udivmodsi4_loop>:
    1bcc:	aa 1f       	adc	r26, r26
    1bce:	bb 1f       	adc	r27, r27
    1bd0:	ee 1f       	adc	r30, r30
    1bd2:	ff 1f       	adc	r31, r31
    1bd4:	a2 17       	cp	r26, r18
    1bd6:	b3 07       	cpc	r27, r19
    1bd8:	e4 07       	cpc	r30, r20
    1bda:	f5 07       	cpc	r31, r21
    1bdc:	20 f0       	brcs	.+8      	; 0x1be6 <__udivmodsi4_ep>
    1bde:	a2 1b       	sub	r26, r18
    1be0:	b3 0b       	sbc	r27, r19
    1be2:	e4 0b       	sbc	r30, r20
    1be4:	f5 0b       	sbc	r31, r21

00001be6 <__udivmodsi4_ep>:
    1be6:	66 1f       	adc	r22, r22
    1be8:	77 1f       	adc	r23, r23
    1bea:	88 1f       	adc	r24, r24
    1bec:	99 1f       	adc	r25, r25
    1bee:	1a 94       	dec	r1
    1bf0:	69 f7       	brne	.-38     	; 0x1bcc <__udivmodsi4_loop>
    1bf2:	60 95       	com	r22
    1bf4:	70 95       	com	r23
    1bf6:	80 95       	com	r24
    1bf8:	90 95       	com	r25
    1bfa:	9b 01       	movw	r18, r22
    1bfc:	ac 01       	movw	r20, r24
    1bfe:	bd 01       	movw	r22, r26
    1c00:	cf 01       	movw	r24, r30
    1c02:	08 95       	ret

00001c04 <__muldi3>:
    1c04:	df 93       	push	r29
    1c06:	cf 93       	push	r28
    1c08:	1f 93       	push	r17
    1c0a:	0f 93       	push	r16
    1c0c:	9a 9d       	mul	r25, r10
    1c0e:	f0 2d       	mov	r31, r0
    1c10:	21 9f       	mul	r18, r17
    1c12:	f0 0d       	add	r31, r0
    1c14:	8b 9d       	mul	r24, r11
    1c16:	f0 0d       	add	r31, r0
    1c18:	8a 9d       	mul	r24, r10
    1c1a:	e0 2d       	mov	r30, r0
    1c1c:	f1 0d       	add	r31, r1
    1c1e:	03 9f       	mul	r16, r19
    1c20:	f0 0d       	add	r31, r0
    1c22:	02 9f       	mul	r16, r18
    1c24:	e0 0d       	add	r30, r0
    1c26:	f1 1d       	adc	r31, r1
    1c28:	4e 9d       	mul	r20, r14
    1c2a:	e0 0d       	add	r30, r0
    1c2c:	f1 1d       	adc	r31, r1
    1c2e:	5e 9d       	mul	r21, r14
    1c30:	f0 0d       	add	r31, r0
    1c32:	4f 9d       	mul	r20, r15
    1c34:	f0 0d       	add	r31, r0
    1c36:	7f 93       	push	r23
    1c38:	6f 93       	push	r22
    1c3a:	bf 92       	push	r11
    1c3c:	af 92       	push	r10
    1c3e:	5f 93       	push	r21
    1c40:	4f 93       	push	r20
    1c42:	d5 01       	movw	r26, r10
    1c44:	30 d0       	rcall	.+96     	; 0x1ca6 <__umulhisi3>
    1c46:	8b 01       	movw	r16, r22
    1c48:	ac 01       	movw	r20, r24
    1c4a:	d7 01       	movw	r26, r14
    1c4c:	2c d0       	rcall	.+88     	; 0x1ca6 <__umulhisi3>
    1c4e:	eb 01       	movw	r28, r22
    1c50:	e8 0f       	add	r30, r24
    1c52:	f9 1f       	adc	r31, r25
    1c54:	d6 01       	movw	r26, r12
    1c56:	1f d0       	rcall	.+62     	; 0x1c96 <__muldi3_6>
    1c58:	2f 91       	pop	r18
    1c5a:	3f 91       	pop	r19
    1c5c:	d6 01       	movw	r26, r12
    1c5e:	23 d0       	rcall	.+70     	; 0x1ca6 <__umulhisi3>
    1c60:	c6 0f       	add	r28, r22
    1c62:	d7 1f       	adc	r29, r23
    1c64:	e8 1f       	adc	r30, r24
    1c66:	f9 1f       	adc	r31, r25
    1c68:	af 91       	pop	r26
    1c6a:	bf 91       	pop	r27
    1c6c:	14 d0       	rcall	.+40     	; 0x1c96 <__muldi3_6>
    1c6e:	2f 91       	pop	r18
    1c70:	3f 91       	pop	r19
    1c72:	19 d0       	rcall	.+50     	; 0x1ca6 <__umulhisi3>
    1c74:	c6 0f       	add	r28, r22
    1c76:	d7 1f       	adc	r29, r23
    1c78:	e8 1f       	adc	r30, r24
    1c7a:	f9 1f       	adc	r31, r25
    1c7c:	d6 01       	movw	r26, r12
    1c7e:	13 d0       	rcall	.+38     	; 0x1ca6 <__umulhisi3>
    1c80:	e6 0f       	add	r30, r22
    1c82:	f7 1f       	adc	r31, r23
    1c84:	98 01       	movw	r18, r16
    1c86:	be 01       	movw	r22, r28
    1c88:	cf 01       	movw	r24, r30
    1c8a:	11 24       	eor	r1, r1
    1c8c:	0f 91       	pop	r16
    1c8e:	1f 91       	pop	r17
    1c90:	cf 91       	pop	r28
    1c92:	df 91       	pop	r29
    1c94:	08 95       	ret

00001c96 <__muldi3_6>:
    1c96:	07 d0       	rcall	.+14     	; 0x1ca6 <__umulhisi3>
    1c98:	46 0f       	add	r20, r22
    1c9a:	57 1f       	adc	r21, r23
    1c9c:	c8 1f       	adc	r28, r24
    1c9e:	d9 1f       	adc	r29, r25
    1ca0:	08 f4       	brcc	.+2      	; 0x1ca4 <__muldi3_6+0xe>
    1ca2:	31 96       	adiw	r30, 0x01	; 1
    1ca4:	08 95       	ret

00001ca6 <__umulhisi3>:
    1ca6:	a2 9f       	mul	r26, r18
    1ca8:	b0 01       	movw	r22, r0
    1caa:	b3 9f       	mul	r27, r19
    1cac:	c0 01       	movw	r24, r0
    1cae:	a3 9f       	mul	r26, r19
    1cb0:	70 0d       	add	r23, r0
    1cb2:	81 1d       	adc	r24, r1
    1cb4:	11 24       	eor	r1, r1
    1cb6:	91 1d       	adc	r25, r1
    1cb8:	b2 9f       	mul	r27, r18
    1cba:	70 0d       	add	r23, r0
    1cbc:	81 1d       	adc	r24, r1
    1cbe:	11 24       	eor	r1, r1
    1cc0:	91 1d       	adc	r25, r1
    1cc2:	08 95       	ret

00001cc4 <fdevopen>:
    1cc4:	0f 93       	push	r16
    1cc6:	1f 93       	push	r17
    1cc8:	cf 93       	push	r28
    1cca:	df 93       	push	r29
    1ccc:	00 97       	sbiw	r24, 0x00	; 0
    1cce:	31 f4       	brne	.+12     	; 0x1cdc <fdevopen+0x18>
    1cd0:	61 15       	cp	r22, r1
    1cd2:	71 05       	cpc	r23, r1
    1cd4:	19 f4       	brne	.+6      	; 0x1cdc <fdevopen+0x18>
    1cd6:	80 e0       	ldi	r24, 0x00	; 0
    1cd8:	90 e0       	ldi	r25, 0x00	; 0
    1cda:	39 c0       	rjmp	.+114    	; 0x1d4e <fdevopen+0x8a>
    1cdc:	8b 01       	movw	r16, r22
    1cde:	ec 01       	movw	r28, r24
    1ce0:	6e e0       	ldi	r22, 0x0E	; 14
    1ce2:	70 e0       	ldi	r23, 0x00	; 0
    1ce4:	81 e0       	ldi	r24, 0x01	; 1
    1ce6:	90 e0       	ldi	r25, 0x00	; 0
    1ce8:	32 d2       	rcall	.+1124   	; 0x214e <calloc>
    1cea:	fc 01       	movw	r30, r24
    1cec:	89 2b       	or	r24, r25
    1cee:	99 f3       	breq	.-26     	; 0x1cd6 <fdevopen+0x12>
    1cf0:	80 e8       	ldi	r24, 0x80	; 128
    1cf2:	83 83       	std	Z+3, r24	; 0x03
    1cf4:	01 15       	cp	r16, r1
    1cf6:	11 05       	cpc	r17, r1
    1cf8:	71 f0       	breq	.+28     	; 0x1d16 <fdevopen+0x52>
    1cfa:	02 87       	std	Z+10, r16	; 0x0a
    1cfc:	13 87       	std	Z+11, r17	; 0x0b
    1cfe:	81 e8       	ldi	r24, 0x81	; 129
    1d00:	83 83       	std	Z+3, r24	; 0x03
    1d02:	80 91 23 20 	lds	r24, 0x2023	; 0x802023 <__iob>
    1d06:	90 91 24 20 	lds	r25, 0x2024	; 0x802024 <__iob+0x1>
    1d0a:	89 2b       	or	r24, r25
    1d0c:	21 f4       	brne	.+8      	; 0x1d16 <fdevopen+0x52>
    1d0e:	e0 93 23 20 	sts	0x2023, r30	; 0x802023 <__iob>
    1d12:	f0 93 24 20 	sts	0x2024, r31	; 0x802024 <__iob+0x1>
    1d16:	20 97       	sbiw	r28, 0x00	; 0
    1d18:	c9 f0       	breq	.+50     	; 0x1d4c <fdevopen+0x88>
    1d1a:	c0 87       	std	Z+8, r28	; 0x08
    1d1c:	d1 87       	std	Z+9, r29	; 0x09
    1d1e:	83 81       	ldd	r24, Z+3	; 0x03
    1d20:	82 60       	ori	r24, 0x02	; 2
    1d22:	83 83       	std	Z+3, r24	; 0x03
    1d24:	80 91 25 20 	lds	r24, 0x2025	; 0x802025 <__iob+0x2>
    1d28:	90 91 26 20 	lds	r25, 0x2026	; 0x802026 <__iob+0x3>
    1d2c:	89 2b       	or	r24, r25
    1d2e:	71 f4       	brne	.+28     	; 0x1d4c <fdevopen+0x88>
    1d30:	e0 93 25 20 	sts	0x2025, r30	; 0x802025 <__iob+0x2>
    1d34:	f0 93 26 20 	sts	0x2026, r31	; 0x802026 <__iob+0x3>
    1d38:	80 91 27 20 	lds	r24, 0x2027	; 0x802027 <__iob+0x4>
    1d3c:	90 91 28 20 	lds	r25, 0x2028	; 0x802028 <__iob+0x5>
    1d40:	89 2b       	or	r24, r25
    1d42:	21 f4       	brne	.+8      	; 0x1d4c <fdevopen+0x88>
    1d44:	e0 93 27 20 	sts	0x2027, r30	; 0x802027 <__iob+0x4>
    1d48:	f0 93 28 20 	sts	0x2028, r31	; 0x802028 <__iob+0x5>
    1d4c:	cf 01       	movw	r24, r30
    1d4e:	df 91       	pop	r29
    1d50:	cf 91       	pop	r28
    1d52:	1f 91       	pop	r17
    1d54:	0f 91       	pop	r16
    1d56:	08 95       	ret

00001d58 <printf>:
    1d58:	cf 93       	push	r28
    1d5a:	df 93       	push	r29
    1d5c:	cd b7       	in	r28, 0x3d	; 61
    1d5e:	de b7       	in	r29, 0x3e	; 62
    1d60:	ae 01       	movw	r20, r28
    1d62:	4a 5f       	subi	r20, 0xFA	; 250
    1d64:	5f 4f       	sbci	r21, 0xFF	; 255
    1d66:	fa 01       	movw	r30, r20
    1d68:	61 91       	ld	r22, Z+
    1d6a:	71 91       	ld	r23, Z+
    1d6c:	af 01       	movw	r20, r30
    1d6e:	80 91 25 20 	lds	r24, 0x2025	; 0x802025 <__iob+0x2>
    1d72:	90 91 26 20 	lds	r25, 0x2026	; 0x802026 <__iob+0x3>
    1d76:	03 d0       	rcall	.+6      	; 0x1d7e <vfprintf>
    1d78:	df 91       	pop	r29
    1d7a:	cf 91       	pop	r28
    1d7c:	08 95       	ret

00001d7e <vfprintf>:
    1d7e:	2f 92       	push	r2
    1d80:	3f 92       	push	r3
    1d82:	4f 92       	push	r4
    1d84:	5f 92       	push	r5
    1d86:	6f 92       	push	r6
    1d88:	7f 92       	push	r7
    1d8a:	8f 92       	push	r8
    1d8c:	9f 92       	push	r9
    1d8e:	af 92       	push	r10
    1d90:	bf 92       	push	r11
    1d92:	cf 92       	push	r12
    1d94:	df 92       	push	r13
    1d96:	ef 92       	push	r14
    1d98:	ff 92       	push	r15
    1d9a:	0f 93       	push	r16
    1d9c:	1f 93       	push	r17
    1d9e:	cf 93       	push	r28
    1da0:	df 93       	push	r29
    1da2:	cd b7       	in	r28, 0x3d	; 61
    1da4:	de b7       	in	r29, 0x3e	; 62
    1da6:	2c 97       	sbiw	r28, 0x0c	; 12
    1da8:	cd bf       	out	0x3d, r28	; 61
    1daa:	de bf       	out	0x3e, r29	; 62
    1dac:	7c 01       	movw	r14, r24
    1dae:	6b 01       	movw	r12, r22
    1db0:	8a 01       	movw	r16, r20
    1db2:	fc 01       	movw	r30, r24
    1db4:	16 82       	std	Z+6, r1	; 0x06
    1db6:	17 82       	std	Z+7, r1	; 0x07
    1db8:	83 81       	ldd	r24, Z+3	; 0x03
    1dba:	81 ff       	sbrs	r24, 1
    1dbc:	b0 c1       	rjmp	.+864    	; 0x211e <vfprintf+0x3a0>
    1dbe:	ce 01       	movw	r24, r28
    1dc0:	01 96       	adiw	r24, 0x01	; 1
    1dc2:	4c 01       	movw	r8, r24
    1dc4:	f7 01       	movw	r30, r14
    1dc6:	93 81       	ldd	r25, Z+3	; 0x03
    1dc8:	f6 01       	movw	r30, r12
    1dca:	93 fd       	sbrc	r25, 3
    1dcc:	85 91       	lpm	r24, Z+
    1dce:	93 ff       	sbrs	r25, 3
    1dd0:	81 91       	ld	r24, Z+
    1dd2:	6f 01       	movw	r12, r30
    1dd4:	88 23       	and	r24, r24
    1dd6:	09 f4       	brne	.+2      	; 0x1dda <vfprintf+0x5c>
    1dd8:	9e c1       	rjmp	.+828    	; 0x2116 <vfprintf+0x398>
    1dda:	85 32       	cpi	r24, 0x25	; 37
    1ddc:	39 f4       	brne	.+14     	; 0x1dec <vfprintf+0x6e>
    1dde:	93 fd       	sbrc	r25, 3
    1de0:	85 91       	lpm	r24, Z+
    1de2:	93 ff       	sbrs	r25, 3
    1de4:	81 91       	ld	r24, Z+
    1de6:	6f 01       	movw	r12, r30
    1de8:	85 32       	cpi	r24, 0x25	; 37
    1dea:	21 f4       	brne	.+8      	; 0x1df4 <vfprintf+0x76>
    1dec:	b7 01       	movw	r22, r14
    1dee:	90 e0       	ldi	r25, 0x00	; 0
    1df0:	12 d3       	rcall	.+1572   	; 0x2416 <fputc>
    1df2:	e8 cf       	rjmp	.-48     	; 0x1dc4 <vfprintf+0x46>
    1df4:	51 2c       	mov	r5, r1
    1df6:	31 2c       	mov	r3, r1
    1df8:	20 e0       	ldi	r18, 0x00	; 0
    1dfa:	20 32       	cpi	r18, 0x20	; 32
    1dfc:	a0 f4       	brcc	.+40     	; 0x1e26 <vfprintf+0xa8>
    1dfe:	8b 32       	cpi	r24, 0x2B	; 43
    1e00:	69 f0       	breq	.+26     	; 0x1e1c <vfprintf+0x9e>
    1e02:	30 f4       	brcc	.+12     	; 0x1e10 <vfprintf+0x92>
    1e04:	80 32       	cpi	r24, 0x20	; 32
    1e06:	59 f0       	breq	.+22     	; 0x1e1e <vfprintf+0xa0>
    1e08:	83 32       	cpi	r24, 0x23	; 35
    1e0a:	69 f4       	brne	.+26     	; 0x1e26 <vfprintf+0xa8>
    1e0c:	20 61       	ori	r18, 0x10	; 16
    1e0e:	2c c0       	rjmp	.+88     	; 0x1e68 <vfprintf+0xea>
    1e10:	8d 32       	cpi	r24, 0x2D	; 45
    1e12:	39 f0       	breq	.+14     	; 0x1e22 <vfprintf+0xa4>
    1e14:	80 33       	cpi	r24, 0x30	; 48
    1e16:	39 f4       	brne	.+14     	; 0x1e26 <vfprintf+0xa8>
    1e18:	21 60       	ori	r18, 0x01	; 1
    1e1a:	26 c0       	rjmp	.+76     	; 0x1e68 <vfprintf+0xea>
    1e1c:	22 60       	ori	r18, 0x02	; 2
    1e1e:	24 60       	ori	r18, 0x04	; 4
    1e20:	23 c0       	rjmp	.+70     	; 0x1e68 <vfprintf+0xea>
    1e22:	28 60       	ori	r18, 0x08	; 8
    1e24:	21 c0       	rjmp	.+66     	; 0x1e68 <vfprintf+0xea>
    1e26:	27 fd       	sbrc	r18, 7
    1e28:	27 c0       	rjmp	.+78     	; 0x1e78 <vfprintf+0xfa>
    1e2a:	30 ed       	ldi	r19, 0xD0	; 208
    1e2c:	38 0f       	add	r19, r24
    1e2e:	3a 30       	cpi	r19, 0x0A	; 10
    1e30:	78 f4       	brcc	.+30     	; 0x1e50 <vfprintf+0xd2>
    1e32:	26 ff       	sbrs	r18, 6
    1e34:	06 c0       	rjmp	.+12     	; 0x1e42 <vfprintf+0xc4>
    1e36:	fa e0       	ldi	r31, 0x0A	; 10
    1e38:	5f 9e       	mul	r5, r31
    1e3a:	30 0d       	add	r19, r0
    1e3c:	11 24       	eor	r1, r1
    1e3e:	53 2e       	mov	r5, r19
    1e40:	13 c0       	rjmp	.+38     	; 0x1e68 <vfprintf+0xea>
    1e42:	8a e0       	ldi	r24, 0x0A	; 10
    1e44:	38 9e       	mul	r3, r24
    1e46:	30 0d       	add	r19, r0
    1e48:	11 24       	eor	r1, r1
    1e4a:	33 2e       	mov	r3, r19
    1e4c:	20 62       	ori	r18, 0x20	; 32
    1e4e:	0c c0       	rjmp	.+24     	; 0x1e68 <vfprintf+0xea>
    1e50:	8e 32       	cpi	r24, 0x2E	; 46
    1e52:	21 f4       	brne	.+8      	; 0x1e5c <vfprintf+0xde>
    1e54:	26 fd       	sbrc	r18, 6
    1e56:	5f c1       	rjmp	.+702    	; 0x2116 <vfprintf+0x398>
    1e58:	20 64       	ori	r18, 0x40	; 64
    1e5a:	06 c0       	rjmp	.+12     	; 0x1e68 <vfprintf+0xea>
    1e5c:	8c 36       	cpi	r24, 0x6C	; 108
    1e5e:	11 f4       	brne	.+4      	; 0x1e64 <vfprintf+0xe6>
    1e60:	20 68       	ori	r18, 0x80	; 128
    1e62:	02 c0       	rjmp	.+4      	; 0x1e68 <vfprintf+0xea>
    1e64:	88 36       	cpi	r24, 0x68	; 104
    1e66:	41 f4       	brne	.+16     	; 0x1e78 <vfprintf+0xfa>
    1e68:	f6 01       	movw	r30, r12
    1e6a:	93 fd       	sbrc	r25, 3
    1e6c:	85 91       	lpm	r24, Z+
    1e6e:	93 ff       	sbrs	r25, 3
    1e70:	81 91       	ld	r24, Z+
    1e72:	6f 01       	movw	r12, r30
    1e74:	81 11       	cpse	r24, r1
    1e76:	c1 cf       	rjmp	.-126    	; 0x1dfa <vfprintf+0x7c>
    1e78:	98 2f       	mov	r25, r24
    1e7a:	9f 7d       	andi	r25, 0xDF	; 223
    1e7c:	95 54       	subi	r25, 0x45	; 69
    1e7e:	93 30       	cpi	r25, 0x03	; 3
    1e80:	28 f4       	brcc	.+10     	; 0x1e8c <vfprintf+0x10e>
    1e82:	0c 5f       	subi	r16, 0xFC	; 252
    1e84:	1f 4f       	sbci	r17, 0xFF	; 255
    1e86:	ff e3       	ldi	r31, 0x3F	; 63
    1e88:	f9 83       	std	Y+1, r31	; 0x01
    1e8a:	0d c0       	rjmp	.+26     	; 0x1ea6 <vfprintf+0x128>
    1e8c:	83 36       	cpi	r24, 0x63	; 99
    1e8e:	31 f0       	breq	.+12     	; 0x1e9c <vfprintf+0x11e>
    1e90:	83 37       	cpi	r24, 0x73	; 115
    1e92:	71 f0       	breq	.+28     	; 0x1eb0 <vfprintf+0x132>
    1e94:	83 35       	cpi	r24, 0x53	; 83
    1e96:	09 f0       	breq	.+2      	; 0x1e9a <vfprintf+0x11c>
    1e98:	57 c0       	rjmp	.+174    	; 0x1f48 <vfprintf+0x1ca>
    1e9a:	21 c0       	rjmp	.+66     	; 0x1ede <vfprintf+0x160>
    1e9c:	f8 01       	movw	r30, r16
    1e9e:	80 81       	ld	r24, Z
    1ea0:	89 83       	std	Y+1, r24	; 0x01
    1ea2:	0e 5f       	subi	r16, 0xFE	; 254
    1ea4:	1f 4f       	sbci	r17, 0xFF	; 255
    1ea6:	44 24       	eor	r4, r4
    1ea8:	43 94       	inc	r4
    1eaa:	51 2c       	mov	r5, r1
    1eac:	54 01       	movw	r10, r8
    1eae:	14 c0       	rjmp	.+40     	; 0x1ed8 <vfprintf+0x15a>
    1eb0:	38 01       	movw	r6, r16
    1eb2:	f2 e0       	ldi	r31, 0x02	; 2
    1eb4:	6f 0e       	add	r6, r31
    1eb6:	71 1c       	adc	r7, r1
    1eb8:	f8 01       	movw	r30, r16
    1eba:	a0 80       	ld	r10, Z
    1ebc:	b1 80       	ldd	r11, Z+1	; 0x01
    1ebe:	26 ff       	sbrs	r18, 6
    1ec0:	03 c0       	rjmp	.+6      	; 0x1ec8 <vfprintf+0x14a>
    1ec2:	65 2d       	mov	r22, r5
    1ec4:	70 e0       	ldi	r23, 0x00	; 0
    1ec6:	02 c0       	rjmp	.+4      	; 0x1ecc <vfprintf+0x14e>
    1ec8:	6f ef       	ldi	r22, 0xFF	; 255
    1eca:	7f ef       	ldi	r23, 0xFF	; 255
    1ecc:	c5 01       	movw	r24, r10
    1ece:	2c 87       	std	Y+12, r18	; 0x0c
    1ed0:	97 d2       	rcall	.+1326   	; 0x2400 <strnlen>
    1ed2:	2c 01       	movw	r4, r24
    1ed4:	83 01       	movw	r16, r6
    1ed6:	2c 85       	ldd	r18, Y+12	; 0x0c
    1ed8:	2f 77       	andi	r18, 0x7F	; 127
    1eda:	22 2e       	mov	r2, r18
    1edc:	16 c0       	rjmp	.+44     	; 0x1f0a <vfprintf+0x18c>
    1ede:	38 01       	movw	r6, r16
    1ee0:	f2 e0       	ldi	r31, 0x02	; 2
    1ee2:	6f 0e       	add	r6, r31
    1ee4:	71 1c       	adc	r7, r1
    1ee6:	f8 01       	movw	r30, r16
    1ee8:	a0 80       	ld	r10, Z
    1eea:	b1 80       	ldd	r11, Z+1	; 0x01
    1eec:	26 ff       	sbrs	r18, 6
    1eee:	03 c0       	rjmp	.+6      	; 0x1ef6 <vfprintf+0x178>
    1ef0:	65 2d       	mov	r22, r5
    1ef2:	70 e0       	ldi	r23, 0x00	; 0
    1ef4:	02 c0       	rjmp	.+4      	; 0x1efa <vfprintf+0x17c>
    1ef6:	6f ef       	ldi	r22, 0xFF	; 255
    1ef8:	7f ef       	ldi	r23, 0xFF	; 255
    1efa:	c5 01       	movw	r24, r10
    1efc:	2c 87       	std	Y+12, r18	; 0x0c
    1efe:	6e d2       	rcall	.+1244   	; 0x23dc <strnlen_P>
    1f00:	2c 01       	movw	r4, r24
    1f02:	2c 85       	ldd	r18, Y+12	; 0x0c
    1f04:	20 68       	ori	r18, 0x80	; 128
    1f06:	22 2e       	mov	r2, r18
    1f08:	83 01       	movw	r16, r6
    1f0a:	23 fc       	sbrc	r2, 3
    1f0c:	19 c0       	rjmp	.+50     	; 0x1f40 <vfprintf+0x1c2>
    1f0e:	83 2d       	mov	r24, r3
    1f10:	90 e0       	ldi	r25, 0x00	; 0
    1f12:	48 16       	cp	r4, r24
    1f14:	59 06       	cpc	r5, r25
    1f16:	a0 f4       	brcc	.+40     	; 0x1f40 <vfprintf+0x1c2>
    1f18:	b7 01       	movw	r22, r14
    1f1a:	80 e2       	ldi	r24, 0x20	; 32
    1f1c:	90 e0       	ldi	r25, 0x00	; 0
    1f1e:	7b d2       	rcall	.+1270   	; 0x2416 <fputc>
    1f20:	3a 94       	dec	r3
    1f22:	f5 cf       	rjmp	.-22     	; 0x1f0e <vfprintf+0x190>
    1f24:	f5 01       	movw	r30, r10
    1f26:	27 fc       	sbrc	r2, 7
    1f28:	85 91       	lpm	r24, Z+
    1f2a:	27 fe       	sbrs	r2, 7
    1f2c:	81 91       	ld	r24, Z+
    1f2e:	5f 01       	movw	r10, r30
    1f30:	b7 01       	movw	r22, r14
    1f32:	90 e0       	ldi	r25, 0x00	; 0
    1f34:	70 d2       	rcall	.+1248   	; 0x2416 <fputc>
    1f36:	31 10       	cpse	r3, r1
    1f38:	3a 94       	dec	r3
    1f3a:	f1 e0       	ldi	r31, 0x01	; 1
    1f3c:	4f 1a       	sub	r4, r31
    1f3e:	51 08       	sbc	r5, r1
    1f40:	41 14       	cp	r4, r1
    1f42:	51 04       	cpc	r5, r1
    1f44:	79 f7       	brne	.-34     	; 0x1f24 <vfprintf+0x1a6>
    1f46:	de c0       	rjmp	.+444    	; 0x2104 <vfprintf+0x386>
    1f48:	84 36       	cpi	r24, 0x64	; 100
    1f4a:	11 f0       	breq	.+4      	; 0x1f50 <vfprintf+0x1d2>
    1f4c:	89 36       	cpi	r24, 0x69	; 105
    1f4e:	31 f5       	brne	.+76     	; 0x1f9c <vfprintf+0x21e>
    1f50:	f8 01       	movw	r30, r16
    1f52:	27 ff       	sbrs	r18, 7
    1f54:	07 c0       	rjmp	.+14     	; 0x1f64 <vfprintf+0x1e6>
    1f56:	60 81       	ld	r22, Z
    1f58:	71 81       	ldd	r23, Z+1	; 0x01
    1f5a:	82 81       	ldd	r24, Z+2	; 0x02
    1f5c:	93 81       	ldd	r25, Z+3	; 0x03
    1f5e:	0c 5f       	subi	r16, 0xFC	; 252
    1f60:	1f 4f       	sbci	r17, 0xFF	; 255
    1f62:	08 c0       	rjmp	.+16     	; 0x1f74 <vfprintf+0x1f6>
    1f64:	60 81       	ld	r22, Z
    1f66:	71 81       	ldd	r23, Z+1	; 0x01
    1f68:	07 2e       	mov	r0, r23
    1f6a:	00 0c       	add	r0, r0
    1f6c:	88 0b       	sbc	r24, r24
    1f6e:	99 0b       	sbc	r25, r25
    1f70:	0e 5f       	subi	r16, 0xFE	; 254
    1f72:	1f 4f       	sbci	r17, 0xFF	; 255
    1f74:	2f 76       	andi	r18, 0x6F	; 111
    1f76:	72 2e       	mov	r7, r18
    1f78:	97 ff       	sbrs	r25, 7
    1f7a:	09 c0       	rjmp	.+18     	; 0x1f8e <vfprintf+0x210>
    1f7c:	90 95       	com	r25
    1f7e:	80 95       	com	r24
    1f80:	70 95       	com	r23
    1f82:	61 95       	neg	r22
    1f84:	7f 4f       	sbci	r23, 0xFF	; 255
    1f86:	8f 4f       	sbci	r24, 0xFF	; 255
    1f88:	9f 4f       	sbci	r25, 0xFF	; 255
    1f8a:	20 68       	ori	r18, 0x80	; 128
    1f8c:	72 2e       	mov	r7, r18
    1f8e:	2a e0       	ldi	r18, 0x0A	; 10
    1f90:	30 e0       	ldi	r19, 0x00	; 0
    1f92:	a4 01       	movw	r20, r8
    1f94:	78 d2       	rcall	.+1264   	; 0x2486 <__ultoa_invert>
    1f96:	a8 2e       	mov	r10, r24
    1f98:	a8 18       	sub	r10, r8
    1f9a:	43 c0       	rjmp	.+134    	; 0x2022 <vfprintf+0x2a4>
    1f9c:	85 37       	cpi	r24, 0x75	; 117
    1f9e:	29 f4       	brne	.+10     	; 0x1faa <vfprintf+0x22c>
    1fa0:	2f 7e       	andi	r18, 0xEF	; 239
    1fa2:	b2 2e       	mov	r11, r18
    1fa4:	2a e0       	ldi	r18, 0x0A	; 10
    1fa6:	30 e0       	ldi	r19, 0x00	; 0
    1fa8:	25 c0       	rjmp	.+74     	; 0x1ff4 <vfprintf+0x276>
    1faa:	f2 2f       	mov	r31, r18
    1fac:	f9 7f       	andi	r31, 0xF9	; 249
    1fae:	bf 2e       	mov	r11, r31
    1fb0:	8f 36       	cpi	r24, 0x6F	; 111
    1fb2:	c1 f0       	breq	.+48     	; 0x1fe4 <vfprintf+0x266>
    1fb4:	18 f4       	brcc	.+6      	; 0x1fbc <vfprintf+0x23e>
    1fb6:	88 35       	cpi	r24, 0x58	; 88
    1fb8:	79 f0       	breq	.+30     	; 0x1fd8 <vfprintf+0x25a>
    1fba:	ad c0       	rjmp	.+346    	; 0x2116 <vfprintf+0x398>
    1fbc:	80 37       	cpi	r24, 0x70	; 112
    1fbe:	19 f0       	breq	.+6      	; 0x1fc6 <vfprintf+0x248>
    1fc0:	88 37       	cpi	r24, 0x78	; 120
    1fc2:	21 f0       	breq	.+8      	; 0x1fcc <vfprintf+0x24e>
    1fc4:	a8 c0       	rjmp	.+336    	; 0x2116 <vfprintf+0x398>
    1fc6:	2f 2f       	mov	r18, r31
    1fc8:	20 61       	ori	r18, 0x10	; 16
    1fca:	b2 2e       	mov	r11, r18
    1fcc:	b4 fe       	sbrs	r11, 4
    1fce:	0d c0       	rjmp	.+26     	; 0x1fea <vfprintf+0x26c>
    1fd0:	8b 2d       	mov	r24, r11
    1fd2:	84 60       	ori	r24, 0x04	; 4
    1fd4:	b8 2e       	mov	r11, r24
    1fd6:	09 c0       	rjmp	.+18     	; 0x1fea <vfprintf+0x26c>
    1fd8:	24 ff       	sbrs	r18, 4
    1fda:	0a c0       	rjmp	.+20     	; 0x1ff0 <vfprintf+0x272>
    1fdc:	9f 2f       	mov	r25, r31
    1fde:	96 60       	ori	r25, 0x06	; 6
    1fe0:	b9 2e       	mov	r11, r25
    1fe2:	06 c0       	rjmp	.+12     	; 0x1ff0 <vfprintf+0x272>
    1fe4:	28 e0       	ldi	r18, 0x08	; 8
    1fe6:	30 e0       	ldi	r19, 0x00	; 0
    1fe8:	05 c0       	rjmp	.+10     	; 0x1ff4 <vfprintf+0x276>
    1fea:	20 e1       	ldi	r18, 0x10	; 16
    1fec:	30 e0       	ldi	r19, 0x00	; 0
    1fee:	02 c0       	rjmp	.+4      	; 0x1ff4 <vfprintf+0x276>
    1ff0:	20 e1       	ldi	r18, 0x10	; 16
    1ff2:	32 e0       	ldi	r19, 0x02	; 2
    1ff4:	f8 01       	movw	r30, r16
    1ff6:	b7 fe       	sbrs	r11, 7
    1ff8:	07 c0       	rjmp	.+14     	; 0x2008 <vfprintf+0x28a>
    1ffa:	60 81       	ld	r22, Z
    1ffc:	71 81       	ldd	r23, Z+1	; 0x01
    1ffe:	82 81       	ldd	r24, Z+2	; 0x02
    2000:	93 81       	ldd	r25, Z+3	; 0x03
    2002:	0c 5f       	subi	r16, 0xFC	; 252
    2004:	1f 4f       	sbci	r17, 0xFF	; 255
    2006:	06 c0       	rjmp	.+12     	; 0x2014 <vfprintf+0x296>
    2008:	60 81       	ld	r22, Z
    200a:	71 81       	ldd	r23, Z+1	; 0x01
    200c:	80 e0       	ldi	r24, 0x00	; 0
    200e:	90 e0       	ldi	r25, 0x00	; 0
    2010:	0e 5f       	subi	r16, 0xFE	; 254
    2012:	1f 4f       	sbci	r17, 0xFF	; 255
    2014:	a4 01       	movw	r20, r8
    2016:	37 d2       	rcall	.+1134   	; 0x2486 <__ultoa_invert>
    2018:	a8 2e       	mov	r10, r24
    201a:	a8 18       	sub	r10, r8
    201c:	fb 2d       	mov	r31, r11
    201e:	ff 77       	andi	r31, 0x7F	; 127
    2020:	7f 2e       	mov	r7, r31
    2022:	76 fe       	sbrs	r7, 6
    2024:	0b c0       	rjmp	.+22     	; 0x203c <vfprintf+0x2be>
    2026:	37 2d       	mov	r19, r7
    2028:	3e 7f       	andi	r19, 0xFE	; 254
    202a:	a5 14       	cp	r10, r5
    202c:	50 f4       	brcc	.+20     	; 0x2042 <vfprintf+0x2c4>
    202e:	74 fe       	sbrs	r7, 4
    2030:	0a c0       	rjmp	.+20     	; 0x2046 <vfprintf+0x2c8>
    2032:	72 fc       	sbrc	r7, 2
    2034:	08 c0       	rjmp	.+16     	; 0x2046 <vfprintf+0x2c8>
    2036:	37 2d       	mov	r19, r7
    2038:	3e 7e       	andi	r19, 0xEE	; 238
    203a:	05 c0       	rjmp	.+10     	; 0x2046 <vfprintf+0x2c8>
    203c:	ba 2c       	mov	r11, r10
    203e:	37 2d       	mov	r19, r7
    2040:	03 c0       	rjmp	.+6      	; 0x2048 <vfprintf+0x2ca>
    2042:	ba 2c       	mov	r11, r10
    2044:	01 c0       	rjmp	.+2      	; 0x2048 <vfprintf+0x2ca>
    2046:	b5 2c       	mov	r11, r5
    2048:	34 ff       	sbrs	r19, 4
    204a:	0d c0       	rjmp	.+26     	; 0x2066 <vfprintf+0x2e8>
    204c:	fe 01       	movw	r30, r28
    204e:	ea 0d       	add	r30, r10
    2050:	f1 1d       	adc	r31, r1
    2052:	80 81       	ld	r24, Z
    2054:	80 33       	cpi	r24, 0x30	; 48
    2056:	11 f4       	brne	.+4      	; 0x205c <vfprintf+0x2de>
    2058:	39 7e       	andi	r19, 0xE9	; 233
    205a:	09 c0       	rjmp	.+18     	; 0x206e <vfprintf+0x2f0>
    205c:	32 ff       	sbrs	r19, 2
    205e:	06 c0       	rjmp	.+12     	; 0x206c <vfprintf+0x2ee>
    2060:	b3 94       	inc	r11
    2062:	b3 94       	inc	r11
    2064:	04 c0       	rjmp	.+8      	; 0x206e <vfprintf+0x2f0>
    2066:	83 2f       	mov	r24, r19
    2068:	86 78       	andi	r24, 0x86	; 134
    206a:	09 f0       	breq	.+2      	; 0x206e <vfprintf+0x2f0>
    206c:	b3 94       	inc	r11
    206e:	33 fd       	sbrc	r19, 3
    2070:	12 c0       	rjmp	.+36     	; 0x2096 <vfprintf+0x318>
    2072:	30 ff       	sbrs	r19, 0
    2074:	06 c0       	rjmp	.+12     	; 0x2082 <vfprintf+0x304>
    2076:	5a 2c       	mov	r5, r10
    2078:	b3 14       	cp	r11, r3
    207a:	18 f4       	brcc	.+6      	; 0x2082 <vfprintf+0x304>
    207c:	53 0c       	add	r5, r3
    207e:	5b 18       	sub	r5, r11
    2080:	b3 2c       	mov	r11, r3
    2082:	b3 14       	cp	r11, r3
    2084:	60 f4       	brcc	.+24     	; 0x209e <vfprintf+0x320>
    2086:	b7 01       	movw	r22, r14
    2088:	80 e2       	ldi	r24, 0x20	; 32
    208a:	90 e0       	ldi	r25, 0x00	; 0
    208c:	3c 87       	std	Y+12, r19	; 0x0c
    208e:	c3 d1       	rcall	.+902    	; 0x2416 <fputc>
    2090:	b3 94       	inc	r11
    2092:	3c 85       	ldd	r19, Y+12	; 0x0c
    2094:	f6 cf       	rjmp	.-20     	; 0x2082 <vfprintf+0x304>
    2096:	b3 14       	cp	r11, r3
    2098:	10 f4       	brcc	.+4      	; 0x209e <vfprintf+0x320>
    209a:	3b 18       	sub	r3, r11
    209c:	01 c0       	rjmp	.+2      	; 0x20a0 <vfprintf+0x322>
    209e:	31 2c       	mov	r3, r1
    20a0:	34 ff       	sbrs	r19, 4
    20a2:	11 c0       	rjmp	.+34     	; 0x20c6 <vfprintf+0x348>
    20a4:	b7 01       	movw	r22, r14
    20a6:	80 e3       	ldi	r24, 0x30	; 48
    20a8:	90 e0       	ldi	r25, 0x00	; 0
    20aa:	3c 87       	std	Y+12, r19	; 0x0c
    20ac:	b4 d1       	rcall	.+872    	; 0x2416 <fputc>
    20ae:	3c 85       	ldd	r19, Y+12	; 0x0c
    20b0:	32 ff       	sbrs	r19, 2
    20b2:	16 c0       	rjmp	.+44     	; 0x20e0 <vfprintf+0x362>
    20b4:	31 fd       	sbrc	r19, 1
    20b6:	03 c0       	rjmp	.+6      	; 0x20be <vfprintf+0x340>
    20b8:	88 e7       	ldi	r24, 0x78	; 120
    20ba:	90 e0       	ldi	r25, 0x00	; 0
    20bc:	02 c0       	rjmp	.+4      	; 0x20c2 <vfprintf+0x344>
    20be:	88 e5       	ldi	r24, 0x58	; 88
    20c0:	90 e0       	ldi	r25, 0x00	; 0
    20c2:	b7 01       	movw	r22, r14
    20c4:	0c c0       	rjmp	.+24     	; 0x20de <vfprintf+0x360>
    20c6:	83 2f       	mov	r24, r19
    20c8:	86 78       	andi	r24, 0x86	; 134
    20ca:	51 f0       	breq	.+20     	; 0x20e0 <vfprintf+0x362>
    20cc:	31 ff       	sbrs	r19, 1
    20ce:	02 c0       	rjmp	.+4      	; 0x20d4 <vfprintf+0x356>
    20d0:	8b e2       	ldi	r24, 0x2B	; 43
    20d2:	01 c0       	rjmp	.+2      	; 0x20d6 <vfprintf+0x358>
    20d4:	80 e2       	ldi	r24, 0x20	; 32
    20d6:	37 fd       	sbrc	r19, 7
    20d8:	8d e2       	ldi	r24, 0x2D	; 45
    20da:	b7 01       	movw	r22, r14
    20dc:	90 e0       	ldi	r25, 0x00	; 0
    20de:	9b d1       	rcall	.+822    	; 0x2416 <fputc>
    20e0:	a5 14       	cp	r10, r5
    20e2:	30 f4       	brcc	.+12     	; 0x20f0 <vfprintf+0x372>
    20e4:	b7 01       	movw	r22, r14
    20e6:	80 e3       	ldi	r24, 0x30	; 48
    20e8:	90 e0       	ldi	r25, 0x00	; 0
    20ea:	95 d1       	rcall	.+810    	; 0x2416 <fputc>
    20ec:	5a 94       	dec	r5
    20ee:	f8 cf       	rjmp	.-16     	; 0x20e0 <vfprintf+0x362>
    20f0:	aa 94       	dec	r10
    20f2:	f4 01       	movw	r30, r8
    20f4:	ea 0d       	add	r30, r10
    20f6:	f1 1d       	adc	r31, r1
    20f8:	80 81       	ld	r24, Z
    20fa:	b7 01       	movw	r22, r14
    20fc:	90 e0       	ldi	r25, 0x00	; 0
    20fe:	8b d1       	rcall	.+790    	; 0x2416 <fputc>
    2100:	a1 10       	cpse	r10, r1
    2102:	f6 cf       	rjmp	.-20     	; 0x20f0 <vfprintf+0x372>
    2104:	33 20       	and	r3, r3
    2106:	09 f4       	brne	.+2      	; 0x210a <vfprintf+0x38c>
    2108:	5d ce       	rjmp	.-838    	; 0x1dc4 <vfprintf+0x46>
    210a:	b7 01       	movw	r22, r14
    210c:	80 e2       	ldi	r24, 0x20	; 32
    210e:	90 e0       	ldi	r25, 0x00	; 0
    2110:	82 d1       	rcall	.+772    	; 0x2416 <fputc>
    2112:	3a 94       	dec	r3
    2114:	f7 cf       	rjmp	.-18     	; 0x2104 <vfprintf+0x386>
    2116:	f7 01       	movw	r30, r14
    2118:	86 81       	ldd	r24, Z+6	; 0x06
    211a:	97 81       	ldd	r25, Z+7	; 0x07
    211c:	02 c0       	rjmp	.+4      	; 0x2122 <vfprintf+0x3a4>
    211e:	8f ef       	ldi	r24, 0xFF	; 255
    2120:	9f ef       	ldi	r25, 0xFF	; 255
    2122:	2c 96       	adiw	r28, 0x0c	; 12
    2124:	cd bf       	out	0x3d, r28	; 61
    2126:	de bf       	out	0x3e, r29	; 62
    2128:	df 91       	pop	r29
    212a:	cf 91       	pop	r28
    212c:	1f 91       	pop	r17
    212e:	0f 91       	pop	r16
    2130:	ff 90       	pop	r15
    2132:	ef 90       	pop	r14
    2134:	df 90       	pop	r13
    2136:	cf 90       	pop	r12
    2138:	bf 90       	pop	r11
    213a:	af 90       	pop	r10
    213c:	9f 90       	pop	r9
    213e:	8f 90       	pop	r8
    2140:	7f 90       	pop	r7
    2142:	6f 90       	pop	r6
    2144:	5f 90       	pop	r5
    2146:	4f 90       	pop	r4
    2148:	3f 90       	pop	r3
    214a:	2f 90       	pop	r2
    214c:	08 95       	ret

0000214e <calloc>:
    214e:	0f 93       	push	r16
    2150:	1f 93       	push	r17
    2152:	cf 93       	push	r28
    2154:	df 93       	push	r29
    2156:	86 9f       	mul	r24, r22
    2158:	80 01       	movw	r16, r0
    215a:	87 9f       	mul	r24, r23
    215c:	10 0d       	add	r17, r0
    215e:	96 9f       	mul	r25, r22
    2160:	10 0d       	add	r17, r0
    2162:	11 24       	eor	r1, r1
    2164:	c8 01       	movw	r24, r16
    2166:	0d d0       	rcall	.+26     	; 0x2182 <malloc>
    2168:	ec 01       	movw	r28, r24
    216a:	00 97       	sbiw	r24, 0x00	; 0
    216c:	21 f0       	breq	.+8      	; 0x2176 <calloc+0x28>
    216e:	a8 01       	movw	r20, r16
    2170:	60 e0       	ldi	r22, 0x00	; 0
    2172:	70 e0       	ldi	r23, 0x00	; 0
    2174:	3e d1       	rcall	.+636    	; 0x23f2 <memset>
    2176:	ce 01       	movw	r24, r28
    2178:	df 91       	pop	r29
    217a:	cf 91       	pop	r28
    217c:	1f 91       	pop	r17
    217e:	0f 91       	pop	r16
    2180:	08 95       	ret

00002182 <malloc>:
    2182:	cf 93       	push	r28
    2184:	df 93       	push	r29
    2186:	82 30       	cpi	r24, 0x02	; 2
    2188:	91 05       	cpc	r25, r1
    218a:	10 f4       	brcc	.+4      	; 0x2190 <malloc+0xe>
    218c:	82 e0       	ldi	r24, 0x02	; 2
    218e:	90 e0       	ldi	r25, 0x00	; 0
    2190:	e0 91 2b 20 	lds	r30, 0x202B	; 0x80202b <__flp>
    2194:	f0 91 2c 20 	lds	r31, 0x202C	; 0x80202c <__flp+0x1>
    2198:	20 e0       	ldi	r18, 0x00	; 0
    219a:	30 e0       	ldi	r19, 0x00	; 0
    219c:	c0 e0       	ldi	r28, 0x00	; 0
    219e:	d0 e0       	ldi	r29, 0x00	; 0
    21a0:	30 97       	sbiw	r30, 0x00	; 0
    21a2:	11 f1       	breq	.+68     	; 0x21e8 <malloc+0x66>
    21a4:	40 81       	ld	r20, Z
    21a6:	51 81       	ldd	r21, Z+1	; 0x01
    21a8:	48 17       	cp	r20, r24
    21aa:	59 07       	cpc	r21, r25
    21ac:	c0 f0       	brcs	.+48     	; 0x21de <malloc+0x5c>
    21ae:	48 17       	cp	r20, r24
    21b0:	59 07       	cpc	r21, r25
    21b2:	61 f4       	brne	.+24     	; 0x21cc <malloc+0x4a>
    21b4:	82 81       	ldd	r24, Z+2	; 0x02
    21b6:	93 81       	ldd	r25, Z+3	; 0x03
    21b8:	20 97       	sbiw	r28, 0x00	; 0
    21ba:	19 f0       	breq	.+6      	; 0x21c2 <malloc+0x40>
    21bc:	8a 83       	std	Y+2, r24	; 0x02
    21be:	9b 83       	std	Y+3, r25	; 0x03
    21c0:	2b c0       	rjmp	.+86     	; 0x2218 <malloc+0x96>
    21c2:	80 93 2b 20 	sts	0x202B, r24	; 0x80202b <__flp>
    21c6:	90 93 2c 20 	sts	0x202C, r25	; 0x80202c <__flp+0x1>
    21ca:	26 c0       	rjmp	.+76     	; 0x2218 <malloc+0x96>
    21cc:	21 15       	cp	r18, r1
    21ce:	31 05       	cpc	r19, r1
    21d0:	19 f0       	breq	.+6      	; 0x21d8 <malloc+0x56>
    21d2:	42 17       	cp	r20, r18
    21d4:	53 07       	cpc	r21, r19
    21d6:	18 f4       	brcc	.+6      	; 0x21de <malloc+0x5c>
    21d8:	9a 01       	movw	r18, r20
    21da:	be 01       	movw	r22, r28
    21dc:	df 01       	movw	r26, r30
    21de:	ef 01       	movw	r28, r30
    21e0:	02 80       	ldd	r0, Z+2	; 0x02
    21e2:	f3 81       	ldd	r31, Z+3	; 0x03
    21e4:	e0 2d       	mov	r30, r0
    21e6:	dc cf       	rjmp	.-72     	; 0x21a0 <malloc+0x1e>
    21e8:	21 15       	cp	r18, r1
    21ea:	31 05       	cpc	r19, r1
    21ec:	09 f1       	breq	.+66     	; 0x2230 <malloc+0xae>
    21ee:	28 1b       	sub	r18, r24
    21f0:	39 0b       	sbc	r19, r25
    21f2:	24 30       	cpi	r18, 0x04	; 4
    21f4:	31 05       	cpc	r19, r1
    21f6:	90 f4       	brcc	.+36     	; 0x221c <malloc+0x9a>
    21f8:	12 96       	adiw	r26, 0x02	; 2
    21fa:	8d 91       	ld	r24, X+
    21fc:	9c 91       	ld	r25, X
    21fe:	13 97       	sbiw	r26, 0x03	; 3
    2200:	61 15       	cp	r22, r1
    2202:	71 05       	cpc	r23, r1
    2204:	21 f0       	breq	.+8      	; 0x220e <malloc+0x8c>
    2206:	fb 01       	movw	r30, r22
    2208:	82 83       	std	Z+2, r24	; 0x02
    220a:	93 83       	std	Z+3, r25	; 0x03
    220c:	04 c0       	rjmp	.+8      	; 0x2216 <malloc+0x94>
    220e:	80 93 2b 20 	sts	0x202B, r24	; 0x80202b <__flp>
    2212:	90 93 2c 20 	sts	0x202C, r25	; 0x80202c <__flp+0x1>
    2216:	fd 01       	movw	r30, r26
    2218:	32 96       	adiw	r30, 0x02	; 2
    221a:	44 c0       	rjmp	.+136    	; 0x22a4 <malloc+0x122>
    221c:	fd 01       	movw	r30, r26
    221e:	e2 0f       	add	r30, r18
    2220:	f3 1f       	adc	r31, r19
    2222:	81 93       	st	Z+, r24
    2224:	91 93       	st	Z+, r25
    2226:	22 50       	subi	r18, 0x02	; 2
    2228:	31 09       	sbc	r19, r1
    222a:	2d 93       	st	X+, r18
    222c:	3c 93       	st	X, r19
    222e:	3a c0       	rjmp	.+116    	; 0x22a4 <malloc+0x122>
    2230:	20 91 29 20 	lds	r18, 0x2029	; 0x802029 <__brkval>
    2234:	30 91 2a 20 	lds	r19, 0x202A	; 0x80202a <__brkval+0x1>
    2238:	23 2b       	or	r18, r19
    223a:	41 f4       	brne	.+16     	; 0x224c <malloc+0xca>
    223c:	20 91 02 20 	lds	r18, 0x2002	; 0x802002 <__malloc_heap_start>
    2240:	30 91 03 20 	lds	r19, 0x2003	; 0x802003 <__malloc_heap_start+0x1>
    2244:	20 93 29 20 	sts	0x2029, r18	; 0x802029 <__brkval>
    2248:	30 93 2a 20 	sts	0x202A, r19	; 0x80202a <__brkval+0x1>
    224c:	20 91 00 20 	lds	r18, 0x2000	; 0x802000 <__data_start>
    2250:	30 91 01 20 	lds	r19, 0x2001	; 0x802001 <__data_start+0x1>
    2254:	21 15       	cp	r18, r1
    2256:	31 05       	cpc	r19, r1
    2258:	41 f4       	brne	.+16     	; 0x226a <malloc+0xe8>
    225a:	2d b7       	in	r18, 0x3d	; 61
    225c:	3e b7       	in	r19, 0x3e	; 62
    225e:	40 91 04 20 	lds	r20, 0x2004	; 0x802004 <__malloc_margin>
    2262:	50 91 05 20 	lds	r21, 0x2005	; 0x802005 <__malloc_margin+0x1>
    2266:	24 1b       	sub	r18, r20
    2268:	35 0b       	sbc	r19, r21
    226a:	e0 91 29 20 	lds	r30, 0x2029	; 0x802029 <__brkval>
    226e:	f0 91 2a 20 	lds	r31, 0x202A	; 0x80202a <__brkval+0x1>
    2272:	e2 17       	cp	r30, r18
    2274:	f3 07       	cpc	r31, r19
    2276:	a0 f4       	brcc	.+40     	; 0x22a0 <malloc+0x11e>
    2278:	2e 1b       	sub	r18, r30
    227a:	3f 0b       	sbc	r19, r31
    227c:	28 17       	cp	r18, r24
    227e:	39 07       	cpc	r19, r25
    2280:	78 f0       	brcs	.+30     	; 0x22a0 <malloc+0x11e>
    2282:	ac 01       	movw	r20, r24
    2284:	4e 5f       	subi	r20, 0xFE	; 254
    2286:	5f 4f       	sbci	r21, 0xFF	; 255
    2288:	24 17       	cp	r18, r20
    228a:	35 07       	cpc	r19, r21
    228c:	48 f0       	brcs	.+18     	; 0x22a0 <malloc+0x11e>
    228e:	4e 0f       	add	r20, r30
    2290:	5f 1f       	adc	r21, r31
    2292:	40 93 29 20 	sts	0x2029, r20	; 0x802029 <__brkval>
    2296:	50 93 2a 20 	sts	0x202A, r21	; 0x80202a <__brkval+0x1>
    229a:	81 93       	st	Z+, r24
    229c:	91 93       	st	Z+, r25
    229e:	02 c0       	rjmp	.+4      	; 0x22a4 <malloc+0x122>
    22a0:	e0 e0       	ldi	r30, 0x00	; 0
    22a2:	f0 e0       	ldi	r31, 0x00	; 0
    22a4:	cf 01       	movw	r24, r30
    22a6:	df 91       	pop	r29
    22a8:	cf 91       	pop	r28
    22aa:	08 95       	ret

000022ac <free>:
    22ac:	0f 93       	push	r16
    22ae:	1f 93       	push	r17
    22b0:	cf 93       	push	r28
    22b2:	df 93       	push	r29
    22b4:	00 97       	sbiw	r24, 0x00	; 0
    22b6:	09 f4       	brne	.+2      	; 0x22ba <free+0xe>
    22b8:	8c c0       	rjmp	.+280    	; 0x23d2 <free+0x126>
    22ba:	fc 01       	movw	r30, r24
    22bc:	32 97       	sbiw	r30, 0x02	; 2
    22be:	12 82       	std	Z+2, r1	; 0x02
    22c0:	13 82       	std	Z+3, r1	; 0x03
    22c2:	00 91 2b 20 	lds	r16, 0x202B	; 0x80202b <__flp>
    22c6:	10 91 2c 20 	lds	r17, 0x202C	; 0x80202c <__flp+0x1>
    22ca:	01 15       	cp	r16, r1
    22cc:	11 05       	cpc	r17, r1
    22ce:	81 f4       	brne	.+32     	; 0x22f0 <free+0x44>
    22d0:	20 81       	ld	r18, Z
    22d2:	31 81       	ldd	r19, Z+1	; 0x01
    22d4:	82 0f       	add	r24, r18
    22d6:	93 1f       	adc	r25, r19
    22d8:	20 91 29 20 	lds	r18, 0x2029	; 0x802029 <__brkval>
    22dc:	30 91 2a 20 	lds	r19, 0x202A	; 0x80202a <__brkval+0x1>
    22e0:	28 17       	cp	r18, r24
    22e2:	39 07       	cpc	r19, r25
    22e4:	79 f5       	brne	.+94     	; 0x2344 <free+0x98>
    22e6:	e0 93 29 20 	sts	0x2029, r30	; 0x802029 <__brkval>
    22ea:	f0 93 2a 20 	sts	0x202A, r31	; 0x80202a <__brkval+0x1>
    22ee:	71 c0       	rjmp	.+226    	; 0x23d2 <free+0x126>
    22f0:	d8 01       	movw	r26, r16
    22f2:	40 e0       	ldi	r20, 0x00	; 0
    22f4:	50 e0       	ldi	r21, 0x00	; 0
    22f6:	ae 17       	cp	r26, r30
    22f8:	bf 07       	cpc	r27, r31
    22fa:	50 f4       	brcc	.+20     	; 0x2310 <free+0x64>
    22fc:	12 96       	adiw	r26, 0x02	; 2
    22fe:	2d 91       	ld	r18, X+
    2300:	3c 91       	ld	r19, X
    2302:	13 97       	sbiw	r26, 0x03	; 3
    2304:	ad 01       	movw	r20, r26
    2306:	21 15       	cp	r18, r1
    2308:	31 05       	cpc	r19, r1
    230a:	09 f1       	breq	.+66     	; 0x234e <free+0xa2>
    230c:	d9 01       	movw	r26, r18
    230e:	f3 cf       	rjmp	.-26     	; 0x22f6 <free+0x4a>
    2310:	9d 01       	movw	r18, r26
    2312:	da 01       	movw	r26, r20
    2314:	22 83       	std	Z+2, r18	; 0x02
    2316:	33 83       	std	Z+3, r19	; 0x03
    2318:	60 81       	ld	r22, Z
    231a:	71 81       	ldd	r23, Z+1	; 0x01
    231c:	86 0f       	add	r24, r22
    231e:	97 1f       	adc	r25, r23
    2320:	82 17       	cp	r24, r18
    2322:	93 07       	cpc	r25, r19
    2324:	69 f4       	brne	.+26     	; 0x2340 <free+0x94>
    2326:	ec 01       	movw	r28, r24
    2328:	28 81       	ld	r18, Y
    232a:	39 81       	ldd	r19, Y+1	; 0x01
    232c:	26 0f       	add	r18, r22
    232e:	37 1f       	adc	r19, r23
    2330:	2e 5f       	subi	r18, 0xFE	; 254
    2332:	3f 4f       	sbci	r19, 0xFF	; 255
    2334:	20 83       	st	Z, r18
    2336:	31 83       	std	Z+1, r19	; 0x01
    2338:	8a 81       	ldd	r24, Y+2	; 0x02
    233a:	9b 81       	ldd	r25, Y+3	; 0x03
    233c:	82 83       	std	Z+2, r24	; 0x02
    233e:	93 83       	std	Z+3, r25	; 0x03
    2340:	45 2b       	or	r20, r21
    2342:	29 f4       	brne	.+10     	; 0x234e <free+0xa2>
    2344:	e0 93 2b 20 	sts	0x202B, r30	; 0x80202b <__flp>
    2348:	f0 93 2c 20 	sts	0x202C, r31	; 0x80202c <__flp+0x1>
    234c:	42 c0       	rjmp	.+132    	; 0x23d2 <free+0x126>
    234e:	12 96       	adiw	r26, 0x02	; 2
    2350:	ed 93       	st	X+, r30
    2352:	fc 93       	st	X, r31
    2354:	13 97       	sbiw	r26, 0x03	; 3
    2356:	ed 01       	movw	r28, r26
    2358:	49 91       	ld	r20, Y+
    235a:	59 91       	ld	r21, Y+
    235c:	9e 01       	movw	r18, r28
    235e:	24 0f       	add	r18, r20
    2360:	35 1f       	adc	r19, r21
    2362:	e2 17       	cp	r30, r18
    2364:	f3 07       	cpc	r31, r19
    2366:	71 f4       	brne	.+28     	; 0x2384 <free+0xd8>
    2368:	80 81       	ld	r24, Z
    236a:	91 81       	ldd	r25, Z+1	; 0x01
    236c:	84 0f       	add	r24, r20
    236e:	95 1f       	adc	r25, r21
    2370:	02 96       	adiw	r24, 0x02	; 2
    2372:	8d 93       	st	X+, r24
    2374:	9c 93       	st	X, r25
    2376:	11 97       	sbiw	r26, 0x01	; 1
    2378:	82 81       	ldd	r24, Z+2	; 0x02
    237a:	93 81       	ldd	r25, Z+3	; 0x03
    237c:	12 96       	adiw	r26, 0x02	; 2
    237e:	8d 93       	st	X+, r24
    2380:	9c 93       	st	X, r25
    2382:	13 97       	sbiw	r26, 0x03	; 3
    2384:	e0 e0       	ldi	r30, 0x00	; 0
    2386:	f0 e0       	ldi	r31, 0x00	; 0
    2388:	d8 01       	movw	r26, r16
    238a:	12 96       	adiw	r26, 0x02	; 2
    238c:	8d 91       	ld	r24, X+
    238e:	9c 91       	ld	r25, X
    2390:	13 97       	sbiw	r26, 0x03	; 3
    2392:	00 97       	sbiw	r24, 0x00	; 0
    2394:	19 f0       	breq	.+6      	; 0x239c <free+0xf0>
    2396:	f8 01       	movw	r30, r16
    2398:	8c 01       	movw	r16, r24
    239a:	f6 cf       	rjmp	.-20     	; 0x2388 <free+0xdc>
    239c:	8d 91       	ld	r24, X+
    239e:	9c 91       	ld	r25, X
    23a0:	98 01       	movw	r18, r16
    23a2:	2e 5f       	subi	r18, 0xFE	; 254
    23a4:	3f 4f       	sbci	r19, 0xFF	; 255
    23a6:	82 0f       	add	r24, r18
    23a8:	93 1f       	adc	r25, r19
    23aa:	20 91 29 20 	lds	r18, 0x2029	; 0x802029 <__brkval>
    23ae:	30 91 2a 20 	lds	r19, 0x202A	; 0x80202a <__brkval+0x1>
    23b2:	28 17       	cp	r18, r24
    23b4:	39 07       	cpc	r19, r25
    23b6:	69 f4       	brne	.+26     	; 0x23d2 <free+0x126>
    23b8:	30 97       	sbiw	r30, 0x00	; 0
    23ba:	29 f4       	brne	.+10     	; 0x23c6 <free+0x11a>
    23bc:	10 92 2b 20 	sts	0x202B, r1	; 0x80202b <__flp>
    23c0:	10 92 2c 20 	sts	0x202C, r1	; 0x80202c <__flp+0x1>
    23c4:	02 c0       	rjmp	.+4      	; 0x23ca <free+0x11e>
    23c6:	12 82       	std	Z+2, r1	; 0x02
    23c8:	13 82       	std	Z+3, r1	; 0x03
    23ca:	00 93 29 20 	sts	0x2029, r16	; 0x802029 <__brkval>
    23ce:	10 93 2a 20 	sts	0x202A, r17	; 0x80202a <__brkval+0x1>
    23d2:	df 91       	pop	r29
    23d4:	cf 91       	pop	r28
    23d6:	1f 91       	pop	r17
    23d8:	0f 91       	pop	r16
    23da:	08 95       	ret

000023dc <strnlen_P>:
    23dc:	fc 01       	movw	r30, r24
    23de:	05 90       	lpm	r0, Z+
    23e0:	61 50       	subi	r22, 0x01	; 1
    23e2:	70 40       	sbci	r23, 0x00	; 0
    23e4:	01 10       	cpse	r0, r1
    23e6:	d8 f7       	brcc	.-10     	; 0x23de <strnlen_P+0x2>
    23e8:	80 95       	com	r24
    23ea:	90 95       	com	r25
    23ec:	8e 0f       	add	r24, r30
    23ee:	9f 1f       	adc	r25, r31
    23f0:	08 95       	ret

000023f2 <memset>:
    23f2:	dc 01       	movw	r26, r24
    23f4:	01 c0       	rjmp	.+2      	; 0x23f8 <memset+0x6>
    23f6:	6d 93       	st	X+, r22
    23f8:	41 50       	subi	r20, 0x01	; 1
    23fa:	50 40       	sbci	r21, 0x00	; 0
    23fc:	e0 f7       	brcc	.-8      	; 0x23f6 <memset+0x4>
    23fe:	08 95       	ret

00002400 <strnlen>:
    2400:	fc 01       	movw	r30, r24
    2402:	61 50       	subi	r22, 0x01	; 1
    2404:	70 40       	sbci	r23, 0x00	; 0
    2406:	01 90       	ld	r0, Z+
    2408:	01 10       	cpse	r0, r1
    240a:	d8 f7       	brcc	.-10     	; 0x2402 <strnlen+0x2>
    240c:	80 95       	com	r24
    240e:	90 95       	com	r25
    2410:	8e 0f       	add	r24, r30
    2412:	9f 1f       	adc	r25, r31
    2414:	08 95       	ret

00002416 <fputc>:
    2416:	0f 93       	push	r16
    2418:	1f 93       	push	r17
    241a:	cf 93       	push	r28
    241c:	df 93       	push	r29
    241e:	fb 01       	movw	r30, r22
    2420:	23 81       	ldd	r18, Z+3	; 0x03
    2422:	21 fd       	sbrc	r18, 1
    2424:	03 c0       	rjmp	.+6      	; 0x242c <fputc+0x16>
    2426:	8f ef       	ldi	r24, 0xFF	; 255
    2428:	9f ef       	ldi	r25, 0xFF	; 255
    242a:	28 c0       	rjmp	.+80     	; 0x247c <fputc+0x66>
    242c:	22 ff       	sbrs	r18, 2
    242e:	16 c0       	rjmp	.+44     	; 0x245c <fputc+0x46>
    2430:	46 81       	ldd	r20, Z+6	; 0x06
    2432:	57 81       	ldd	r21, Z+7	; 0x07
    2434:	24 81       	ldd	r18, Z+4	; 0x04
    2436:	35 81       	ldd	r19, Z+5	; 0x05
    2438:	42 17       	cp	r20, r18
    243a:	53 07       	cpc	r21, r19
    243c:	44 f4       	brge	.+16     	; 0x244e <fputc+0x38>
    243e:	a0 81       	ld	r26, Z
    2440:	b1 81       	ldd	r27, Z+1	; 0x01
    2442:	9d 01       	movw	r18, r26
    2444:	2f 5f       	subi	r18, 0xFF	; 255
    2446:	3f 4f       	sbci	r19, 0xFF	; 255
    2448:	20 83       	st	Z, r18
    244a:	31 83       	std	Z+1, r19	; 0x01
    244c:	8c 93       	st	X, r24
    244e:	26 81       	ldd	r18, Z+6	; 0x06
    2450:	37 81       	ldd	r19, Z+7	; 0x07
    2452:	2f 5f       	subi	r18, 0xFF	; 255
    2454:	3f 4f       	sbci	r19, 0xFF	; 255
    2456:	26 83       	std	Z+6, r18	; 0x06
    2458:	37 83       	std	Z+7, r19	; 0x07
    245a:	10 c0       	rjmp	.+32     	; 0x247c <fputc+0x66>
    245c:	eb 01       	movw	r28, r22
    245e:	09 2f       	mov	r16, r25
    2460:	18 2f       	mov	r17, r24
    2462:	00 84       	ldd	r0, Z+8	; 0x08
    2464:	f1 85       	ldd	r31, Z+9	; 0x09
    2466:	e0 2d       	mov	r30, r0
    2468:	19 95       	eicall
    246a:	89 2b       	or	r24, r25
    246c:	e1 f6       	brne	.-72     	; 0x2426 <fputc+0x10>
    246e:	8e 81       	ldd	r24, Y+6	; 0x06
    2470:	9f 81       	ldd	r25, Y+7	; 0x07
    2472:	01 96       	adiw	r24, 0x01	; 1
    2474:	8e 83       	std	Y+6, r24	; 0x06
    2476:	9f 83       	std	Y+7, r25	; 0x07
    2478:	81 2f       	mov	r24, r17
    247a:	90 2f       	mov	r25, r16
    247c:	df 91       	pop	r29
    247e:	cf 91       	pop	r28
    2480:	1f 91       	pop	r17
    2482:	0f 91       	pop	r16
    2484:	08 95       	ret

00002486 <__ultoa_invert>:
    2486:	fa 01       	movw	r30, r20
    2488:	aa 27       	eor	r26, r26
    248a:	28 30       	cpi	r18, 0x08	; 8
    248c:	51 f1       	breq	.+84     	; 0x24e2 <__ultoa_invert+0x5c>
    248e:	20 31       	cpi	r18, 0x10	; 16
    2490:	81 f1       	breq	.+96     	; 0x24f2 <__ultoa_invert+0x6c>
    2492:	e8 94       	clt
    2494:	6f 93       	push	r22
    2496:	6e 7f       	andi	r22, 0xFE	; 254
    2498:	6e 5f       	subi	r22, 0xFE	; 254
    249a:	7f 4f       	sbci	r23, 0xFF	; 255
    249c:	8f 4f       	sbci	r24, 0xFF	; 255
    249e:	9f 4f       	sbci	r25, 0xFF	; 255
    24a0:	af 4f       	sbci	r26, 0xFF	; 255
    24a2:	b1 e0       	ldi	r27, 0x01	; 1
    24a4:	3e d0       	rcall	.+124    	; 0x2522 <__ultoa_invert+0x9c>
    24a6:	b4 e0       	ldi	r27, 0x04	; 4
    24a8:	3c d0       	rcall	.+120    	; 0x2522 <__ultoa_invert+0x9c>
    24aa:	67 0f       	add	r22, r23
    24ac:	78 1f       	adc	r23, r24
    24ae:	89 1f       	adc	r24, r25
    24b0:	9a 1f       	adc	r25, r26
    24b2:	a1 1d       	adc	r26, r1
    24b4:	68 0f       	add	r22, r24
    24b6:	79 1f       	adc	r23, r25
    24b8:	8a 1f       	adc	r24, r26
    24ba:	91 1d       	adc	r25, r1
    24bc:	a1 1d       	adc	r26, r1
    24be:	6a 0f       	add	r22, r26
    24c0:	71 1d       	adc	r23, r1
    24c2:	81 1d       	adc	r24, r1
    24c4:	91 1d       	adc	r25, r1
    24c6:	a1 1d       	adc	r26, r1
    24c8:	20 d0       	rcall	.+64     	; 0x250a <__ultoa_invert+0x84>
    24ca:	09 f4       	brne	.+2      	; 0x24ce <__ultoa_invert+0x48>
    24cc:	68 94       	set
    24ce:	3f 91       	pop	r19
    24d0:	2a e0       	ldi	r18, 0x0A	; 10
    24d2:	26 9f       	mul	r18, r22
    24d4:	11 24       	eor	r1, r1
    24d6:	30 19       	sub	r19, r0
    24d8:	30 5d       	subi	r19, 0xD0	; 208
    24da:	31 93       	st	Z+, r19
    24dc:	de f6       	brtc	.-74     	; 0x2494 <__ultoa_invert+0xe>
    24de:	cf 01       	movw	r24, r30
    24e0:	08 95       	ret
    24e2:	46 2f       	mov	r20, r22
    24e4:	47 70       	andi	r20, 0x07	; 7
    24e6:	40 5d       	subi	r20, 0xD0	; 208
    24e8:	41 93       	st	Z+, r20
    24ea:	b3 e0       	ldi	r27, 0x03	; 3
    24ec:	0f d0       	rcall	.+30     	; 0x250c <__ultoa_invert+0x86>
    24ee:	c9 f7       	brne	.-14     	; 0x24e2 <__ultoa_invert+0x5c>
    24f0:	f6 cf       	rjmp	.-20     	; 0x24de <__ultoa_invert+0x58>
    24f2:	46 2f       	mov	r20, r22
    24f4:	4f 70       	andi	r20, 0x0F	; 15
    24f6:	40 5d       	subi	r20, 0xD0	; 208
    24f8:	4a 33       	cpi	r20, 0x3A	; 58
    24fa:	18 f0       	brcs	.+6      	; 0x2502 <__ultoa_invert+0x7c>
    24fc:	49 5d       	subi	r20, 0xD9	; 217
    24fe:	31 fd       	sbrc	r19, 1
    2500:	40 52       	subi	r20, 0x20	; 32
    2502:	41 93       	st	Z+, r20
    2504:	02 d0       	rcall	.+4      	; 0x250a <__ultoa_invert+0x84>
    2506:	a9 f7       	brne	.-22     	; 0x24f2 <__ultoa_invert+0x6c>
    2508:	ea cf       	rjmp	.-44     	; 0x24de <__ultoa_invert+0x58>
    250a:	b4 e0       	ldi	r27, 0x04	; 4
    250c:	a6 95       	lsr	r26
    250e:	97 95       	ror	r25
    2510:	87 95       	ror	r24
    2512:	77 95       	ror	r23
    2514:	67 95       	ror	r22
    2516:	ba 95       	dec	r27
    2518:	c9 f7       	brne	.-14     	; 0x250c <__ultoa_invert+0x86>
    251a:	00 97       	sbiw	r24, 0x00	; 0
    251c:	61 05       	cpc	r22, r1
    251e:	71 05       	cpc	r23, r1
    2520:	08 95       	ret
    2522:	9b 01       	movw	r18, r22
    2524:	ac 01       	movw	r20, r24
    2526:	0a 2e       	mov	r0, r26
    2528:	06 94       	lsr	r0
    252a:	57 95       	ror	r21
    252c:	47 95       	ror	r20
    252e:	37 95       	ror	r19
    2530:	27 95       	ror	r18
    2532:	ba 95       	dec	r27
    2534:	c9 f7       	brne	.-14     	; 0x2528 <__ultoa_invert+0xa2>
    2536:	62 0f       	add	r22, r18
    2538:	73 1f       	adc	r23, r19
    253a:	84 1f       	adc	r24, r20
    253c:	95 1f       	adc	r25, r21
    253e:	a0 1d       	adc	r26, r0
    2540:	08 95       	ret

00002542 <_exit>:
    2542:	f8 94       	cli

00002544 <__stop_program>:
    2544:	ff cf       	rjmp	.-2      	; 0x2544 <__stop_program>
